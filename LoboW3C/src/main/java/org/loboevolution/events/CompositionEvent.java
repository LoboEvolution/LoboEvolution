/*
 * MIT License
 *
 * Copyright (c) 2014 - 2024 LoboEvolution
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 * Contact info: ivan.difrancesco@yahoo.it
 */

package org.loboevolution.events;

import org.loboevolution.js.Window;

/**
 * The DOM CompositionEvent represents events that occur due to the user indirectly entering text.
 *
 * @see <a href="https://developer.mozilla.org/en-US/docs/Web/API/CompositionEvent">CompositionEvent - MDN</a>
 * @see <a href="https://w3c.github.io/uievents/#interface-compositionevent"># interface-compositionevent</a>
 */
public interface CompositionEvent extends UIEvent {

    /**
     * The data read-only property of the CompositionEvent interface returns the characters generated by the input method that raised the event; its exact nature varies depending on the type of event that generated the CompositionEvent object.
     *
     * @see <a href="https://developer.mozilla.org/en-US/docs/Web/API/CompositionEvent/data">CompositionEvent.data - MDN</a>
     * @see <a href="https://www.w3.org/TR/2014/WD-DOM-Level-3-Events-20140925/#dom-compositionevent-data">data - Document Object Model (DOM) Level 3 Events Specification</a>
     */
    String getData();

    /**
     * The initCompositionEvent() method of the CompositionEvent interface initializes the attributes of a CompositionEvent object instance.
     *
     * @see <a href="https://developer.mozilla.org/en-US/docs/Web/API/CompositionEvent/initCompositionEvent">CompositionEvent.initCompositionEvent - MDN</a>
     * @see <a href="https://www.w3.org/TR/2014/WD-DOM-Level-3-Events-20140925/#idl-interface-CompositionEvent-initializers">initCompositionEvent() - Document Object Model (DOM) Level 3 Events Specification</a>
     */
    void initCompositionEvent(String typeArg, Boolean bubblesArg,
                              boolean cancelableArg, Window viewArg, String dataArg);

    /**
     * The initCompositionEvent() method of the CompositionEvent interface initializes the attributes of a CompositionEvent object instance.
     *
     * @see <a href="https://developer.mozilla.org/en-US/docs/Web/API/CompositionEvent/initCompositionEvent">CompositionEvent.initCompositionEvent - MDN</a>
     * @see <a href="https://www.w3.org/TR/2014/WD-DOM-Level-3-Events-20140925/#idl-interface-CompositionEvent-initializers">initCompositionEvent() - Document Object Model (DOM) Level 3 Events Specification</a>
     */
    void initCompositionEvent(String typeArg, Boolean bubblesArg,
                              boolean cancelableArg, Window viewArg);

    /**
     * The initCompositionEvent() method of the CompositionEvent interface initializes the attributes of a CompositionEvent object instance.
     *
     * @see <a href="https://developer.mozilla.org/en-US/docs/Web/API/CompositionEvent/initCompositionEvent">CompositionEvent.initCompositionEvent - MDN</a>
     * @see <a href="https://www.w3.org/TR/2014/WD-DOM-Level-3-Events-20140925/#idl-interface-CompositionEvent-initializers">initCompositionEvent() - Document Object Model (DOM) Level 3 Events Specification</a>
     */
    void initCompositionEvent(String typeArg, Boolean bubblesArg,
                              boolean cancelableArg);

    /**
     * The initCompositionEvent() method of the CompositionEvent interface initializes the attributes of a CompositionEvent object instance.
     *
     * @see <a href="https://developer.mozilla.org/en-US/docs/Web/API/CompositionEvent/initCompositionEvent">CompositionEvent.initCompositionEvent - MDN</a>
     * @see <a href="https://www.w3.org/TR/2014/WD-DOM-Level-3-Events-20140925/#idl-interface-CompositionEvent-initializers">initCompositionEvent() - Document Object Model (DOM) Level 3 Events Specification</a>
     */
    void initCompositionEvent(String typeArg, Boolean bubblesArg);

    /**
     * The initCompositionEvent() method of the CompositionEvent interface initializes the attributes of a CompositionEvent object instance.
     *
     * @see <a href="https://developer.mozilla.org/en-US/docs/Web/API/CompositionEvent/initCompositionEvent">CompositionEvent.initCompositionEvent - MDN</a>
     * @see <a href="https://www.w3.org/TR/2014/WD-DOM-Level-3-Events-20140925/#idl-interface-CompositionEvent-initializers">initCompositionEvent() - Document Object Model (DOM) Level 3 Events Specification</a>
     */
    void initCompositionEvent(String typeArg);
}

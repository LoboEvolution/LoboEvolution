/*
This Java source file was generated by test-to-java.xsl
and is a derived work from the source document.
The source document contained the following notice:



Copyright (c) 2001-2004 World Wide Web Consortium,
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University).  All
Rights Reserved.  This program is distributed under the W3C's Software
Intellectual Property License.  This program is distributed in the
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.

See W3C License http://www.w3.org/Consortium/Legal/ for more details.


*/

package org.loboevolution.domts.level3;


import org.junit.Test;
import org.loboevolution.driver.LoboUnitTest;
import org.loboevolution.html.node.Document;
import org.loboevolution.html.node.Node;

import static org.junit.Assert.*;


/**
 * Check implementation of Node.getFeature on EntityReference.
 *
 * @author Curt Arnold
 * @see <a href="http://www.w3.org/TR/2003/CR-DOM-Level-3-Core-20031107/core#Node3-getFeature">http://www.w3.org/TR/2003/CR-DOM-Level-3-Core-20031107/core#Node3-getFeature</a>
 */
public class nodegetfeature04Test extends LoboUnitTest {
    @Test
    public void runTest() {
        Document doc;
        Node node;
        String nullVersion = null;

        Node featureImpl;
        boolean isSupported;
        doc = sampleXmlFile("barfoo.xml");
        node = doc.createEntityReference("ent1");
        featureImpl = node.getFeature("Core", nullVersion);
        assertSame("coreUnspecifiedVersion", node, featureImpl);
        featureImpl = node.getFeature("cOrE", nullVersion);
        assertSame("cOrEUnspecifiedVersion", node, featureImpl);
        featureImpl = node.getFeature("+cOrE", nullVersion);
        assertSame("PlusCoreUnspecifiedVersion", node, featureImpl);
        featureImpl = node.getFeature("bogus.feature", nullVersion);
        assertNull("unrecognizedFeature", featureImpl);
        featureImpl = node.getFeature("cOrE", "2.0");
        assertSame("Core20", node, featureImpl);
        featureImpl = node.getFeature("cOrE", "3.0");
        assertSame("Core30", node, featureImpl);
        isSupported = node.isSupported("XML", nullVersion);
        featureImpl = node.getFeature("XML", nullVersion);

        if (isSupported) {
            assertSame("XMLUnspecified", node, featureImpl);
        }
        isSupported = node.isSupported("SVG", nullVersion);
        featureImpl = node.getFeature("SVG", nullVersion);

        if (isSupported) {
            assertSame("SVGUnspecified", node, featureImpl);
        }
        isSupported = node.isSupported("HTML", nullVersion);
        featureImpl = node.getFeature("HTML", nullVersion);

        if (isSupported) {
            assertSame("HTMLUnspecified", node, featureImpl);
        }
        isSupported = node.isSupported("Events", nullVersion);
        featureImpl = node.getFeature("Events", nullVersion);

        if (isSupported) {
            assertSame("EventsUnspecified", node, featureImpl);
        }
        isSupported = node.isSupported("LS", nullVersion);
        featureImpl = node.getFeature("LS", nullVersion);

        if (isSupported) {
            assertSame("LSUnspecified", node, featureImpl);
        }
        isSupported = node.isSupported("LS-Async", nullVersion);
        featureImpl = node.getFeature("LS-Async", nullVersion);

        if (isSupported) {
            assertSame("LSAsyncUnspecified", node, featureImpl);
        }
        isSupported = node.isSupported("XPath", nullVersion);
        featureImpl = node.getFeature("XPath", nullVersion);

        if (isSupported) {
            assertSame("XPathUnspecified", node, featureImpl);
        }
        isSupported = node.isSupported("+HTML", nullVersion);
        featureImpl = node.getFeature("HTML", nullVersion);

        if (isSupported) {
            assertNotNull("PlusHTMLUnspecified", featureImpl);
        }
        isSupported = node.isSupported("+SVG", nullVersion);
        featureImpl = node.getFeature("SVG", nullVersion);

        if (isSupported) {
            assertNotNull("PlusSVGUnspecified", featureImpl);
        }
    }
}


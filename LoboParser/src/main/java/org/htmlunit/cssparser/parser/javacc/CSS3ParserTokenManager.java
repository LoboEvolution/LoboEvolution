/* CSS3ParserTokenManager.java */
/* Generated by: ParserGeneratorCC: Do not edit this line. CSS3ParserTokenManager.java */
package org.htmlunit.cssparser.parser.javacc;
import java.util.LinkedList;
import java.util.Locale;
import org.htmlunit.cssparser.dom.CSSValueImpl;
import org.htmlunit.cssparser.dom.Property;
import org.htmlunit.cssparser.parser.AbstractCSSParser;
import org.htmlunit.cssparser.parser.CSSParseException;
import org.htmlunit.cssparser.parser.LexicalUnit;
import org.htmlunit.cssparser.parser.LexicalUnitImpl;
import org.htmlunit.cssparser.parser.LexicalUnit.LexicalUnitType;
import org.htmlunit.cssparser.parser.Locatable;
import org.htmlunit.cssparser.parser.Locator;
import org.htmlunit.cssparser.parser.condition.AttributeCondition;
import org.htmlunit.cssparser.parser.condition.BeginHyphenAttributeCondition;
import org.htmlunit.cssparser.parser.condition.ClassCondition;
import org.htmlunit.cssparser.parser.condition.Condition;
import org.htmlunit.cssparser.parser.condition.IdCondition;
import org.htmlunit.cssparser.parser.condition.LangCondition;
import org.htmlunit.cssparser.parser.condition.NotPseudoClassCondition;
import org.htmlunit.cssparser.parser.condition.OneOfAttributeCondition;
import org.htmlunit.cssparser.parser.condition.PrefixAttributeCondition;
import org.htmlunit.cssparser.parser.condition.PseudoClassCondition;
import org.htmlunit.cssparser.parser.condition.SubstringAttributeCondition;
import org.htmlunit.cssparser.parser.condition.SuffixAttributeCondition;
import org.htmlunit.cssparser.parser.media.MediaQuery;
import org.htmlunit.cssparser.parser.media.MediaQueryList;
import org.htmlunit.cssparser.parser.selector.ChildSelector;
import org.htmlunit.cssparser.parser.selector.DescendantSelector;
import org.htmlunit.cssparser.parser.selector.DirectAdjacentSelector;
import org.htmlunit.cssparser.parser.selector.ElementSelector;
import org.htmlunit.cssparser.parser.selector.GeneralAdjacentSelector;
import org.htmlunit.cssparser.parser.selector.PseudoElementSelector;
import org.htmlunit.cssparser.parser.selector.Selector;
import org.htmlunit.cssparser.parser.selector.SelectorList;
import org.htmlunit.cssparser.parser.selector.SelectorListImpl;
import org.htmlunit.cssparser.parser.selector.SimpleSelector;
import org.htmlunit.cssparser.util.ParserUtils;

/** Token Manager. */
@SuppressWarnings ("unused")
public class CSS3ParserTokenManager implements CSS3ParserConstants {
private final int jjStopStringLiteralDfa_0(int pos, long active0, long active1){
   switch (pos)
   {
      case 0:
         if ((active0 & 0x400000000000000L) != 0x0L)
            return 1241;
         if ((active0 & 0x8001000000000000L) != 0x0L)
            return 547;
         if ((active0 & 0x220000L) != 0x0L)
         {
            jjmatchedKind = 22;
            return 184;
         }
         if ((active0 & 0x40000L) != 0x0L)
         {
            jjmatchedKind = 22;
            return 1148;
         }
         if ((active0 & 0x110000L) != 0x0L || (active1 & 0x200000000000000L) != 0x0L)
         {
            jjmatchedKind = 22;
            return 1242;
         }
         return -1;
      case 1:
         if ((active0 & 0x1000000000000L) != 0x0L)
            return 567;
         if ((active0 & 0x150000L) != 0x0L || (active1 & 0x200000000000000L) != 0x0L)
         {
            jjmatchedKind = 22;
            jjmatchedPos = 1;
            return 1242;
         }
         if ((active0 & 0x220000L) != 0x0L)
         {
            jjmatchedKind = 22;
            jjmatchedPos = 1;
            return 182;
         }
         return -1;
      case 2:
         if ((active0 & 0x340000L) != 0x0L || (active1 & 0x200000000000000L) != 0x0L)
         {
            jjmatchedKind = 22;
            jjmatchedPos = 2;
            return 1242;
         }
         if ((active0 & 0x10000L) != 0x0L)
            return 1242;
         if ((active0 & 0x20000L) != 0x0L)
            return 183;
         return -1;
      case 3:
         if ((active0 & 0x100000L) != 0x0L || (active1 & 0x200000000000000L) != 0x0L)
         {
            jjmatchedKind = 22;
            jjmatchedPos = 3;
            return 1242;
         }
         if ((active0 & 0x240000L) != 0x0L)
            return 1242;
         return -1;
      case 4:
         if ((active0 & 0x100000L) != 0x0L || (active1 & 0x200000000000000L) != 0x0L)
         {
            jjmatchedKind = 22;
            jjmatchedPos = 4;
            return 1242;
         }
         return -1;
      case 5:
         if ((active0 & 0x100000L) != 0x0L || (active1 & 0x200000000000000L) != 0x0L)
         {
            jjmatchedKind = 22;
            jjmatchedPos = 5;
            return 1242;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0, long active1){
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0, active1), pos + 1);
}
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_0(){
   switch(curChar)
   {
      case '$':
         return jjMoveStringLiteralDfa1_0(0x10000000000000L, 0x0L);
      case '(':
         return jjStopAtPos(0, 56);
      case ')':
         return jjStopAtPos(0, 57);
      case '*':
         jjmatchedKind = 61;
         return jjMoveStringLiteralDfa1_0(0x20000000000000L, 0x0L);
      case '+':
         return jjStopAtPos(0, 67);
      case ',':
         return jjStopAtPos(0, 70);
      case '-':
         jjmatchedKind = 63;
         return jjMoveStringLiteralDfa1_0(0x1000000000000L, 0x0L);
      case '.':
         return jjStartNfaWithStates_0(0, 58, 1241);
      case '/':
         jjmatchedKind = 62;
         return jjMoveStringLiteralDfa1_0(0x4L, 0x0L);
      case ':':
         return jjStopAtPos(0, 60);
      case ';':
         return jjStopAtPos(0, 59);
      case '<':
         return jjMoveStringLiteralDfa1_0(0x800000000000L, 0x0L);
      case '=':
         return jjStopAtPos(0, 64);
      case '>':
         return jjStopAtPos(0, 68);
      case '[':
         return jjStopAtPos(0, 65);
      case ']':
         return jjStopAtPos(0, 66);
      case '^':
         return jjMoveStringLiteralDfa1_0(0x8000000000000L, 0x0L);
      case 'A':
      case 'a':
         return jjMoveStringLiteralDfa1_0(0x10000L, 0x0L);
      case 'I':
      case 'i':
         return jjMoveStringLiteralDfa1_0(0x100000L, 0x0L);
      case 'N':
      case 'n':
         return jjMoveStringLiteralDfa1_0(0x220000L, 0x0L);
      case 'O':
      case 'o':
         return jjMoveStringLiteralDfa1_0(0x40000L, 0x0L);
      case 'P':
      case 'p':
         return jjMoveStringLiteralDfa1_0(0x0L, 0x200000000000000L);
      case '{':
         return jjStopAtPos(0, 54);
      case '|':
         return jjMoveStringLiteralDfa1_0(0x4000000000000L, 0x0L);
      case '}':
         return jjStopAtPos(0, 55);
      case '~':
         jjmatchedKind = 69;
         return jjMoveStringLiteralDfa1_0(0x2000000000000L, 0x0L);
      default :
         return jjMoveNfa_0(1, 0);
   }
}
private int jjMoveStringLiteralDfa1_0(long active0, long active1){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0, active1);
      return 1;
   }
   switch(curChar)
   {
      case '!':
         return jjMoveStringLiteralDfa2_0(active0, 0x800000000000L, active1, 0x0L);
      case '*':
         if ((active0 & 0x4L) != 0x0L)
            return jjStopAtPos(1, 2);
         break;
      case '-':
         return jjMoveStringLiteralDfa2_0(active0, 0x1000000000000L, active1, 0x0L);
      case '=':
         if ((active0 & 0x2000000000000L) != 0x0L)
            return jjStopAtPos(1, 49);
         else if ((active0 & 0x4000000000000L) != 0x0L)
            return jjStopAtPos(1, 50);
         else if ((active0 & 0x8000000000000L) != 0x0L)
            return jjStopAtPos(1, 51);
         else if ((active0 & 0x10000000000000L) != 0x0L)
            return jjStopAtPos(1, 52);
         else if ((active0 & 0x20000000000000L) != 0x0L)
            return jjStopAtPos(1, 53);
         break;
      case 'N':
      case 'n':
         return jjMoveStringLiteralDfa2_0(active0, 0x150000L, active1, 0x0L);
      case 'O':
      case 'o':
         return jjMoveStringLiteralDfa2_0(active0, 0x220000L, active1, 0x0L);
      case 'R':
      case 'r':
         return jjMoveStringLiteralDfa2_0(active0, 0x0L, active1, 0x200000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(0, active0, active1);
}
private int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(0, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0, active1);
      return 2;
   }
   switch(curChar)
   {
      case '-':
         return jjMoveStringLiteralDfa3_0(active0, 0x800000000000L, active1, 0x0L);
      case '>':
         if ((active0 & 0x1000000000000L) != 0x0L)
            return jjStopAtPos(2, 48);
         break;
      case 'D':
      case 'd':
         if ((active0 & 0x10000L) != 0x0L)
            return jjStartNfaWithStates_0(2, 16, 1242);
         break;
      case 'H':
      case 'h':
         return jjMoveStringLiteralDfa3_0(active0, 0x100000L, active1, 0x0L);
      case 'L':
      case 'l':
         return jjMoveStringLiteralDfa3_0(active0, 0x40000L, active1, 0x0L);
      case 'N':
      case 'n':
         return jjMoveStringLiteralDfa3_0(active0, 0x200000L, active1, 0x0L);
      case 'O':
      case 'o':
         return jjMoveStringLiteralDfa3_0(active0, 0x0L, active1, 0x200000000000000L);
      case 'T':
      case 't':
         if ((active0 & 0x20000L) != 0x0L)
            return jjStartNfaWithStates_0(2, 17, 183);
         break;
      default :
         break;
   }
   return jjStartNfa_0(1, active0, active1);
}
private int jjMoveStringLiteralDfa3_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(1, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0, active1);
      return 3;
   }
   switch(curChar)
   {
      case '-':
         if ((active0 & 0x800000000000L) != 0x0L)
            return jjStopAtPos(3, 47);
         break;
      case 'E':
      case 'e':
         if ((active0 & 0x200000L) != 0x0L)
            return jjStartNfaWithStates_0(3, 21, 1242);
         return jjMoveStringLiteralDfa4_0(active0, 0x100000L, active1, 0x0L);
      case 'G':
      case 'g':
         return jjMoveStringLiteralDfa4_0(active0, 0x0L, active1, 0x200000000000000L);
      case 'Y':
      case 'y':
         if ((active0 & 0x40000L) != 0x0L)
            return jjStartNfaWithStates_0(3, 18, 1242);
         break;
      default :
         break;
   }
   return jjStartNfa_0(2, active0, active1);
}
private int jjMoveStringLiteralDfa4_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(2, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(3, active0, active1);
      return 4;
   }
   switch(curChar)
   {
      case 'I':
      case 'i':
         return jjMoveStringLiteralDfa5_0(active0, 0x0L, active1, 0x200000000000000L);
      case 'R':
      case 'r':
         return jjMoveStringLiteralDfa5_0(active0, 0x100000L, active1, 0x0L);
      default :
         break;
   }
   return jjStartNfa_0(3, active0, active1);
}
private int jjMoveStringLiteralDfa5_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(3, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(4, active0, active1);
      return 5;
   }
   switch(curChar)
   {
      case 'D':
      case 'd':
         return jjMoveStringLiteralDfa6_0(active0, 0x0L, active1, 0x200000000000000L);
      case 'I':
      case 'i':
         return jjMoveStringLiteralDfa6_0(active0, 0x100000L, active1, 0x0L);
      default :
         break;
   }
   return jjStartNfa_0(4, active0, active1);
}
private int jjMoveStringLiteralDfa6_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(4, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(5, active0, active1);
      return 6;
   }
   switch(curChar)
   {
      case ':':
         if ((active1 & 0x200000000000000L) != 0x0L)
            return jjStopAtPos(6, 121);
         break;
      case 'T':
      case 't':
         if ((active0 & 0x100000L) != 0x0L)
            return jjStartNfaWithStates_0(6, 20, 1242);
         break;
      default :
         break;
   }
   return jjStartNfa_0(5, active0, active1);
}
private int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
static final long[] jjbitVec0 = {
   0xfffffffffffffffeL, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec2 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 1241;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((0x3ff000000000000L & l) != 0x0L)
                  {
                     if (kind > 19)
                        kind = 19;
                     { jjCheckNAddStates(0, 147); }
                  }
                  else if ((0x100003600L & l) != 0x0L)
                  {
                     if (kind > 1)
                        kind = 1;
                     { jjCheckNAdd(0); }
                  }
                  else if (curChar == 45)
                     { jjAddStates(148, 152); }
                  else if (curChar == 46)
                     { jjCheckNAddStates(153, 181); }
                  else if (curChar == 33)
                     { jjCheckNAddStates(182, 185); }
                  else if (curChar == 35)
                     { jjCheckNAddTwoStates(46, 47); }
                  else if (curChar == 39)
                     { jjCheckNAddStates(186, 188); }
                  else if (curChar == 34)
                     { jjCheckNAddStates(189, 191); }
                  break;
               case 182:
                  if ((0x3ff200000000000L & l) != 0x0L)
                     { jjCheckNAddStates(192, 194); }
                  else if (curChar == 40)
                  {
                     if (kind > 118)
                        kind = 118;
                  }
                  if ((0x3ff200000000000L & l) != 0x0L)
                  {
                     if (kind > 22)
                        kind = 22;
                     { jjCheckNAddTwoStates(548, 549); }
                  }
                  break;
               case 547:
                  if (curChar == 45)
                     { jjAddStates(195, 196); }
                  break;
               case 1241:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(197, 200); }
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(201, 203); }
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(204, 206); }
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(207, 209); }
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(210, 213); }
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(214, 217); }
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(218, 221); }
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(222, 225); }
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(226, 228); }
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(229, 231); }
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(232, 234); }
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(235, 237); }
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(238, 240); }
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(241, 243); }
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(244, 246); }
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(247, 249); }
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(250, 252); }
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(253, 255); }
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(256, 258); }
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(259, 261); }
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(262, 264); }
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(265, 267); }
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(268, 270); }
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(271, 273); }
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(274, 276); }
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(277, 279); }
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(280, 282); }
                  if ((0x3ff000000000000L & l) != 0x0L)
                  {
                     if (kind > 24)
                        kind = 24;
                     { jjCheckNAddTwoStates(205, 206); }
                  }
                  if ((0x3ff000000000000L & l) != 0x0L)
                  {
                     if (kind > 19)
                        kind = 19;
                     { jjCheckNAddTwoStates(201, 202); }
                  }
                  break;
               case 1148:
                  if ((0x3ff200000000000L & l) != 0x0L)
                     { jjCheckNAddStates(192, 194); }
                  else if (curChar == 40)
                  {
                     if (kind > 118)
                        kind = 118;
                  }
                  if ((0x3ff200000000000L & l) != 0x0L)
                  {
                     if (kind > 22)
                        kind = 22;
                     { jjCheckNAddTwoStates(548, 549); }
                  }
                  break;
               case 184:
                  if ((0x3ff200000000000L & l) != 0x0L)
                     { jjCheckNAddStates(192, 194); }
                  else if (curChar == 40)
                  {
                     if (kind > 118)
                        kind = 118;
                  }
                  if ((0x3ff200000000000L & l) != 0x0L)
                  {
                     if (kind > 22)
                        kind = 22;
                     { jjCheckNAddTwoStates(548, 549); }
                  }
                  break;
               case 183:
                  if ((0x3ff200000000000L & l) != 0x0L)
                     { jjCheckNAddStates(192, 194); }
                  else if (curChar == 40)
                  {
                     if (kind > 118)
                        kind = 118;
                  }
                  if ((0x3ff200000000000L & l) != 0x0L)
                  {
                     if (kind > 22)
                        kind = 22;
                     { jjCheckNAddTwoStates(548, 549); }
                  }
                  else if (curChar == 40)
                  {
                     if (kind > 108)
                        kind = 108;
                  }
                  break;
               case 1242:
                  if ((0x3ff200000000000L & l) != 0x0L)
                     { jjCheckNAddStates(192, 194); }
                  else if (curChar == 40)
                  {
                     if (kind > 118)
                        kind = 118;
                  }
                  if ((0x3ff200000000000L & l) != 0x0L)
                  {
                     if (kind > 22)
                        kind = 22;
                     { jjCheckNAddTwoStates(548, 549); }
                  }
                  break;
               case 0:
                  if ((0x100003600L & l) == 0x0L)
                     break;
                  if (kind > 1)
                     kind = 1;
                  { jjCheckNAdd(0); }
                  break;
               case 2:
                  if ((0xfffffffbffffcbffL & l) != 0x0L)
                     { jjCheckNAddStates(189, 191); }
                  break;
               case 3:
                  if (curChar == 34 && kind > 25)
                     kind = 25;
                  break;
               case 5:
                  if ((0x3400L & l) != 0x0L)
                     { jjCheckNAddStates(189, 191); }
                  break;
               case 6:
                  if (curChar == 10)
                     { jjCheckNAddStates(189, 191); }
                  break;
               case 7:
               case 11:
                  if (curChar == 13)
                     { jjCheckNAdd(6); }
                  break;
               case 8:
                  if ((0xfc00ffffffffcbffL & l) != 0x0L)
                     { jjCheckNAddStates(189, 191); }
                  break;
               case 9:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(283, 292); }
                  break;
               case 10:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(293, 297); }
                  break;
               case 12:
                  if ((0x100003600L & l) != 0x0L)
                     { jjCheckNAddStates(189, 191); }
                  break;
               case 13:
               case 15:
               case 18:
               case 22:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAdd(10); }
                  break;
               case 14:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 16:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 17:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 19:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 20:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 21:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 22;
                  break;
               case 23:
                  if (curChar == 39)
                     { jjCheckNAddStates(186, 188); }
                  break;
               case 24:
                  if ((0xffffff7fffffcbffL & l) != 0x0L)
                     { jjCheckNAddStates(186, 188); }
                  break;
               case 25:
                  if (curChar == 39 && kind > 25)
                     kind = 25;
                  break;
               case 27:
                  if ((0x3400L & l) != 0x0L)
                     { jjCheckNAddStates(186, 188); }
                  break;
               case 28:
                  if (curChar == 10)
                     { jjCheckNAddStates(186, 188); }
                  break;
               case 29:
               case 33:
                  if (curChar == 13)
                     { jjCheckNAdd(28); }
                  break;
               case 30:
                  if ((0xfc00ffffffffcbffL & l) != 0x0L)
                     { jjCheckNAddStates(186, 188); }
                  break;
               case 31:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(298, 307); }
                  break;
               case 32:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(308, 312); }
                  break;
               case 34:
                  if ((0x100003600L & l) != 0x0L)
                     { jjCheckNAddStates(186, 188); }
                  break;
               case 35:
               case 37:
               case 40:
               case 44:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAdd(32); }
                  break;
               case 36:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 38:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 39;
                  break;
               case 39:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 40;
                  break;
               case 41:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 42;
                  break;
               case 42:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 43;
                  break;
               case 43:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 44;
                  break;
               case 45:
                  if (curChar == 35)
                     { jjCheckNAddTwoStates(46, 47); }
                  break;
               case 46:
                  if ((0x3ff200000000000L & l) == 0x0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  { jjCheckNAddTwoStates(46, 47); }
                  break;
               case 48:
                  if ((0xfc00ffffffffcbffL & l) == 0x0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  { jjCheckNAddTwoStates(46, 47); }
                  break;
               case 49:
                  if ((0x3ff000000000000L & l) == 0x0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  { jjCheckNAddStates(313, 321); }
                  break;
               case 50:
                  if ((0x3ff000000000000L & l) == 0x0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  { jjCheckNAddStates(322, 325); }
                  break;
               case 51:
                  if (curChar != 10)
                     break;
                  if (kind > 71)
                     kind = 71;
                  { jjCheckNAddTwoStates(46, 47); }
                  break;
               case 52:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 53:
                  if ((0x100003600L & l) == 0x0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  { jjCheckNAddTwoStates(46, 47); }
                  break;
               case 54:
               case 56:
               case 59:
               case 63:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAdd(50); }
                  break;
               case 55:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 56;
                  break;
               case 57:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 58;
                  break;
               case 58:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 59;
                  break;
               case 60:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 61;
                  break;
               case 61:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 62;
                  break;
               case 62:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 63;
                  break;
               case 64:
                  if (curChar == 33)
                     { jjCheckNAddStates(182, 185); }
                  break;
               case 65:
                  if ((0x100003600L & l) != 0x0L)
                     { jjCheckNAddStates(182, 185); }
                  break;
               case 66:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 67;
                  break;
               case 67:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(68, 69); }
                  break;
               case 68:
                  if ((0xfffffbffffffffffL & l) != 0x0L)
                     { jjCheckNAddTwoStates(68, 69); }
                  break;
               case 69:
                  if (curChar == 42)
                     { jjCheckNAddStates(326, 328); }
                  break;
               case 70:
                  if ((0xffff7bffffffffffL & l) != 0x0L)
                     { jjCheckNAddTwoStates(71, 72); }
                  break;
               case 71:
                  if ((0xfffffbffffffffffL & l) != 0x0L)
                     { jjCheckNAddTwoStates(71, 72); }
                  break;
               case 72:
                  if (curChar == 42)
                     { jjCheckNAddStates(329, 331); }
                  break;
               case 73:
                  if (curChar == 47)
                     { jjCheckNAddStates(182, 185); }
                  break;
               case 84:
                  if (curChar != 52)
                     break;
                  if (kind > 77)
                     kind = 77;
                  { jjAddStates(332, 333); }
                  break;
               case 85:
                  if (curChar == 10 && kind > 77)
                     kind = 77;
                  break;
               case 86:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 85;
                  break;
               case 87:
                  if ((0x100003600L & l) != 0x0L && kind > 77)
                     kind = 77;
                  break;
               case 88:
                  if (curChar == 53)
                     { jjCheckNAdd(84); }
                  break;
               case 89:
                  if (curChar == 55)
                     { jjCheckNAdd(84); }
                  break;
               case 90:
                  if (curChar == 48)
                     { jjCheckNAddStates(334, 338); }
                  break;
               case 91:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(88, 89); }
                  break;
               case 92:
                  if (curChar == 48)
                     { jjCheckNAddStates(339, 341); }
                  break;
               case 93:
                  if (curChar == 48)
                     { jjCheckNAddStates(342, 345); }
                  break;
               case 96:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(82, 83); }
                  break;
               case 97:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 96;
                  break;
               case 98:
                  if ((0x100003600L & l) != 0x0L)
                     { jjCheckNAddTwoStates(82, 83); }
                  break;
               case 99:
                  if (curChar == 52)
                     { jjCheckNAdd(95); }
                  break;
               case 100:
                  if (curChar == 54)
                     { jjCheckNAdd(95); }
                  break;
               case 101:
                  if (curChar == 48)
                     { jjCheckNAddStates(346, 350); }
                  break;
               case 102:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(99, 100); }
                  break;
               case 103:
                  if (curChar == 48)
                     { jjCheckNAddStates(351, 353); }
                  break;
               case 104:
                  if (curChar == 48)
                     { jjCheckNAddStates(354, 357); }
                  break;
               case 106:
                  if (curChar == 49)
                     { jjCheckNAddStates(358, 361); }
                  break;
               case 107:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(81, 94); }
                  break;
               case 108:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 107;
                  break;
               case 109:
                  if ((0x100003600L & l) != 0x0L)
                     { jjCheckNAddTwoStates(81, 94); }
                  break;
               case 110:
                  if (curChar == 52)
                     { jjCheckNAdd(106); }
                  break;
               case 111:
                  if (curChar == 54)
                     { jjCheckNAdd(106); }
                  break;
               case 112:
                  if (curChar == 48)
                     { jjCheckNAddStates(362, 366); }
                  break;
               case 113:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(110, 111); }
                  break;
               case 114:
                  if (curChar == 48)
                     { jjCheckNAddStates(367, 369); }
                  break;
               case 115:
                  if (curChar == 48)
                     { jjCheckNAddStates(370, 373); }
                  break;
               case 117:
                  if (curChar == 52)
                     { jjCheckNAddStates(374, 377); }
                  break;
               case 118:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(80, 105); }
                  break;
               case 119:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 118;
                  break;
               case 120:
                  if ((0x100003600L & l) != 0x0L)
                     { jjCheckNAddTwoStates(80, 105); }
                  break;
               case 121:
                  if (curChar == 53)
                     { jjCheckNAdd(117); }
                  break;
               case 122:
                  if (curChar == 55)
                     { jjCheckNAdd(117); }
                  break;
               case 123:
                  if (curChar == 48)
                     { jjCheckNAddStates(378, 382); }
                  break;
               case 124:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(121, 122); }
                  break;
               case 125:
                  if (curChar == 48)
                     { jjCheckNAddStates(383, 385); }
                  break;
               case 126:
                  if (curChar == 48)
                     { jjCheckNAddStates(386, 389); }
                  break;
               case 128:
                  if (curChar == 50)
                     { jjCheckNAddStates(390, 393); }
                  break;
               case 129:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(79, 116); }
                  break;
               case 130:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 129;
                  break;
               case 131:
                  if ((0x100003600L & l) != 0x0L)
                     { jjCheckNAddTwoStates(79, 116); }
                  break;
               case 132:
                  if (curChar == 53)
                     { jjCheckNAdd(128); }
                  break;
               case 133:
                  if (curChar == 55)
                     { jjCheckNAdd(128); }
                  break;
               case 134:
                  if (curChar == 48)
                     { jjCheckNAddStates(394, 398); }
                  break;
               case 135:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(132, 133); }
                  break;
               case 136:
                  if (curChar == 48)
                     { jjCheckNAddStates(399, 401); }
                  break;
               case 137:
                  if (curChar == 48)
                     { jjCheckNAddStates(402, 405); }
                  break;
               case 139:
                  if (curChar == 49)
                     { jjCheckNAddStates(406, 409); }
                  break;
               case 140:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(78, 127); }
                  break;
               case 141:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 140;
                  break;
               case 142:
                  if ((0x100003600L & l) != 0x0L)
                     { jjCheckNAddTwoStates(78, 127); }
                  break;
               case 143:
                  if (curChar == 53)
                     { jjCheckNAdd(139); }
                  break;
               case 144:
                  if (curChar == 55)
                     { jjCheckNAdd(139); }
                  break;
               case 145:
                  if (curChar == 48)
                     { jjCheckNAddStates(410, 414); }
                  break;
               case 146:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(143, 144); }
                  break;
               case 147:
                  if (curChar == 48)
                     { jjCheckNAddStates(415, 417); }
                  break;
               case 148:
                  if (curChar == 48)
                     { jjCheckNAddStates(418, 421); }
                  break;
               case 150:
                  if (curChar == 48)
                     { jjCheckNAddStates(422, 425); }
                  break;
               case 151:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(77, 138); }
                  break;
               case 152:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 151;
                  break;
               case 153:
                  if ((0x100003600L & l) != 0x0L)
                     { jjCheckNAddTwoStates(77, 138); }
                  break;
               case 154:
                  if (curChar == 53)
                     { jjCheckNAdd(150); }
                  break;
               case 155:
                  if (curChar == 55)
                     { jjCheckNAdd(150); }
                  break;
               case 156:
                  if (curChar == 48)
                     { jjCheckNAddStates(426, 430); }
                  break;
               case 157:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(154, 155); }
                  break;
               case 158:
                  if (curChar == 48)
                     { jjCheckNAddStates(431, 433); }
                  break;
               case 159:
                  if (curChar == 48)
                     { jjCheckNAddStates(434, 437); }
                  break;
               case 162:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(76, 149); }
                  break;
               case 163:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 162;
                  break;
               case 164:
                  if ((0x100003600L & l) != 0x0L)
                     { jjCheckNAddTwoStates(76, 149); }
                  break;
               case 165:
                  if (curChar == 52)
                     { jjCheckNAdd(161); }
                  break;
               case 166:
                  if (curChar == 54)
                     { jjCheckNAdd(161); }
                  break;
               case 167:
                  if (curChar == 48)
                     { jjCheckNAddStates(438, 442); }
                  break;
               case 168:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(165, 166); }
                  break;
               case 169:
                  if (curChar == 48)
                     { jjCheckNAddStates(443, 445); }
                  break;
               case 170:
                  if (curChar == 48)
                     { jjCheckNAddStates(446, 449); }
                  break;
               case 172:
                  if (curChar == 57)
                     { jjCheckNAddStates(450, 453); }
                  break;
               case 173:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(75, 160); }
                  break;
               case 174:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 173;
                  break;
               case 175:
                  if ((0x100003600L & l) != 0x0L)
                     { jjCheckNAddTwoStates(75, 160); }
                  break;
               case 176:
                  if (curChar == 52)
                     { jjCheckNAdd(172); }
                  break;
               case 177:
                  if (curChar == 54)
                     { jjCheckNAdd(172); }
                  break;
               case 178:
                  if (curChar == 48)
                     { jjCheckNAddStates(454, 458); }
                  break;
               case 179:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(176, 177); }
                  break;
               case 180:
                  if (curChar == 48)
                     { jjCheckNAddStates(459, 461); }
                  break;
               case 181:
                  if (curChar == 48)
                     { jjCheckNAddStates(462, 465); }
                  break;
               case 187:
                  if (curChar == 40 && kind > 110)
                     kind = 110;
                  break;
               case 192:
                  if (curChar == 40 && kind > 111)
                     kind = 111;
                  break;
               case 197:
                  if (curChar == 40 && kind > 112)
                     kind = 112;
                  break;
               case 200:
                  if (curChar == 46)
                     { jjCheckNAddStates(153, 181); }
                  break;
               case 201:
                  if ((0x3ff000000000000L & l) == 0x0L)
                     break;
                  if (kind > 19)
                     kind = 19;
                  { jjCheckNAddTwoStates(201, 202); }
                  break;
               case 203:
                  if ((0x280000000000L & l) != 0x0L)
                     { jjCheckNAdd(204); }
                  break;
               case 204:
                  if ((0x3ff000000000000L & l) == 0x0L)
                     break;
                  if (kind > 19)
                     kind = 19;
                  { jjCheckNAdd(204); }
                  break;
               case 205:
                  if ((0x3ff000000000000L & l) == 0x0L)
                     break;
                  if (kind > 24)
                     kind = 24;
                  { jjCheckNAddTwoStates(205, 206); }
                  break;
               case 207:
                  if ((0x280000000000L & l) != 0x0L)
                     { jjCheckNAdd(208); }
                  break;
               case 208:
                  if ((0x3ff000000000000L & l) == 0x0L)
                     break;
                  if (kind > 24)
                     kind = 24;
                  { jjCheckNAdd(208); }
                  break;
               case 209:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(280, 282); }
                  break;
               case 211:
                  if (curChar == 53)
                     { jjCheckNAddStates(466, 469); }
                  break;
               case 212:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(213, 214); }
                  break;
               case 216:
                  if (curChar == 10 && kind > 78)
                     kind = 78;
                  break;
               case 217:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 216;
                  break;
               case 218:
                  if ((0x100003600L & l) != 0x0L && kind > 78)
                     kind = 78;
                  break;
               case 219:
                  if (curChar == 52)
                     { jjCheckNAdd(215); }
                  break;
               case 220:
                  if (curChar == 54)
                     { jjCheckNAdd(215); }
                  break;
               case 221:
                  if (curChar == 48)
                     { jjCheckNAddStates(470, 474); }
                  break;
               case 222:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(219, 220); }
                  break;
               case 223:
                  if (curChar == 48)
                     { jjCheckNAddStates(475, 477); }
                  break;
               case 224:
                  if (curChar == 48)
                     { jjCheckNAddStates(478, 481); }
                  break;
               case 225:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 212;
                  break;
               case 226:
                  if ((0x100003600L & l) != 0x0L)
                     { jjCheckNAddTwoStates(213, 214); }
                  break;
               case 227:
                  if (curChar == 52)
                     { jjCheckNAdd(211); }
                  break;
               case 228:
                  if (curChar == 54)
                     { jjCheckNAdd(211); }
                  break;
               case 229:
                  if (curChar == 48)
                     { jjCheckNAddStates(482, 486); }
                  break;
               case 230:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(227, 228); }
                  break;
               case 231:
                  if (curChar == 48)
                     { jjCheckNAddStates(487, 489); }
                  break;
               case 232:
                  if (curChar == 48)
                     { jjCheckNAddStates(490, 493); }
                  break;
               case 234:
                  if ((0x280000000000L & l) != 0x0L)
                     { jjCheckNAdd(235); }
                  break;
               case 235:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(494, 496); }
                  break;
               case 237:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(277, 279); }
                  break;
               case 239:
                  if ((0x280000000000L & l) != 0x0L)
                     { jjCheckNAdd(240); }
                  break;
               case 240:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(240, 243); }
                  break;
               case 244:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(274, 276); }
                  break;
               case 246:
                  if (curChar == 53)
                     { jjCheckNAddStates(497, 500); }
                  break;
               case 247:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(248, 249); }
                  break;
               case 250:
                  if (curChar != 56)
                     break;
                  if (kind > 80)
                     kind = 80;
                  { jjAddStates(501, 502); }
                  break;
               case 251:
                  if (curChar == 10 && kind > 80)
                     kind = 80;
                  break;
               case 252:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 251;
                  break;
               case 253:
                  if ((0x100003600L & l) != 0x0L && kind > 80)
                     kind = 80;
                  break;
               case 254:
                  if (curChar == 53)
                     { jjCheckNAdd(250); }
                  break;
               case 255:
                  if (curChar == 55)
                     { jjCheckNAdd(250); }
                  break;
               case 256:
                  if (curChar == 48)
                     { jjCheckNAddStates(503, 507); }
                  break;
               case 257:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(254, 255); }
                  break;
               case 258:
                  if (curChar == 48)
                     { jjCheckNAddStates(508, 510); }
                  break;
               case 259:
                  if (curChar == 48)
                     { jjCheckNAddStates(511, 514); }
                  break;
               case 260:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 247;
                  break;
               case 261:
                  if ((0x100003600L & l) != 0x0L)
                     { jjCheckNAddTwoStates(248, 249); }
                  break;
               case 262:
                  if (curChar == 52)
                     { jjCheckNAdd(246); }
                  break;
               case 263:
                  if (curChar == 54)
                     { jjCheckNAdd(246); }
                  break;
               case 264:
                  if (curChar == 48)
                     { jjCheckNAddStates(515, 519); }
                  break;
               case 265:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(262, 263); }
                  break;
               case 266:
                  if (curChar == 48)
                     { jjCheckNAddStates(520, 522); }
                  break;
               case 267:
                  if (curChar == 48)
                     { jjCheckNAddStates(523, 526); }
                  break;
               case 269:
                  if ((0x280000000000L & l) != 0x0L)
                     { jjCheckNAdd(270); }
                  break;
               case 270:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(527, 529); }
                  break;
               case 272:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(271, 273); }
                  break;
               case 274:
                  if ((0x280000000000L & l) != 0x0L)
                     { jjCheckNAdd(275); }
                  break;
               case 275:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(275, 277); }
                  break;
               case 278:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(268, 270); }
                  break;
               case 280:
                  if ((0x280000000000L & l) != 0x0L)
                     { jjCheckNAdd(281); }
                  break;
               case 281:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(281, 283); }
                  break;
               case 284:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(265, 267); }
                  break;
               case 286:
                  if ((0x280000000000L & l) != 0x0L)
                     { jjCheckNAdd(287); }
                  break;
               case 287:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(287, 289); }
                  break;
               case 290:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(262, 264); }
                  break;
               case 292:
                  if ((0x280000000000L & l) != 0x0L)
                     { jjCheckNAdd(293); }
                  break;
               case 293:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(293, 297); }
                  break;
               case 298:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(259, 261); }
                  break;
               case 300:
                  if ((0x280000000000L & l) != 0x0L)
                     { jjCheckNAdd(301); }
                  break;
               case 301:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(301, 305); }
                  break;
               case 306:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(256, 258); }
                  break;
               case 308:
                  if ((0x280000000000L & l) != 0x0L)
                     { jjCheckNAdd(309); }
                  break;
               case 309:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(309, 311); }
                  break;
               case 312:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(253, 255); }
                  break;
               case 314:
                  if ((0x280000000000L & l) != 0x0L)
                     { jjCheckNAdd(315); }
                  break;
               case 315:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(315, 317); }
                  break;
               case 318:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(250, 252); }
                  break;
               case 320:
                  if ((0x280000000000L & l) != 0x0L)
                     { jjCheckNAdd(321); }
                  break;
               case 321:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(321, 323); }
                  break;
               case 324:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(247, 249); }
                  break;
               case 326:
                  if ((0x280000000000L & l) != 0x0L)
                     { jjCheckNAdd(327); }
                  break;
               case 327:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(327, 329); }
                  break;
               case 330:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(244, 246); }
                  break;
               case 332:
                  if ((0x280000000000L & l) != 0x0L)
                     { jjCheckNAdd(333); }
                  break;
               case 333:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(333, 335); }
                  break;
               case 336:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(241, 243); }
                  break;
               case 338:
                  if ((0x280000000000L & l) != 0x0L)
                     { jjCheckNAdd(339); }
                  break;
               case 339:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(339, 341); }
                  break;
               case 342:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(238, 240); }
                  break;
               case 344:
                  if ((0x280000000000L & l) != 0x0L)
                     { jjCheckNAdd(345); }
                  break;
               case 345:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(345, 346); }
                  break;
               case 347:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(235, 237); }
                  break;
               case 349:
                  if ((0x280000000000L & l) != 0x0L)
                     { jjCheckNAdd(350); }
                  break;
               case 350:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(350, 353); }
                  break;
               case 354:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(232, 234); }
                  break;
               case 356:
                  if ((0x280000000000L & l) != 0x0L)
                     { jjCheckNAdd(357); }
                  break;
               case 357:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(357, 360); }
                  break;
               case 361:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(229, 231); }
                  break;
               case 363:
                  if ((0x280000000000L & l) != 0x0L)
                     { jjCheckNAdd(364); }
                  break;
               case 364:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(364, 368); }
                  break;
               case 369:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(226, 228); }
                  break;
               case 371:
                  if ((0x280000000000L & l) != 0x0L)
                     { jjCheckNAdd(372); }
                  break;
               case 372:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(372, 376); }
                  break;
               case 377:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(222, 225); }
                  break;
               case 379:
                  if ((0x280000000000L & l) != 0x0L)
                     { jjCheckNAdd(380); }
                  break;
               case 380:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(530, 532); }
                  break;
               case 384:
                  if (curChar != 51)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjAddStates(533, 534); }
                  break;
               case 385:
                  if (curChar == 10 && kind > 97)
                     kind = 97;
                  break;
               case 386:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 385;
                  break;
               case 387:
                  if ((0x100003600L & l) != 0x0L && kind > 97)
                     kind = 97;
                  break;
               case 388:
                  if (curChar == 53)
                     { jjCheckNAdd(384); }
                  break;
               case 389:
                  if (curChar == 55)
                     { jjCheckNAdd(384); }
                  break;
               case 390:
                  if (curChar == 48)
                     { jjCheckNAddStates(535, 539); }
                  break;
               case 391:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(388, 389); }
                  break;
               case 392:
                  if (curChar == 48)
                     { jjCheckNAddStates(540, 542); }
                  break;
               case 393:
                  if (curChar == 48)
                     { jjCheckNAddStates(543, 546); }
                  break;
               case 396:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(382, 383); }
                  break;
               case 397:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 396;
                  break;
               case 398:
                  if ((0x100003600L & l) != 0x0L)
                     { jjCheckNAddTwoStates(382, 383); }
                  break;
               case 399:
                  if (curChar == 52)
                     { jjCheckNAdd(395); }
                  break;
               case 400:
                  if (curChar == 54)
                     { jjCheckNAdd(395); }
                  break;
               case 401:
                  if (curChar == 48)
                     { jjCheckNAddStates(547, 551); }
                  break;
               case 402:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(399, 400); }
                  break;
               case 403:
                  if (curChar == 48)
                     { jjCheckNAddStates(552, 554); }
                  break;
               case 404:
                  if (curChar == 48)
                     { jjCheckNAddStates(555, 558); }
                  break;
               case 405:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(218, 221); }
                  break;
               case 407:
                  if ((0x280000000000L & l) != 0x0L)
                     { jjCheckNAdd(408); }
                  break;
               case 408:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(559, 561); }
                  break;
               case 411:
                  if (curChar != 51)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjAddStates(562, 563); }
                  break;
               case 412:
                  if (curChar == 10 && kind > 98)
                     kind = 98;
                  break;
               case 413:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 412;
                  break;
               case 414:
                  if ((0x100003600L & l) != 0x0L && kind > 98)
                     kind = 98;
                  break;
               case 415:
                  if (curChar == 53)
                     { jjCheckNAdd(411); }
                  break;
               case 416:
                  if (curChar == 55)
                     { jjCheckNAdd(411); }
                  break;
               case 417:
                  if (curChar == 48)
                     { jjCheckNAddStates(564, 568); }
                  break;
               case 418:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(415, 416); }
                  break;
               case 419:
                  if (curChar == 48)
                     { jjCheckNAddStates(569, 571); }
                  break;
               case 420:
                  if (curChar == 48)
                     { jjCheckNAddStates(572, 575); }
                  break;
               case 421:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(214, 217); }
                  break;
               case 423:
                  if ((0x280000000000L & l) != 0x0L)
                     { jjCheckNAdd(424); }
                  break;
               case 424:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(576, 578); }
                  break;
               case 429:
                  if (curChar == 10 && kind > 99)
                     kind = 99;
                  break;
               case 430:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 429;
                  break;
               case 431:
                  if ((0x100003600L & l) != 0x0L && kind > 99)
                     kind = 99;
                  break;
               case 432:
                  if (curChar == 53)
                     { jjCheckNAdd(428); }
                  break;
               case 433:
                  if (curChar == 55)
                     { jjCheckNAdd(428); }
                  break;
               case 434:
                  if (curChar == 48)
                     { jjCheckNAddStates(579, 583); }
                  break;
               case 435:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(432, 433); }
                  break;
               case 436:
                  if (curChar == 48)
                     { jjCheckNAddStates(584, 586); }
                  break;
               case 437:
                  if (curChar == 48)
                     { jjCheckNAddStates(587, 590); }
                  break;
               case 439:
                  if (curChar == 56)
                     { jjCheckNAddStates(591, 594); }
                  break;
               case 440:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(426, 427); }
                  break;
               case 441:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 440;
                  break;
               case 442:
                  if ((0x100003600L & l) != 0x0L)
                     { jjCheckNAddTwoStates(426, 427); }
                  break;
               case 443:
                  if (curChar == 52)
                     { jjCheckNAdd(439); }
                  break;
               case 444:
                  if (curChar == 54)
                     { jjCheckNAdd(439); }
                  break;
               case 445:
                  if (curChar == 48)
                     { jjCheckNAddStates(595, 599); }
                  break;
               case 446:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(443, 444); }
                  break;
               case 447:
                  if (curChar == 48)
                     { jjCheckNAddStates(600, 602); }
                  break;
               case 448:
                  if (curChar == 48)
                     { jjCheckNAddStates(603, 606); }
                  break;
               case 449:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(210, 213); }
                  break;
               case 451:
                  if ((0x280000000000L & l) != 0x0L)
                     { jjCheckNAdd(452); }
                  break;
               case 452:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(607, 609); }
                  break;
               case 458:
                  if (curChar == 10 && kind > 100)
                     kind = 100;
                  break;
               case 459:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 458;
                  break;
               case 460:
                  if ((0x100003600L & l) != 0x0L && kind > 100)
                     kind = 100;
                  break;
               case 461:
                  if (curChar == 53)
                     { jjCheckNAdd(457); }
                  break;
               case 462:
                  if (curChar == 55)
                     { jjCheckNAdd(457); }
                  break;
               case 463:
                  if (curChar == 48)
                     { jjCheckNAddStates(610, 614); }
                  break;
               case 464:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(461, 462); }
                  break;
               case 465:
                  if (curChar == 48)
                     { jjCheckNAddStates(615, 617); }
                  break;
               case 466:
                  if (curChar == 48)
                     { jjCheckNAddStates(618, 621); }
                  break;
               case 468:
                  if (curChar == 56)
                     { jjCheckNAddStates(622, 625); }
                  break;
               case 469:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(455, 456); }
                  break;
               case 470:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 469;
                  break;
               case 471:
                  if ((0x100003600L & l) != 0x0L)
                     { jjCheckNAddTwoStates(455, 456); }
                  break;
               case 472:
                  if (curChar == 52)
                     { jjCheckNAdd(468); }
                  break;
               case 473:
                  if (curChar == 54)
                     { jjCheckNAdd(468); }
                  break;
               case 474:
                  if (curChar == 48)
                     { jjCheckNAddStates(626, 630); }
                  break;
               case 475:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(472, 473); }
                  break;
               case 476:
                  if (curChar == 48)
                     { jjCheckNAddStates(631, 633); }
                  break;
               case 477:
                  if (curChar == 48)
                     { jjCheckNAddStates(634, 637); }
                  break;
               case 480:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(454, 467); }
                  break;
               case 481:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 480;
                  break;
               case 482:
                  if ((0x100003600L & l) != 0x0L)
                     { jjCheckNAddTwoStates(454, 467); }
                  break;
               case 483:
                  if (curChar == 52)
                     { jjCheckNAdd(479); }
                  break;
               case 484:
                  if (curChar == 54)
                     { jjCheckNAdd(479); }
                  break;
               case 485:
                  if (curChar == 48)
                     { jjCheckNAddStates(638, 642); }
                  break;
               case 486:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(483, 484); }
                  break;
               case 487:
                  if (curChar == 48)
                     { jjCheckNAddStates(643, 645); }
                  break;
               case 488:
                  if (curChar == 48)
                     { jjCheckNAddStates(646, 649); }
                  break;
               case 489:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(207, 209); }
                  break;
               case 491:
                  if ((0x280000000000L & l) != 0x0L)
                     { jjCheckNAdd(492); }
                  break;
               case 492:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(492, 495); }
                  break;
               case 496:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(204, 206); }
                  break;
               case 498:
                  if ((0x280000000000L & l) != 0x0L)
                     { jjCheckNAdd(499); }
                  break;
               case 499:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(499, 503); }
                  break;
               case 504:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(201, 203); }
                  break;
               case 506:
                  if ((0x280000000000L & l) != 0x0L)
                     { jjCheckNAdd(507); }
                  break;
               case 507:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(507, 508); }
                  break;
               case 508:
                  if (curChar == 37 && kind > 103)
                     kind = 103;
                  break;
               case 509:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(197, 200); }
                  break;
               case 511:
                  if ((0x280000000000L & l) != 0x0L)
                     { jjCheckNAdd(512); }
                  break;
               case 512:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(650, 652); }
                  break;
               case 514:
                  if ((0x3ff000000000000L & l) == 0x0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddTwoStates(514, 515); }
                  break;
               case 516:
                  if ((0xfc00ffffffffcbffL & l) == 0x0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddTwoStates(514, 515); }
                  break;
               case 517:
                  if ((0x3ff000000000000L & l) == 0x0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddStates(653, 661); }
                  break;
               case 518:
                  if ((0x3ff000000000000L & l) == 0x0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddStates(662, 665); }
                  break;
               case 519:
                  if (curChar != 10)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddTwoStates(514, 515); }
                  break;
               case 520:
               case 535:
                  if (curChar == 13)
                     { jjCheckNAdd(519); }
                  break;
               case 521:
                  if ((0x100003600L & l) == 0x0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddTwoStates(514, 515); }
                  break;
               case 522:
               case 524:
               case 527:
               case 531:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAdd(518); }
                  break;
               case 523:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 524;
                  break;
               case 525:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 526;
                  break;
               case 526:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 527;
                  break;
               case 528:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 529;
                  break;
               case 529:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 530;
                  break;
               case 530:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 531;
                  break;
               case 533:
                  if ((0x3ff000000000000L & l) == 0x0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddStates(666, 674); }
                  break;
               case 534:
                  if ((0x3ff000000000000L & l) == 0x0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddStates(675, 678); }
                  break;
               case 536:
               case 538:
               case 541:
               case 545:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAdd(534); }
                  break;
               case 537:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 538;
                  break;
               case 539:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 540;
                  break;
               case 540:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 541;
                  break;
               case 542:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 543;
                  break;
               case 543:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 544;
                  break;
               case 544:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 545;
                  break;
               case 546:
                  if (curChar == 45)
                     { jjAddStates(148, 152); }
                  break;
               case 548:
                  if ((0x3ff200000000000L & l) == 0x0L)
                     break;
                  if (kind > 22)
                     kind = 22;
                  { jjCheckNAddTwoStates(548, 549); }
                  break;
               case 550:
                  if ((0xfc00ffffffffcbffL & l) == 0x0L)
                     break;
                  if (kind > 22)
                     kind = 22;
                  { jjCheckNAddTwoStates(548, 549); }
                  break;
               case 551:
                  if ((0x3ff000000000000L & l) == 0x0L)
                     break;
                  if (kind > 22)
                     kind = 22;
                  { jjCheckNAddStates(679, 687); }
                  break;
               case 552:
                  if ((0x3ff000000000000L & l) == 0x0L)
                     break;
                  if (kind > 22)
                     kind = 22;
                  { jjCheckNAddStates(688, 691); }
                  break;
               case 553:
                  if (curChar != 10)
                     break;
                  if (kind > 22)
                     kind = 22;
                  { jjCheckNAddTwoStates(548, 549); }
                  break;
               case 554:
               case 637:
                  if (curChar == 13)
                     { jjCheckNAdd(553); }
                  break;
               case 555:
                  if ((0x100003600L & l) == 0x0L)
                     break;
                  if (kind > 22)
                     kind = 22;
                  { jjCheckNAddTwoStates(548, 549); }
                  break;
               case 556:
               case 558:
               case 561:
               case 565:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAdd(552); }
                  break;
               case 557:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 558;
                  break;
               case 559:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 560;
                  break;
               case 560:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 561;
                  break;
               case 562:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 563;
                  break;
               case 563:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 564;
                  break;
               case 564:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 565;
                  break;
               case 568:
                  if ((0x3ff200000000000L & l) == 0x0L)
                     break;
                  if (kind > 117)
                     kind = 117;
                  { jjCheckNAddTwoStates(568, 569); }
                  break;
               case 570:
                  if ((0xfc00ffffffffcbffL & l) == 0x0L)
                     break;
                  if (kind > 117)
                     kind = 117;
                  { jjCheckNAddTwoStates(568, 569); }
                  break;
               case 571:
                  if ((0x3ff000000000000L & l) == 0x0L)
                     break;
                  if (kind > 117)
                     kind = 117;
                  { jjCheckNAddStates(692, 700); }
                  break;
               case 572:
                  if ((0x3ff000000000000L & l) == 0x0L)
                     break;
                  if (kind > 117)
                     kind = 117;
                  { jjCheckNAddStates(701, 704); }
                  break;
               case 573:
                  if (curChar != 10)
                     break;
                  if (kind > 117)
                     kind = 117;
                  { jjCheckNAddTwoStates(568, 569); }
                  break;
               case 574:
               case 589:
                  if (curChar == 13)
                     { jjCheckNAdd(573); }
                  break;
               case 575:
                  if ((0x100003600L & l) == 0x0L)
                     break;
                  if (kind > 117)
                     kind = 117;
                  { jjCheckNAddTwoStates(568, 569); }
                  break;
               case 576:
               case 578:
               case 581:
               case 585:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAdd(572); }
                  break;
               case 577:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 578;
                  break;
               case 579:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 580;
                  break;
               case 580:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 581;
                  break;
               case 582:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 583;
                  break;
               case 583:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 584;
                  break;
               case 584:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 585;
                  break;
               case 587:
                  if ((0x3ff000000000000L & l) == 0x0L)
                     break;
                  if (kind > 117)
                     kind = 117;
                  { jjCheckNAddStates(705, 713); }
                  break;
               case 588:
                  if ((0x3ff000000000000L & l) == 0x0L)
                     break;
                  if (kind > 117)
                     kind = 117;
                  { jjCheckNAddStates(714, 717); }
                  break;
               case 590:
               case 592:
               case 595:
               case 599:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAdd(588); }
                  break;
               case 591:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 592;
                  break;
               case 593:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 594;
                  break;
               case 594:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 595;
                  break;
               case 596:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 597;
                  break;
               case 597:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 598;
                  break;
               case 598:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 599;
                  break;
               case 601:
                  if ((0x3ff200000000000L & l) != 0x0L)
                     { jjCheckNAddStates(192, 194); }
                  break;
               case 602:
                  if (curChar == 40 && kind > 118)
                     kind = 118;
                  break;
               case 604:
                  if ((0xfc00ffffffffcbffL & l) != 0x0L)
                     { jjCheckNAddStates(192, 194); }
                  break;
               case 605:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(718, 727); }
                  break;
               case 606:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(728, 732); }
                  break;
               case 607:
                  if (curChar == 10)
                     { jjCheckNAddStates(192, 194); }
                  break;
               case 608:
               case 623:
                  if (curChar == 13)
                     { jjCheckNAdd(607); }
                  break;
               case 609:
                  if ((0x100003600L & l) != 0x0L)
                     { jjCheckNAddStates(192, 194); }
                  break;
               case 610:
               case 612:
               case 615:
               case 619:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAdd(606); }
                  break;
               case 611:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 612;
                  break;
               case 613:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 614;
                  break;
               case 614:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 615;
                  break;
               case 616:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 617;
                  break;
               case 617:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 618;
                  break;
               case 618:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 619;
                  break;
               case 621:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(733, 742); }
                  break;
               case 622:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(743, 747); }
                  break;
               case 624:
               case 626:
               case 629:
               case 633:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAdd(622); }
                  break;
               case 625:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 626;
                  break;
               case 627:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 628;
                  break;
               case 628:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 629;
                  break;
               case 630:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 631;
                  break;
               case 631:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 632;
                  break;
               case 632:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 633;
                  break;
               case 635:
                  if ((0x3ff000000000000L & l) == 0x0L)
                     break;
                  if (kind > 22)
                     kind = 22;
                  { jjCheckNAddStates(748, 756); }
                  break;
               case 636:
                  if ((0x3ff000000000000L & l) == 0x0L)
                     break;
                  if (kind > 22)
                     kind = 22;
                  { jjCheckNAddStates(757, 760); }
                  break;
               case 638:
               case 640:
               case 643:
               case 647:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAdd(636); }
                  break;
               case 639:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 640;
                  break;
               case 641:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 642;
                  break;
               case 642:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 643;
                  break;
               case 644:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 645;
                  break;
               case 645:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 646;
                  break;
               case 646:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 647;
                  break;
               case 657:
                  if (curChar != 52)
                     break;
                  if (kind > 72)
                     kind = 72;
                  { jjAddStates(761, 762); }
                  break;
               case 658:
                  if (curChar == 10 && kind > 72)
                     kind = 72;
                  break;
               case 659:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 658;
                  break;
               case 660:
                  if ((0x100003600L & l) != 0x0L && kind > 72)
                     kind = 72;
                  break;
               case 661:
                  if (curChar == 53)
                     { jjCheckNAdd(657); }
                  break;
               case 662:
                  if (curChar == 55)
                     { jjCheckNAdd(657); }
                  break;
               case 663:
                  if (curChar == 48)
                     { jjCheckNAddStates(763, 767); }
                  break;
               case 664:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(661, 662); }
                  break;
               case 665:
                  if (curChar == 48)
                     { jjCheckNAddStates(768, 770); }
                  break;
               case 666:
                  if (curChar == 48)
                     { jjCheckNAddStates(771, 774); }
                  break;
               case 668:
                  if (curChar == 50)
                     { jjCheckNAddStates(775, 778); }
                  break;
               case 669:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(655, 656); }
                  break;
               case 670:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 669;
                  break;
               case 671:
                  if ((0x100003600L & l) != 0x0L)
                     { jjCheckNAddTwoStates(655, 656); }
                  break;
               case 672:
                  if (curChar == 53)
                     { jjCheckNAdd(668); }
                  break;
               case 673:
                  if (curChar == 55)
                     { jjCheckNAdd(668); }
                  break;
               case 674:
                  if (curChar == 48)
                     { jjCheckNAddStates(779, 783); }
                  break;
               case 675:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(672, 673); }
                  break;
               case 676:
                  if (curChar == 48)
                     { jjCheckNAddStates(784, 786); }
                  break;
               case 677:
                  if (curChar == 48)
                     { jjCheckNAddStates(787, 790); }
                  break;
               case 679:
                  if (curChar == 49)
                     { jjCheckNAddStates(791, 794); }
                  break;
               case 680:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(654, 667); }
                  break;
               case 681:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 680;
                  break;
               case 682:
                  if ((0x100003600L & l) != 0x0L)
                     { jjCheckNAddTwoStates(654, 667); }
                  break;
               case 683:
                  if (curChar == 53)
                     { jjCheckNAdd(679); }
                  break;
               case 684:
                  if (curChar == 55)
                     { jjCheckNAdd(679); }
                  break;
               case 685:
                  if (curChar == 48)
                     { jjCheckNAddStates(795, 799); }
                  break;
               case 686:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(683, 684); }
                  break;
               case 687:
                  if (curChar == 48)
                     { jjCheckNAddStates(800, 802); }
                  break;
               case 688:
                  if (curChar == 48)
                     { jjCheckNAddStates(803, 806); }
                  break;
               case 690:
                  if (curChar == 48)
                     { jjCheckNAddStates(807, 810); }
                  break;
               case 691:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(653, 678); }
                  break;
               case 692:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 691;
                  break;
               case 693:
                  if ((0x100003600L & l) != 0x0L)
                     { jjCheckNAddTwoStates(653, 678); }
                  break;
               case 694:
                  if (curChar == 53)
                     { jjCheckNAdd(690); }
                  break;
               case 695:
                  if (curChar == 55)
                     { jjCheckNAdd(690); }
                  break;
               case 696:
                  if (curChar == 48)
                     { jjCheckNAddStates(811, 815); }
                  break;
               case 697:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(694, 695); }
                  break;
               case 698:
                  if (curChar == 48)
                     { jjCheckNAddStates(816, 818); }
                  break;
               case 699:
                  if (curChar == 48)
                     { jjCheckNAddStates(819, 822); }
                  break;
               case 702:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(652, 689); }
                  break;
               case 703:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 702;
                  break;
               case 704:
                  if ((0x100003600L & l) != 0x0L)
                     { jjCheckNAddTwoStates(652, 689); }
                  break;
               case 705:
                  if (curChar == 52)
                     { jjCheckNAdd(701); }
                  break;
               case 706:
                  if (curChar == 54)
                     { jjCheckNAdd(701); }
                  break;
               case 707:
                  if (curChar == 48)
                     { jjCheckNAddStates(823, 827); }
                  break;
               case 708:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(705, 706); }
                  break;
               case 709:
                  if (curChar == 48)
                     { jjCheckNAddStates(828, 830); }
                  break;
               case 710:
                  if (curChar == 48)
                     { jjCheckNAddStates(831, 834); }
                  break;
               case 716:
                  if (curChar != 53)
                     break;
                  if (kind > 73)
                     kind = 73;
                  { jjAddStates(835, 836); }
                  break;
               case 717:
                  if (curChar == 10 && kind > 73)
                     kind = 73;
                  break;
               case 718:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 717;
                  break;
               case 719:
                  if ((0x100003600L & l) != 0x0L && kind > 73)
                     kind = 73;
                  break;
               case 720:
                  if (curChar == 52)
                     { jjCheckNAdd(716); }
                  break;
               case 721:
                  if (curChar == 54)
                     { jjCheckNAdd(716); }
                  break;
               case 722:
                  if (curChar == 48)
                     { jjCheckNAddStates(837, 841); }
                  break;
               case 723:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(720, 721); }
                  break;
               case 724:
                  if (curChar == 48)
                     { jjCheckNAddStates(842, 844); }
                  break;
               case 725:
                  if (curChar == 48)
                     { jjCheckNAddStates(845, 848); }
                  break;
               case 727:
                  if (curChar == 55)
                     { jjCheckNAddStates(849, 852); }
                  break;
               case 728:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(714, 715); }
                  break;
               case 729:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 728;
                  break;
               case 730:
                  if ((0x100003600L & l) != 0x0L)
                     { jjCheckNAddTwoStates(714, 715); }
                  break;
               case 731:
                  if (curChar == 52)
                     { jjCheckNAdd(727); }
                  break;
               case 732:
                  if (curChar == 54)
                     { jjCheckNAdd(727); }
                  break;
               case 733:
                  if (curChar == 48)
                     { jjCheckNAddStates(853, 857); }
                  break;
               case 734:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(731, 732); }
                  break;
               case 735:
                  if (curChar == 48)
                     { jjCheckNAddStates(858, 860); }
                  break;
               case 736:
                  if (curChar == 48)
                     { jjCheckNAddStates(861, 864); }
                  break;
               case 738:
                  if (curChar == 49)
                     { jjCheckNAddStates(865, 868); }
                  break;
               case 739:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(713, 726); }
                  break;
               case 740:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 739;
                  break;
               case 741:
                  if ((0x100003600L & l) != 0x0L)
                     { jjCheckNAddTwoStates(713, 726); }
                  break;
               case 742:
                  if (curChar == 52)
                     { jjCheckNAdd(738); }
                  break;
               case 743:
                  if (curChar == 54)
                     { jjCheckNAdd(738); }
                  break;
               case 744:
                  if (curChar == 48)
                     { jjCheckNAddStates(869, 873); }
                  break;
               case 745:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(742, 743); }
                  break;
               case 746:
                  if (curChar == 48)
                     { jjCheckNAddStates(874, 876); }
                  break;
               case 747:
                  if (curChar == 48)
                     { jjCheckNAddStates(877, 880); }
                  break;
               case 754:
                  if (curChar != 49)
                     break;
                  if (kind > 74)
                     kind = 74;
                  { jjAddStates(881, 882); }
                  break;
               case 755:
                  if (curChar == 10 && kind > 74)
                     kind = 74;
                  break;
               case 756:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 755;
                  break;
               case 757:
                  if ((0x100003600L & l) != 0x0L && kind > 74)
                     kind = 74;
                  break;
               case 758:
                  if (curChar == 52)
                     { jjCheckNAdd(754); }
                  break;
               case 759:
                  if (curChar == 54)
                     { jjCheckNAdd(754); }
                  break;
               case 760:
                  if (curChar == 48)
                     { jjCheckNAddStates(883, 887); }
                  break;
               case 761:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(758, 759); }
                  break;
               case 762:
                  if (curChar == 48)
                     { jjCheckNAddStates(888, 890); }
                  break;
               case 763:
                  if (curChar == 48)
                     { jjCheckNAddStates(891, 894); }
                  break;
               case 765:
                  if (curChar == 57)
                     { jjCheckNAddStates(895, 898); }
                  break;
               case 766:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(752, 753); }
                  break;
               case 767:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 766;
                  break;
               case 768:
                  if ((0x100003600L & l) != 0x0L)
                     { jjCheckNAddTwoStates(752, 753); }
                  break;
               case 769:
                  if (curChar == 52)
                     { jjCheckNAdd(765); }
                  break;
               case 770:
                  if (curChar == 54)
                     { jjCheckNAdd(765); }
                  break;
               case 771:
                  if (curChar == 48)
                     { jjCheckNAddStates(899, 903); }
                  break;
               case 772:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(769, 770); }
                  break;
               case 773:
                  if (curChar == 48)
                     { jjCheckNAddStates(904, 906); }
                  break;
               case 774:
                  if (curChar == 48)
                     { jjCheckNAddStates(907, 910); }
                  break;
               case 776:
                  if (curChar == 52)
                     { jjCheckNAddStates(911, 914); }
                  break;
               case 777:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(751, 764); }
                  break;
               case 778:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 777;
                  break;
               case 779:
                  if ((0x100003600L & l) != 0x0L)
                     { jjCheckNAddTwoStates(751, 764); }
                  break;
               case 780:
                  if (curChar == 52)
                     { jjCheckNAdd(776); }
                  break;
               case 781:
                  if (curChar == 54)
                     { jjCheckNAdd(776); }
                  break;
               case 782:
                  if (curChar == 48)
                     { jjCheckNAddStates(915, 919); }
                  break;
               case 783:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(780, 781); }
                  break;
               case 784:
                  if (curChar == 48)
                     { jjCheckNAddStates(920, 922); }
                  break;
               case 785:
                  if (curChar == 48)
                     { jjCheckNAddStates(923, 926); }
                  break;
               case 787:
                  if (curChar == 53)
                     { jjCheckNAddStates(927, 930); }
                  break;
               case 788:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(750, 775); }
                  break;
               case 789:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 788;
                  break;
               case 790:
                  if ((0x100003600L & l) != 0x0L)
                     { jjCheckNAddTwoStates(750, 775); }
                  break;
               case 791:
                  if (curChar == 52)
                     { jjCheckNAdd(787); }
                  break;
               case 792:
                  if (curChar == 54)
                     { jjCheckNAdd(787); }
                  break;
               case 793:
                  if (curChar == 48)
                     { jjCheckNAddStates(931, 935); }
                  break;
               case 794:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(791, 792); }
                  break;
               case 795:
                  if (curChar == 48)
                     { jjCheckNAddStates(936, 938); }
                  break;
               case 796:
                  if (curChar == 48)
                     { jjCheckNAddStates(939, 942); }
                  break;
               case 801:
                  if (curChar == 45)
                     { jjAddStates(943, 944); }
                  break;
               case 807:
                  if (curChar != 53)
                     break;
                  if (kind > 75)
                     kind = 75;
                  { jjAddStates(945, 946); }
                  break;
               case 808:
                  if (curChar == 10 && kind > 75)
                     kind = 75;
                  break;
               case 809:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 808;
                  break;
               case 810:
                  if ((0x100003600L & l) != 0x0L && kind > 75)
                     kind = 75;
                  break;
               case 811:
                  if (curChar == 52)
                     { jjCheckNAdd(807); }
                  break;
               case 812:
                  if (curChar == 54)
                     { jjCheckNAdd(807); }
                  break;
               case 813:
                  if (curChar == 48)
                     { jjCheckNAddStates(947, 951); }
                  break;
               case 814:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(811, 812); }
                  break;
               case 815:
                  if (curChar == 48)
                     { jjCheckNAddStates(952, 954); }
                  break;
               case 816:
                  if (curChar == 48)
                     { jjCheckNAddStates(955, 958); }
                  break;
               case 818:
                  if (curChar == 51)
                     { jjCheckNAddStates(959, 962); }
                  break;
               case 819:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(805, 806); }
                  break;
               case 820:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 819;
                  break;
               case 821:
                  if ((0x100003600L & l) != 0x0L)
                     { jjCheckNAddTwoStates(805, 806); }
                  break;
               case 822:
                  if (curChar == 52)
                     { jjCheckNAdd(818); }
                  break;
               case 823:
                  if (curChar == 54)
                     { jjCheckNAdd(818); }
                  break;
               case 824:
                  if (curChar == 48)
                     { jjCheckNAddStates(963, 967); }
                  break;
               case 825:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(822, 823); }
                  break;
               case 826:
                  if (curChar == 48)
                     { jjCheckNAddStates(968, 970); }
                  break;
               case 827:
                  if (curChar == 48)
                     { jjCheckNAddStates(971, 974); }
                  break;
               case 829:
                  if (curChar == 49)
                     { jjCheckNAddStates(975, 978); }
                  break;
               case 830:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(804, 817); }
                  break;
               case 831:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 830;
                  break;
               case 832:
                  if ((0x100003600L & l) != 0x0L)
                     { jjCheckNAddTwoStates(804, 817); }
                  break;
               case 833:
                  if (curChar == 52)
                     { jjCheckNAdd(829); }
                  break;
               case 834:
                  if (curChar == 54)
                     { jjCheckNAdd(829); }
                  break;
               case 835:
                  if (curChar == 48)
                     { jjCheckNAddStates(979, 983); }
                  break;
               case 836:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(833, 834); }
                  break;
               case 837:
                  if (curChar == 48)
                     { jjCheckNAddStates(984, 986); }
                  break;
               case 838:
                  if (curChar == 48)
                     { jjCheckNAddStates(987, 990); }
                  break;
               case 840:
                  if (curChar == 54)
                     { jjCheckNAddStates(991, 994); }
                  break;
               case 841:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(803, 828); }
                  break;
               case 842:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 841;
                  break;
               case 843:
                  if ((0x100003600L & l) != 0x0L)
                     { jjCheckNAddTwoStates(803, 828); }
                  break;
               case 844:
                  if (curChar == 52)
                     { jjCheckNAdd(840); }
                  break;
               case 845:
                  if (curChar == 54)
                     { jjCheckNAdd(840); }
                  break;
               case 846:
                  if (curChar == 48)
                     { jjCheckNAddStates(995, 999); }
                  break;
               case 847:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(844, 845); }
                  break;
               case 848:
                  if (curChar == 48)
                     { jjCheckNAddStates(1000, 1002); }
                  break;
               case 849:
                  if (curChar == 48)
                     { jjCheckNAddStates(1003, 1006); }
                  break;
               case 851:
                  if (curChar == 52)
                     { jjCheckNAddStates(1007, 1009); }
                  break;
               case 852:
                  if (curChar == 10)
                     { jjCheckNAdd(801); }
                  break;
               case 853:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 852;
                  break;
               case 854:
                  if ((0x100003600L & l) != 0x0L)
                     { jjCheckNAdd(801); }
                  break;
               case 855:
                  if (curChar == 53)
                     { jjCheckNAdd(851); }
                  break;
               case 856:
                  if (curChar == 55)
                     { jjCheckNAdd(851); }
                  break;
               case 857:
                  if (curChar == 48)
                     { jjCheckNAddStates(1010, 1014); }
                  break;
               case 858:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(855, 856); }
                  break;
               case 859:
                  if (curChar == 48)
                     { jjCheckNAddStates(1015, 1017); }
                  break;
               case 860:
                  if (curChar == 48)
                     { jjCheckNAddStates(1018, 1021); }
                  break;
               case 863:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(800, 850); }
                  break;
               case 864:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 863;
                  break;
               case 865:
                  if ((0x100003600L & l) != 0x0L)
                     { jjCheckNAddTwoStates(800, 850); }
                  break;
               case 866:
                  if (curChar == 52)
                     { jjCheckNAdd(862); }
                  break;
               case 867:
                  if (curChar == 54)
                     { jjCheckNAdd(862); }
                  break;
               case 868:
                  if (curChar == 48)
                     { jjCheckNAddStates(1022, 1026); }
                  break;
               case 869:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(866, 867); }
                  break;
               case 870:
                  if (curChar == 48)
                     { jjCheckNAddStates(1027, 1029); }
                  break;
               case 871:
                  if (curChar == 48)
                     { jjCheckNAddStates(1030, 1033); }
                  break;
               case 873:
                  if (curChar == 49)
                     { jjCheckNAddStates(1034, 1037); }
                  break;
               case 874:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(799, 861); }
                  break;
               case 875:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 874;
                  break;
               case 876:
                  if ((0x100003600L & l) != 0x0L)
                     { jjCheckNAddTwoStates(799, 861); }
                  break;
               case 877:
                  if (curChar == 53)
                     { jjCheckNAdd(873); }
                  break;
               case 878:
                  if (curChar == 55)
                     { jjCheckNAdd(873); }
                  break;
               case 879:
                  if (curChar == 48)
                     { jjCheckNAddStates(1038, 1042); }
                  break;
               case 880:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(877, 878); }
                  break;
               case 881:
                  if (curChar == 48)
                     { jjCheckNAddStates(1043, 1045); }
                  break;
               case 882:
                  if (curChar == 48)
                     { jjCheckNAddStates(1046, 1049); }
                  break;
               case 884:
                  if (curChar == 54)
                     { jjCheckNAddStates(1050, 1053); }
                  break;
               case 885:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(798, 872); }
                  break;
               case 886:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 885;
                  break;
               case 887:
                  if ((0x100003600L & l) != 0x0L)
                     { jjCheckNAddTwoStates(798, 872); }
                  break;
               case 888:
                  if (curChar == 52)
                     { jjCheckNAdd(884); }
                  break;
               case 889:
                  if (curChar == 54)
                     { jjCheckNAdd(884); }
                  break;
               case 890:
                  if (curChar == 48)
                     { jjCheckNAddStates(1054, 1058); }
                  break;
               case 891:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(888, 889); }
                  break;
               case 892:
                  if (curChar == 48)
                     { jjCheckNAddStates(1059, 1061); }
                  break;
               case 893:
                  if (curChar == 48)
                     { jjCheckNAddStates(1062, 1065); }
                  break;
               case 902:
                  if (curChar != 52)
                     break;
                  if (kind > 76)
                     kind = 76;
                  { jjAddStates(1066, 1067); }
                  break;
               case 903:
                  if (curChar == 10 && kind > 76)
                     kind = 76;
                  break;
               case 904:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 903;
                  break;
               case 905:
                  if ((0x100003600L & l) != 0x0L && kind > 76)
                     kind = 76;
                  break;
               case 906:
                  if (curChar == 53)
                     { jjCheckNAdd(902); }
                  break;
               case 907:
                  if (curChar == 55)
                     { jjCheckNAdd(902); }
                  break;
               case 908:
                  if (curChar == 48)
                     { jjCheckNAddStates(1068, 1072); }
                  break;
               case 909:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(906, 907); }
                  break;
               case 910:
                  if (curChar == 48)
                     { jjCheckNAddStates(1073, 1075); }
                  break;
               case 911:
                  if (curChar == 48)
                     { jjCheckNAddStates(1076, 1079); }
                  break;
               case 913:
                  if (curChar == 53)
                     { jjCheckNAddStates(1080, 1083); }
                  break;
               case 914:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(900, 901); }
                  break;
               case 915:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 914;
                  break;
               case 916:
                  if ((0x100003600L & l) != 0x0L)
                     { jjCheckNAddTwoStates(900, 901); }
                  break;
               case 917:
                  if (curChar == 52)
                     { jjCheckNAdd(913); }
                  break;
               case 918:
                  if (curChar == 54)
                     { jjCheckNAdd(913); }
                  break;
               case 919:
                  if (curChar == 48)
                     { jjCheckNAddStates(1084, 1088); }
                  break;
               case 920:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(917, 918); }
                  break;
               case 921:
                  if (curChar == 48)
                     { jjCheckNAddStates(1089, 1091); }
                  break;
               case 922:
                  if (curChar == 48)
                     { jjCheckNAddStates(1092, 1095); }
                  break;
               case 924:
                  if (curChar == 51)
                     { jjCheckNAddStates(1096, 1099); }
                  break;
               case 925:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(899, 912); }
                  break;
               case 926:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 925;
                  break;
               case 927:
                  if ((0x100003600L & l) != 0x0L)
                     { jjCheckNAddTwoStates(899, 912); }
                  break;
               case 928:
                  if (curChar == 53)
                     { jjCheckNAdd(924); }
                  break;
               case 929:
                  if (curChar == 55)
                     { jjCheckNAdd(924); }
                  break;
               case 930:
                  if (curChar == 48)
                     { jjCheckNAddStates(1100, 1104); }
                  break;
               case 931:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(928, 929); }
                  break;
               case 932:
                  if (curChar == 48)
                     { jjCheckNAddStates(1105, 1107); }
                  break;
               case 933:
                  if (curChar == 48)
                     { jjCheckNAddStates(1108, 1111); }
                  break;
               case 935:
                  if (curChar == 50)
                     { jjCheckNAddStates(1112, 1115); }
                  break;
               case 936:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(898, 923); }
                  break;
               case 937:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 936;
                  break;
               case 938:
                  if ((0x100003600L & l) != 0x0L)
                     { jjCheckNAddTwoStates(898, 923); }
                  break;
               case 939:
                  if (curChar == 53)
                     { jjCheckNAdd(935); }
                  break;
               case 940:
                  if (curChar == 55)
                     { jjCheckNAdd(935); }
                  break;
               case 941:
                  if (curChar == 48)
                     { jjCheckNAddStates(1116, 1120); }
                  break;
               case 942:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(939, 940); }
                  break;
               case 943:
                  if (curChar == 48)
                     { jjCheckNAddStates(1121, 1123); }
                  break;
               case 944:
                  if (curChar == 48)
                     { jjCheckNAddStates(1124, 1127); }
                  break;
               case 946:
                  if (curChar == 49)
                     { jjCheckNAddStates(1128, 1131); }
                  break;
               case 947:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(897, 934); }
                  break;
               case 948:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 947;
                  break;
               case 949:
                  if ((0x100003600L & l) != 0x0L)
                     { jjCheckNAddTwoStates(897, 934); }
                  break;
               case 950:
                  if (curChar == 52)
                     { jjCheckNAdd(946); }
                  break;
               case 951:
                  if (curChar == 54)
                     { jjCheckNAdd(946); }
                  break;
               case 952:
                  if (curChar == 48)
                     { jjCheckNAddStates(1132, 1136); }
                  break;
               case 953:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(950, 951); }
                  break;
               case 954:
                  if (curChar == 48)
                     { jjCheckNAddStates(1137, 1139); }
                  break;
               case 955:
                  if (curChar == 48)
                     { jjCheckNAddStates(1140, 1143); }
                  break;
               case 957:
                  if (curChar == 56)
                     { jjCheckNAddStates(1144, 1147); }
                  break;
               case 958:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(896, 945); }
                  break;
               case 959:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 958;
                  break;
               case 960:
                  if ((0x100003600L & l) != 0x0L)
                     { jjCheckNAddTwoStates(896, 945); }
                  break;
               case 961:
                  if (curChar == 52)
                     { jjCheckNAdd(957); }
                  break;
               case 962:
                  if (curChar == 54)
                     { jjCheckNAdd(957); }
                  break;
               case 963:
                  if (curChar == 48)
                     { jjCheckNAddStates(1148, 1152); }
                  break;
               case 964:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(961, 962); }
                  break;
               case 965:
                  if (curChar == 48)
                     { jjCheckNAddStates(1153, 1155); }
                  break;
               case 966:
                  if (curChar == 48)
                     { jjCheckNAddStates(1156, 1159); }
                  break;
               case 968:
                  if (curChar == 51)
                     { jjCheckNAddStates(1160, 1163); }
                  break;
               case 969:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(895, 956); }
                  break;
               case 970:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 969;
                  break;
               case 971:
                  if ((0x100003600L & l) != 0x0L)
                     { jjCheckNAddTwoStates(895, 956); }
                  break;
               case 972:
                  if (curChar == 52)
                     { jjCheckNAdd(968); }
                  break;
               case 973:
                  if (curChar == 54)
                     { jjCheckNAdd(968); }
                  break;
               case 974:
                  if (curChar == 48)
                     { jjCheckNAddStates(1164, 1168); }
                  break;
               case 975:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(972, 973); }
                  break;
               case 976:
                  if (curChar == 48)
                     { jjCheckNAddStates(1169, 1171); }
                  break;
               case 977:
                  if (curChar == 48)
                     { jjCheckNAddStates(1172, 1175); }
                  break;
               case 978:
                  if (curChar == 45)
                     { jjAddStates(1176, 1177); }
                  break;
               case 980:
                  if ((0x3ff200000000000L & l) == 0x0L)
                     break;
                  if (kind > 119)
                     kind = 119;
                  { jjCheckNAddTwoStates(980, 981); }
                  break;
               case 982:
                  if ((0xfc00ffffffffcbffL & l) == 0x0L)
                     break;
                  if (kind > 119)
                     kind = 119;
                  { jjCheckNAddTwoStates(980, 981); }
                  break;
               case 983:
                  if ((0x3ff000000000000L & l) == 0x0L)
                     break;
                  if (kind > 119)
                     kind = 119;
                  { jjCheckNAddStates(1178, 1186); }
                  break;
               case 984:
                  if ((0x3ff000000000000L & l) == 0x0L)
                     break;
                  if (kind > 119)
                     kind = 119;
                  { jjCheckNAddStates(1187, 1190); }
                  break;
               case 985:
                  if (curChar != 10)
                     break;
                  if (kind > 119)
                     kind = 119;
                  { jjCheckNAddTwoStates(980, 981); }
                  break;
               case 986:
               case 1001:
                  if (curChar == 13)
                     { jjCheckNAdd(985); }
                  break;
               case 987:
                  if ((0x100003600L & l) == 0x0L)
                     break;
                  if (kind > 119)
                     kind = 119;
                  { jjCheckNAddTwoStates(980, 981); }
                  break;
               case 988:
               case 990:
               case 993:
               case 997:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAdd(984); }
                  break;
               case 989:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 990;
                  break;
               case 991:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 992;
                  break;
               case 992:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 993;
                  break;
               case 994:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 995;
                  break;
               case 995:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 996;
                  break;
               case 996:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 997;
                  break;
               case 999:
                  if ((0x3ff000000000000L & l) == 0x0L)
                     break;
                  if (kind > 119)
                     kind = 119;
                  { jjCheckNAddStates(1191, 1199); }
                  break;
               case 1000:
                  if ((0x3ff000000000000L & l) == 0x0L)
                     break;
                  if (kind > 119)
                     kind = 119;
                  { jjCheckNAddStates(1200, 1203); }
                  break;
               case 1002:
               case 1004:
               case 1007:
               case 1011:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAdd(1000); }
                  break;
               case 1003:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1004;
                  break;
               case 1005:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1006;
                  break;
               case 1006:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1007;
                  break;
               case 1008:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1009;
                  break;
               case 1009:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1010;
                  break;
               case 1010:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1011;
                  break;
               case 1014:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(749, 786); }
                  break;
               case 1015:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 1014;
                  break;
               case 1016:
                  if ((0x100003600L & l) != 0x0L)
                     { jjCheckNAddTwoStates(749, 786); }
                  break;
               case 1017:
                  if (curChar == 52)
                     { jjCheckNAdd(1013); }
                  break;
               case 1018:
                  if (curChar == 54)
                     { jjCheckNAdd(1013); }
                  break;
               case 1019:
                  if (curChar == 48)
                     { jjCheckNAddStates(1204, 1208); }
                  break;
               case 1020:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(1017, 1018); }
                  break;
               case 1021:
                  if (curChar == 48)
                     { jjCheckNAddStates(1209, 1211); }
                  break;
               case 1022:
                  if (curChar == 48)
                     { jjCheckNAddStates(1212, 1215); }
                  break;
               case 1024:
                  if (curChar == 48)
                     { jjCheckNAddStates(1216, 1219); }
                  break;
               case 1025:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(712, 737); }
                  break;
               case 1026:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 1025;
                  break;
               case 1027:
                  if ((0x100003600L & l) != 0x0L)
                     { jjCheckNAddTwoStates(712, 737); }
                  break;
               case 1028:
                  if (curChar == 53)
                     { jjCheckNAdd(1024); }
                  break;
               case 1029:
                  if (curChar == 55)
                     { jjCheckNAdd(1024); }
                  break;
               case 1030:
                  if (curChar == 48)
                     { jjCheckNAddStates(1220, 1224); }
                  break;
               case 1031:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(1028, 1029); }
                  break;
               case 1032:
                  if (curChar == 48)
                     { jjCheckNAddStates(1225, 1227); }
                  break;
               case 1033:
                  if (curChar == 48)
                     { jjCheckNAddStates(1228, 1231); }
                  break;
               case 1035:
                  if (curChar == 57)
                     { jjCheckNAddStates(1232, 1235); }
                  break;
               case 1036:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(651, 700); }
                  break;
               case 1037:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 1036;
                  break;
               case 1038:
                  if ((0x100003600L & l) != 0x0L)
                     { jjCheckNAddTwoStates(651, 700); }
                  break;
               case 1039:
                  if (curChar == 52)
                     { jjCheckNAdd(1035); }
                  break;
               case 1040:
                  if (curChar == 54)
                     { jjCheckNAdd(1035); }
                  break;
               case 1041:
                  if (curChar == 48)
                     { jjCheckNAddStates(1236, 1240); }
                  break;
               case 1042:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(1039, 1040); }
                  break;
               case 1043:
                  if (curChar == 48)
                     { jjCheckNAddStates(1241, 1243); }
                  break;
               case 1044:
                  if (curChar == 48)
                     { jjCheckNAddStates(1244, 1247); }
                  break;
               case 1046:
                  if (curChar == 43)
                     jjstateSet[jjnewStateCnt++] = 1047;
                  break;
               case 1047:
                  if ((0x83ff000000000000L & l) == 0x0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddTwoStates(1048, 1055); }
                  break;
               case 1048:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 1049;
                  break;
               case 1049:
                  if ((0x83ff000000000000L & l) == 0x0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  jjstateSet[jjnewStateCnt++] = 1050;
                  break;
               case 1050:
                  if ((0x83ff000000000000L & l) == 0x0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddStates(1248, 1251); }
                  break;
               case 1051:
                  if ((0x83ff000000000000L & l) != 0x0L && kind > 106)
                     kind = 106;
                  break;
               case 1052:
                  if ((0x83ff000000000000L & l) == 0x0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAdd(1051); }
                  break;
               case 1053:
                  if ((0x83ff000000000000L & l) == 0x0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddTwoStates(1051, 1052); }
                  break;
               case 1054:
                  if ((0x83ff000000000000L & l) == 0x0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddStates(1252, 1254); }
                  break;
               case 1055:
                  if ((0x83ff000000000000L & l) == 0x0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddStates(1255, 1259); }
                  break;
               case 1056:
                  if ((0x83ff000000000000L & l) == 0x0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAdd(1048); }
                  break;
               case 1057:
                  if ((0x83ff000000000000L & l) == 0x0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddTwoStates(1056, 1048); }
                  break;
               case 1058:
                  if ((0x83ff000000000000L & l) == 0x0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddStates(1260, 1262); }
                  break;
               case 1059:
                  if ((0x83ff000000000000L & l) == 0x0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddStates(1263, 1266); }
                  break;
               case 1061:
                  if (curChar == 40)
                     { jjCheckNAddStates(1267, 1272); }
                  break;
               case 1062:
                  if ((0xfffffc7a00000000L & l) != 0x0L)
                     { jjCheckNAddStates(1273, 1276); }
                  break;
               case 1063:
                  if ((0x100003600L & l) != 0x0L)
                     { jjCheckNAddTwoStates(1063, 1064); }
                  break;
               case 1064:
                  if (curChar == 41 && kind > 107)
                     kind = 107;
                  break;
               case 1066:
                  if ((0xfc00ffffffffcbffL & l) != 0x0L)
                     { jjCheckNAddStates(1273, 1276); }
                  break;
               case 1067:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(1277, 1286); }
                  break;
               case 1068:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(1287, 1291); }
                  break;
               case 1069:
                  if (curChar == 10)
                     { jjCheckNAddStates(1273, 1276); }
                  break;
               case 1070:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 1069;
                  break;
               case 1071:
                  if ((0x100003600L & l) != 0x0L)
                     { jjCheckNAddStates(1273, 1276); }
                  break;
               case 1072:
               case 1074:
               case 1077:
               case 1081:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAdd(1068); }
                  break;
               case 1073:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1074;
                  break;
               case 1075:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1076;
                  break;
               case 1076:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1077;
                  break;
               case 1078:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1079;
                  break;
               case 1079:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1080;
                  break;
               case 1080:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1081;
                  break;
               case 1082:
                  if (curChar == 39)
                     { jjCheckNAddStates(1292, 1294); }
                  break;
               case 1083:
                  if ((0xffffff7fffffcbffL & l) != 0x0L)
                     { jjCheckNAddStates(1292, 1294); }
                  break;
               case 1084:
                  if (curChar == 39)
                     { jjCheckNAddTwoStates(1063, 1064); }
                  break;
               case 1086:
                  if ((0x3400L & l) != 0x0L)
                     { jjCheckNAddStates(1292, 1294); }
                  break;
               case 1087:
                  if (curChar == 10)
                     { jjCheckNAddStates(1292, 1294); }
                  break;
               case 1088:
               case 1092:
                  if (curChar == 13)
                     { jjCheckNAdd(1087); }
                  break;
               case 1089:
                  if ((0xfc00ffffffffcbffL & l) != 0x0L)
                     { jjCheckNAddStates(1292, 1294); }
                  break;
               case 1090:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(1295, 1304); }
                  break;
               case 1091:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(1305, 1309); }
                  break;
               case 1093:
                  if ((0x100003600L & l) != 0x0L)
                     { jjCheckNAddStates(1292, 1294); }
                  break;
               case 1094:
               case 1096:
               case 1099:
               case 1103:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAdd(1091); }
                  break;
               case 1095:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1096;
                  break;
               case 1097:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1098;
                  break;
               case 1098:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1099;
                  break;
               case 1100:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1101;
                  break;
               case 1101:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1102;
                  break;
               case 1102:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1103;
                  break;
               case 1104:
                  if (curChar == 34)
                     { jjCheckNAddStates(1310, 1312); }
                  break;
               case 1105:
                  if ((0xfffffffbffffcbffL & l) != 0x0L)
                     { jjCheckNAddStates(1310, 1312); }
                  break;
               case 1106:
                  if (curChar == 34)
                     { jjCheckNAddTwoStates(1063, 1064); }
                  break;
               case 1108:
                  if ((0x3400L & l) != 0x0L)
                     { jjCheckNAddStates(1310, 1312); }
                  break;
               case 1109:
                  if (curChar == 10)
                     { jjCheckNAddStates(1310, 1312); }
                  break;
               case 1110:
               case 1114:
                  if (curChar == 13)
                     { jjCheckNAdd(1109); }
                  break;
               case 1111:
                  if ((0xfc00ffffffffcbffL & l) != 0x0L)
                     { jjCheckNAddStates(1310, 1312); }
                  break;
               case 1112:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(1313, 1322); }
                  break;
               case 1113:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(1323, 1327); }
                  break;
               case 1115:
                  if ((0x100003600L & l) != 0x0L)
                     { jjCheckNAddStates(1310, 1312); }
                  break;
               case 1116:
               case 1118:
               case 1121:
               case 1125:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAdd(1113); }
                  break;
               case 1117:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1118;
                  break;
               case 1119:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1120;
                  break;
               case 1120:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1121;
                  break;
               case 1122:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1123;
                  break;
               case 1123:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1124;
                  break;
               case 1124:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1125;
                  break;
               case 1126:
                  if ((0x100003600L & l) != 0x0L)
                     { jjCheckNAddStates(1328, 1334); }
                  break;
               case 1130:
                  if (curChar == 40 && kind > 109)
                     kind = 109;
                  break;
               case 1134:
                  if (curChar == 40 && kind > 115)
                     kind = 115;
                  break;
               case 1137:
                  if (curChar == 40 && kind > 116)
                     kind = 116;
                  break;
               case 1142:
                  if (curChar == 40 && kind > 113)
                     kind = 113;
                  break;
               case 1145:
                  if (curChar == 40 && kind > 114)
                     kind = 114;
                  break;
               case 1153:
                  if ((0x3ff000000000000L & l) == 0x0L)
                     break;
                  if (kind > 19)
                     kind = 19;
                  { jjCheckNAddStates(0, 147); }
                  break;
               case 1154:
                  if ((0x3ff000000000000L & l) == 0x0L)
                     break;
                  if (kind > 19)
                     kind = 19;
                  { jjCheckNAddTwoStates(1154, 202); }
                  break;
               case 1155:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(1155, 1156); }
                  break;
               case 1156:
                  if (curChar == 46)
                     { jjCheckNAdd(201); }
                  break;
               case 1157:
                  if ((0x3ff000000000000L & l) == 0x0L)
                     break;
                  if (kind > 24)
                     kind = 24;
                  { jjCheckNAddTwoStates(1157, 206); }
                  break;
               case 1158:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(1158, 1159); }
                  break;
               case 1159:
                  if (curChar == 46)
                     { jjCheckNAdd(205); }
                  break;
               case 1160:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(1335, 1337); }
                  break;
               case 1161:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(1161, 1162); }
                  break;
               case 1162:
                  if (curChar == 46)
                     { jjCheckNAdd(209); }
                  break;
               case 1163:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(1338, 1340); }
                  break;
               case 1164:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(1164, 1165); }
                  break;
               case 1165:
                  if (curChar == 46)
                     { jjCheckNAdd(237); }
                  break;
               case 1166:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(1341, 1343); }
                  break;
               case 1167:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(1167, 1168); }
                  break;
               case 1168:
                  if (curChar == 46)
                     { jjCheckNAdd(244); }
                  break;
               case 1169:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(1344, 1346); }
                  break;
               case 1170:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(1170, 1171); }
                  break;
               case 1171:
                  if (curChar == 46)
                     { jjCheckNAdd(272); }
                  break;
               case 1172:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(1347, 1349); }
                  break;
               case 1173:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(1173, 1174); }
                  break;
               case 1174:
                  if (curChar == 46)
                     { jjCheckNAdd(278); }
                  break;
               case 1175:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(1350, 1352); }
                  break;
               case 1176:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(1176, 1177); }
                  break;
               case 1177:
                  if (curChar == 46)
                     { jjCheckNAdd(284); }
                  break;
               case 1178:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(1353, 1355); }
                  break;
               case 1179:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(1179, 1180); }
                  break;
               case 1180:
                  if (curChar == 46)
                     { jjCheckNAdd(290); }
                  break;
               case 1181:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(1356, 1358); }
                  break;
               case 1182:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(1182, 1183); }
                  break;
               case 1183:
                  if (curChar == 46)
                     { jjCheckNAdd(298); }
                  break;
               case 1184:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(1359, 1361); }
                  break;
               case 1185:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(1185, 1186); }
                  break;
               case 1186:
                  if (curChar == 46)
                     { jjCheckNAdd(306); }
                  break;
               case 1187:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(1362, 1364); }
                  break;
               case 1188:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(1188, 1189); }
                  break;
               case 1189:
                  if (curChar == 46)
                     { jjCheckNAdd(312); }
                  break;
               case 1190:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(1365, 1367); }
                  break;
               case 1191:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(1191, 1192); }
                  break;
               case 1192:
                  if (curChar == 46)
                     { jjCheckNAdd(318); }
                  break;
               case 1193:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(1368, 1370); }
                  break;
               case 1194:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(1194, 1195); }
                  break;
               case 1195:
                  if (curChar == 46)
                     { jjCheckNAdd(324); }
                  break;
               case 1196:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(1371, 1373); }
                  break;
               case 1197:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(1197, 1198); }
                  break;
               case 1198:
                  if (curChar == 46)
                     { jjCheckNAdd(330); }
                  break;
               case 1199:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(1374, 1376); }
                  break;
               case 1200:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(1200, 1201); }
                  break;
               case 1201:
                  if (curChar == 46)
                     { jjCheckNAdd(336); }
                  break;
               case 1202:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(1377, 1379); }
                  break;
               case 1203:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(1203, 1204); }
                  break;
               case 1204:
                  if (curChar == 46)
                     { jjCheckNAdd(342); }
                  break;
               case 1205:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(1380, 1382); }
                  break;
               case 1206:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(1206, 1207); }
                  break;
               case 1207:
                  if (curChar == 46)
                     { jjCheckNAdd(347); }
                  break;
               case 1208:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(1383, 1385); }
                  break;
               case 1209:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(1209, 1210); }
                  break;
               case 1210:
                  if (curChar == 46)
                     { jjCheckNAdd(354); }
                  break;
               case 1211:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(1386, 1388); }
                  break;
               case 1212:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(1212, 1213); }
                  break;
               case 1213:
                  if (curChar == 46)
                     { jjCheckNAdd(361); }
                  break;
               case 1214:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(1389, 1391); }
                  break;
               case 1215:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(1215, 1216); }
                  break;
               case 1216:
                  if (curChar == 46)
                     { jjCheckNAdd(369); }
                  break;
               case 1217:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(1392, 1395); }
                  break;
               case 1218:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(1218, 1219); }
                  break;
               case 1219:
                  if (curChar == 46)
                     { jjCheckNAdd(377); }
                  break;
               case 1220:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(1396, 1399); }
                  break;
               case 1221:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(1221, 1222); }
                  break;
               case 1222:
                  if (curChar == 46)
                     { jjCheckNAdd(405); }
                  break;
               case 1223:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(1400, 1403); }
                  break;
               case 1224:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(1224, 1225); }
                  break;
               case 1225:
                  if (curChar == 46)
                     { jjCheckNAdd(421); }
                  break;
               case 1226:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(1404, 1407); }
                  break;
               case 1227:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(1227, 1228); }
                  break;
               case 1228:
                  if (curChar == 46)
                     { jjCheckNAdd(449); }
                  break;
               case 1229:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(1408, 1410); }
                  break;
               case 1230:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(1230, 1231); }
                  break;
               case 1231:
                  if (curChar == 46)
                     { jjCheckNAdd(489); }
                  break;
               case 1232:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(1411, 1413); }
                  break;
               case 1233:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(1233, 1234); }
                  break;
               case 1234:
                  if (curChar == 46)
                     { jjCheckNAdd(496); }
                  break;
               case 1235:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(1414, 1416); }
                  break;
               case 1236:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(1236, 1237); }
                  break;
               case 1237:
                  if (curChar == 46)
                     { jjCheckNAdd(504); }
                  break;
               case 1238:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddStates(1417, 1420); }
                  break;
               case 1239:
                  if ((0x3ff000000000000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(1239, 1240); }
                  break;
               case 1240:
                  if (curChar == 46)
                     { jjCheckNAdd(509); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((0x7fffffe87fffffeL & l) != 0x0L)
                  {
                     if (kind > 22)
                        kind = 22;
                     { jjCheckNAddStates(1421, 1425); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddStates(1426, 1429); }
                  else if (curChar == 64)
                     { jjCheckNAddStates(1430, 1442); }
                  if ((0x800000008000L & l) != 0x0L)
                     { jjAddStates(1443, 1444); }
                  else if ((0x10000000100L & l) != 0x0L)
                     { jjAddStates(1445, 1446); }
                  else if ((0x100000001000L & l) != 0x0L)
                     { jjCheckNAddStates(1447, 1449); }
                  else if ((0x20000000200000L & l) != 0x0L)
                     { jjAddStates(1450, 1451); }
                  else if ((0x4000000040000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 198;
                  else if ((0x40000000400000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 193;
                  else if ((0x800000008L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 189;
                  else if ((0x400000004000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 184;
                  break;
               case 182:
                  if ((0x7fffffe87fffffeL & l) != 0x0L)
                     { jjCheckNAddStates(192, 194); }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(550, 551); }
                  if ((0x7fffffe87fffffeL & l) != 0x0L)
                  {
                     if (kind > 22)
                        kind = 22;
                     { jjCheckNAddTwoStates(548, 549); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(604, 605); }
                  if ((0x10000000100000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 183;
                  break;
               case 547:
                  if ((0x7fffffe87fffffeL & l) != 0x0L)
                     { jjCheckNAddStates(192, 194); }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(550, 635); }
                  if ((0x7fffffe87fffffeL & l) != 0x0L)
                  {
                     if (kind > 22)
                        kind = 22;
                     { jjCheckNAddTwoStates(548, 549); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(604, 621); }
                  break;
               case 1148:
                  if ((0x7fffffe87fffffeL & l) != 0x0L)
                     { jjCheckNAddStates(192, 194); }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(550, 551); }
                  if ((0x7fffffe87fffffeL & l) != 0x0L)
                  {
                     if (kind > 22)
                        kind = 22;
                     { jjCheckNAddTwoStates(548, 549); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(604, 605); }
                  if ((0x80000000800L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1151;
                  if ((0x80000000800L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1149;
                  break;
               case 184:
                  if ((0x7fffffe87fffffeL & l) != 0x0L)
                     { jjCheckNAddStates(192, 194); }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(550, 551); }
                  if ((0x7fffffe87fffffeL & l) != 0x0L)
                  {
                     if (kind > 22)
                        kind = 22;
                     { jjCheckNAddTwoStates(548, 549); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(604, 605); }
                  if ((0x800000008000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 182;
                  break;
               case 567:
                  if ((0x7fffffe87fffffeL & l) != 0x0L)
                  {
                     if (kind > 117)
                        kind = 117;
                     { jjCheckNAddTwoStates(568, 569); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(570, 587); }
                  break;
               case 183:
                  if ((0x7fffffe87fffffeL & l) != 0x0L)
                     { jjCheckNAddStates(192, 194); }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(550, 551); }
                  if ((0x7fffffe87fffffeL & l) != 0x0L)
                  {
                     if (kind > 22)
                        kind = 22;
                     { jjCheckNAddTwoStates(548, 549); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(604, 605); }
                  break;
               case 1242:
                  if ((0x7fffffe87fffffeL & l) != 0x0L)
                     { jjCheckNAddStates(192, 194); }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(550, 551); }
                  if ((0x7fffffe87fffffeL & l) != 0x0L)
                  {
                     if (kind > 22)
                        kind = 22;
                     { jjCheckNAddTwoStates(548, 549); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(604, 605); }
                  break;
               case 2:
                  if ((0xffffffffefffffffL & l) != 0x0L)
                     { jjCheckNAddStates(189, 191); }
                  break;
               case 4:
                  if (curChar == 92)
                     { jjAddStates(1452, 1455); }
                  break;
               case 8:
                  if ((0xffffff81ffffff81L & l) != 0x0L)
                     { jjCheckNAddStates(189, 191); }
                  break;
               case 9:
                  if ((0x7e0000007eL & l) != 0x0L)
                     { jjCheckNAddStates(283, 292); }
                  break;
               case 10:
                  if ((0x7e0000007eL & l) != 0x0L)
                     { jjCheckNAddStates(293, 297); }
                  break;
               case 13:
               case 15:
               case 18:
               case 22:
                  if ((0x7e0000007eL & l) != 0x0L)
                     { jjCheckNAdd(10); }
                  break;
               case 14:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 16:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 17:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 19:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 20:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 21:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 22;
                  break;
               case 24:
                  if ((0xffffffffefffffffL & l) != 0x0L)
                     { jjCheckNAddStates(186, 188); }
                  break;
               case 26:
                  if (curChar == 92)
                     { jjAddStates(1456, 1459); }
                  break;
               case 30:
                  if ((0xffffff81ffffff81L & l) != 0x0L)
                     { jjCheckNAddStates(186, 188); }
                  break;
               case 31:
                  if ((0x7e0000007eL & l) != 0x0L)
                     { jjCheckNAddStates(298, 307); }
                  break;
               case 32:
                  if ((0x7e0000007eL & l) != 0x0L)
                     { jjCheckNAddStates(308, 312); }
                  break;
               case 35:
               case 37:
               case 40:
               case 44:
                  if ((0x7e0000007eL & l) != 0x0L)
                     { jjCheckNAdd(32); }
                  break;
               case 36:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 38:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 39;
                  break;
               case 39:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 40;
                  break;
               case 41:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 42;
                  break;
               case 42:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 43;
                  break;
               case 43:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 44;
                  break;
               case 46:
                  if ((0x7fffffe87fffffeL & l) == 0x0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  { jjCheckNAddTwoStates(46, 47); }
                  break;
               case 47:
                  if (curChar == 92)
                     { jjAddStates(1460, 1461); }
                  break;
               case 48:
                  if ((0xffffff81ffffff81L & l) == 0x0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  { jjCheckNAddTwoStates(46, 47); }
                  break;
               case 49:
                  if ((0x7e0000007eL & l) == 0x0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  { jjCheckNAddStates(313, 321); }
                  break;
               case 50:
                  if ((0x7e0000007eL & l) == 0x0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  { jjCheckNAddStates(322, 325); }
                  break;
               case 54:
               case 56:
               case 59:
               case 63:
                  if ((0x7e0000007eL & l) != 0x0L)
                     { jjCheckNAdd(50); }
                  break;
               case 55:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 56;
                  break;
               case 57:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 58;
                  break;
               case 58:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 59;
                  break;
               case 60:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 61;
                  break;
               case 61:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 62;
                  break;
               case 62:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 63;
                  break;
               case 68:
                  { jjAddStates(1462, 1463); }
                  break;
               case 70:
               case 71:
                  { jjCheckNAddTwoStates(71, 72); }
                  break;
               case 74:
                  if ((0x20000000200L & l) != 0x0L)
                     { jjCheckNAddTwoStates(75, 160); }
                  break;
               case 75:
                  if ((0x200000002000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(76, 149); }
                  break;
               case 76:
                  if ((0x1000000010000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(77, 138); }
                  break;
               case 77:
                  if ((0x800000008000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(78, 127); }
                  break;
               case 78:
                  if ((0x4000000040000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(79, 116); }
                  break;
               case 79:
                  if ((0x10000000100000L & l) != 0x0L)
                     { jjAddStates(1464, 1465); }
                  break;
               case 80:
                  if ((0x200000002L & l) != 0x0L)
                     { jjCheckNAddTwoStates(81, 94); }
                  break;
               case 81:
                  if ((0x400000004000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(82, 83); }
                  break;
               case 82:
                  if ((0x10000000100000L & l) != 0x0L && kind > 77)
                     kind = 77;
                  break;
               case 83:
                  if (curChar == 92)
                     { jjCheckNAddStates(1466, 1469); }
                  break;
               case 94:
                  if (curChar == 92)
                     { jjCheckNAddStates(1470, 1473); }
                  break;
               case 95:
                  if ((0x2000000020L & l) != 0x0L)
                     { jjCheckNAddStates(1474, 1477); }
                  break;
               case 105:
                  if (curChar == 92)
                     { jjAddStates(1478, 1480); }
                  break;
               case 116:
                  if (curChar == 92)
                     { jjCheckNAddStates(1481, 1484); }
                  break;
               case 127:
                  if (curChar == 92)
                     { jjCheckNAddStates(1485, 1488); }
                  break;
               case 138:
                  if (curChar == 92)
                     { jjCheckNAddStates(1489, 1492); }
                  break;
               case 149:
                  if (curChar == 92)
                     { jjCheckNAddStates(1493, 1496); }
                  break;
               case 160:
                  if (curChar == 92)
                     { jjCheckNAddStates(1497, 1500); }
                  break;
               case 161:
                  if ((0x1000000010L & l) != 0x0L)
                     { jjCheckNAddStates(1501, 1504); }
                  break;
               case 171:
                  if (curChar == 92)
                     { jjAddStates(1505, 1508); }
                  break;
               case 185:
                  if ((0x400000004000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 184;
                  break;
               case 186:
                  if ((0x800000008L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 187;
                  break;
               case 188:
                  if ((0x100000001000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 186;
                  break;
               case 189:
                  if ((0x200000002L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 188;
                  break;
               case 190:
                  if ((0x800000008L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 189;
                  break;
               case 191:
                  if ((0x4000000040000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 192;
                  break;
               case 193:
                  if ((0x200000002L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 191;
                  break;
               case 194:
                  if ((0x40000000400000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 193;
                  break;
               case 195:
                  if ((0x400000004L & l) != 0x0L)
                     { jjCheckNAddTwoStates(196, 197); }
                  break;
               case 196:
                  if ((0x200000002L & l) != 0x0L)
                     { jjCheckNAdd(197); }
                  break;
               case 198:
                  if ((0x8000000080L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 195;
                  break;
               case 199:
                  if ((0x4000000040000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 198;
                  break;
               case 202:
                  if ((0x2000000020L & l) != 0x0L)
                     { jjAddStates(1509, 1510); }
                  break;
               case 206:
                  if ((0x2000000020L & l) != 0x0L)
                     { jjAddStates(1511, 1512); }
                  break;
               case 210:
                  if (curChar == 92)
                     { jjAddStates(1513, 1515); }
                  break;
               case 213:
                  if ((0x200000002000L & l) != 0x0L && kind > 78)
                     kind = 78;
                  break;
               case 214:
                  if (curChar == 92)
                     { jjCheckNAddStates(1516, 1519); }
                  break;
               case 215:
                  if ((0x1000000010L & l) == 0x0L)
                     break;
                  if (kind > 78)
                     kind = 78;
                  { jjAddStates(1520, 1521); }
                  break;
               case 233:
                  if ((0x2000000020L & l) != 0x0L)
                     { jjCheckNAddStates(1522, 1525); }
                  break;
               case 236:
                  if ((0x2000000020L & l) != 0x0L)
                     { jjCheckNAddTwoStates(213, 214); }
                  break;
               case 238:
                  if ((0x2000000020L & l) != 0x0L)
                     { jjAddStates(1526, 1527); }
                  break;
               case 241:
                  if ((0x200000002000L & l) != 0x0L && kind > 79)
                     kind = 79;
                  break;
               case 242:
                  if ((0x2000000020L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 241;
                  break;
               case 243:
                  if ((0x4000000040000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 242;
                  break;
               case 245:
                  if (curChar == 92)
                     { jjAddStates(1528, 1530); }
                  break;
               case 248:
                  if ((0x100000001000000L & l) != 0x0L && kind > 80)
                     kind = 80;
                  break;
               case 249:
                  if (curChar == 92)
                     { jjCheckNAddStates(1531, 1534); }
                  break;
               case 268:
                  if ((0x2000000020L & l) != 0x0L)
                     { jjCheckNAddStates(1535, 1538); }
                  break;
               case 271:
                  if ((0x2000000020L & l) != 0x0L)
                     { jjCheckNAddTwoStates(248, 249); }
                  break;
               case 273:
                  if ((0x2000000020L & l) != 0x0L)
                     { jjAddStates(1539, 1540); }
                  break;
               case 276:
                  if ((0x10000000100L & l) != 0x0L && kind > 81)
                     kind = 81;
                  break;
               case 277:
                  if ((0x800000008L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 276;
                  break;
               case 279:
                  if ((0x2000000020L & l) != 0x0L)
                     { jjAddStates(1541, 1542); }
                  break;
               case 282:
                  if ((0x80000000800000L & l) != 0x0L && kind > 82)
                     kind = 82;
                  break;
               case 283:
                  if ((0x40000000400000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 282;
                  break;
               case 285:
                  if ((0x2000000020L & l) != 0x0L)
                     { jjAddStates(1543, 1544); }
                  break;
               case 288:
                  if ((0x10000000100L & l) != 0x0L && kind > 83)
                     kind = 83;
                  break;
               case 289:
                  if ((0x40000000400000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 288;
                  break;
               case 291:
                  if ((0x2000000020L & l) != 0x0L)
                     { jjAddStates(1545, 1546); }
                  break;
               case 294:
                  if ((0x400000004000L & l) != 0x0L && kind > 84)
                     kind = 84;
                  break;
               case 295:
                  if ((0x20000000200L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 294;
                  break;
               case 296:
                  if ((0x200000002000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 295;
                  break;
               case 297:
                  if ((0x40000000400000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 296;
                  break;
               case 299:
                  if ((0x2000000020L & l) != 0x0L)
                     { jjAddStates(1547, 1548); }
                  break;
               case 302:
                  if ((0x100000001000000L & l) != 0x0L && kind > 85)
                     kind = 85;
                  break;
               case 303:
                  if ((0x200000002L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 302;
                  break;
               case 304:
                  if ((0x200000002000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 303;
                  break;
               case 305:
                  if ((0x40000000400000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 304;
                  break;
               case 307:
                  if ((0x2000000020L & l) != 0x0L)
                     { jjAddStates(1549, 1550); }
                  break;
               case 310:
                  if ((0x100000001000000L & l) != 0x0L && kind > 86)
                     kind = 86;
                  break;
               case 311:
                  if ((0x1000000010000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 310;
                  break;
               case 313:
                  if ((0x2000000020L & l) != 0x0L)
                     { jjAddStates(1551, 1552); }
                  break;
               case 316:
                  if ((0x200000002000L & l) != 0x0L && kind > 87)
                     kind = 87;
                  break;
               case 317:
                  if ((0x800000008L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 316;
                  break;
               case 319:
                  if ((0x2000000020L & l) != 0x0L)
                     { jjAddStates(1553, 1554); }
                  break;
               case 322:
                  if ((0x200000002000L & l) != 0x0L && kind > 88)
                     kind = 88;
                  break;
               case 323:
                  if ((0x200000002000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 322;
                  break;
               case 325:
                  if ((0x2000000020L & l) != 0x0L)
                     { jjAddStates(1555, 1556); }
                  break;
               case 328:
                  if ((0x400000004000L & l) != 0x0L && kind > 89)
                     kind = 89;
                  break;
               case 329:
                  if ((0x20000000200L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 328;
                  break;
               case 331:
                  if ((0x2000000020L & l) != 0x0L)
                     { jjAddStates(1557, 1558); }
                  break;
               case 334:
                  if ((0x10000000100000L & l) != 0x0L && kind > 90)
                     kind = 90;
                  break;
               case 335:
                  if ((0x1000000010000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 334;
                  break;
               case 337:
                  if ((0x2000000020L & l) != 0x0L)
                     { jjAddStates(1559, 1560); }
                  break;
               case 340:
                  if ((0x800000008L & l) != 0x0L && kind > 91)
                     kind = 91;
                  break;
               case 341:
                  if ((0x1000000010000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 340;
                  break;
               case 343:
                  if ((0x2000000020L & l) != 0x0L)
                     { jjAddStates(1561, 1562); }
                  break;
               case 346:
                  if ((0x2000000020000L & l) != 0x0L && kind > 92)
                     kind = 92;
                  break;
               case 348:
                  if ((0x2000000020L & l) != 0x0L)
                     { jjAddStates(1563, 1564); }
                  break;
               case 351:
                  if ((0x8000000080L & l) != 0x0L && kind > 93)
                     kind = 93;
                  break;
               case 352:
                  if ((0x2000000020L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 351;
                  break;
               case 353:
                  if ((0x1000000010L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 352;
                  break;
               case 355:
                  if ((0x2000000020L & l) != 0x0L)
                     { jjAddStates(1565, 1566); }
                  break;
               case 358:
                  if ((0x1000000010L & l) != 0x0L && kind > 94)
                     kind = 94;
                  break;
               case 359:
                  if ((0x200000002L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 358;
                  break;
               case 360:
                  if ((0x4000000040000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 359;
                  break;
               case 362:
                  if ((0x2000000020L & l) != 0x0L)
                     { jjAddStates(1567, 1568); }
                  break;
               case 365:
                  if ((0x1000000010L & l) != 0x0L && kind > 95)
                     kind = 95;
                  break;
               case 366:
                  if ((0x200000002L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 365;
                  break;
               case 367:
                  if ((0x4000000040000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 366;
                  break;
               case 368:
                  if ((0x8000000080L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 367;
                  break;
               case 370:
                  if ((0x2000000020L & l) != 0x0L)
                     { jjAddStates(1569, 1570); }
                  break;
               case 373:
                  if ((0x400000004000L & l) != 0x0L && kind > 96)
                     kind = 96;
                  break;
               case 374:
                  if ((0x4000000040000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 373;
                  break;
               case 375:
                  if ((0x20000000200000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 374;
                  break;
               case 376:
                  if ((0x10000000100000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 375;
                  break;
               case 378:
                  if ((0x2000000020L & l) != 0x0L)
                     { jjAddStates(1571, 1572); }
                  break;
               case 381:
                  if ((0x200000002000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(382, 383); }
                  break;
               case 382:
                  if ((0x8000000080000L & l) != 0x0L && kind > 97)
                     kind = 97;
                  break;
               case 383:
                  if (curChar == 92)
                     { jjCheckNAddStates(1573, 1576); }
                  break;
               case 394:
                  if (curChar == 92)
                     { jjAddStates(1577, 1580); }
                  break;
               case 395:
                  if ((0x1000000010L & l) != 0x0L)
                     { jjCheckNAddStates(1581, 1584); }
                  break;
               case 406:
                  if ((0x2000000020L & l) != 0x0L)
                     { jjAddStates(1585, 1586); }
                  break;
               case 409:
                  if ((0x8000000080000L & l) != 0x0L && kind > 98)
                     kind = 98;
                  break;
               case 410:
                  if (curChar == 92)
                     { jjAddStates(1587, 1590); }
                  break;
               case 422:
                  if ((0x2000000020L & l) != 0x0L)
                     { jjAddStates(1591, 1592); }
                  break;
               case 425:
                  if ((0x10000000100L & l) != 0x0L)
                     { jjCheckNAddTwoStates(426, 427); }
                  break;
               case 426:
                  if ((0x400000004000000L & l) != 0x0L && kind > 99)
                     kind = 99;
                  break;
               case 427:
                  if (curChar == 92)
                     { jjCheckNAddStates(1593, 1596); }
                  break;
               case 428:
                  if ((0x200000002L & l) == 0x0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  { jjAddStates(1597, 1598); }
                  break;
               case 438:
                  if (curChar == 92)
                     { jjAddStates(1599, 1602); }
                  break;
               case 450:
                  if ((0x2000000020L & l) != 0x0L)
                     { jjAddStates(1603, 1604); }
                  break;
               case 453:
                  if ((0x80000000800L & l) != 0x0L)
                     { jjCheckNAddTwoStates(454, 467); }
                  break;
               case 454:
                  if ((0x10000000100L & l) != 0x0L)
                     { jjCheckNAddTwoStates(455, 456); }
                  break;
               case 455:
                  if ((0x400000004000000L & l) != 0x0L && kind > 100)
                     kind = 100;
                  break;
               case 456:
                  if (curChar == 92)
                     { jjCheckNAddStates(1605, 1608); }
                  break;
               case 457:
                  if ((0x200000002L & l) == 0x0L)
                     break;
                  if (kind > 100)
                     kind = 100;
                  { jjAddStates(1609, 1610); }
                  break;
               case 467:
                  if (curChar == 92)
                     { jjCheckNAddStates(1611, 1614); }
                  break;
               case 478:
                  if (curChar == 92)
                     { jjAddStates(1615, 1618); }
                  break;
               case 479:
                  if ((0x400000004L & l) != 0x0L)
                     { jjCheckNAddStates(1619, 1622); }
                  break;
               case 490:
                  if ((0x2000000020L & l) != 0x0L)
                     { jjAddStates(1623, 1624); }
                  break;
               case 493:
                  if ((0x20000000200L & l) != 0x0L && kind > 101)
                     kind = 101;
                  break;
               case 494:
                  if ((0x1000000010000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 493;
                  break;
               case 495:
                  if ((0x1000000010L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 494;
                  break;
               case 497:
                  if ((0x2000000020L & l) != 0x0L)
                     { jjAddStates(1625, 1626); }
                  break;
               case 500:
                  if ((0x200000002000L & l) != 0x0L && kind > 102)
                     kind = 102;
                  break;
               case 501:
                  if ((0x800000008L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 500;
                  break;
               case 502:
                  if ((0x1000000010000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 501;
                  break;
               case 503:
                  if ((0x1000000010L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 502;
                  break;
               case 505:
                  if ((0x2000000020L & l) != 0x0L)
                     { jjAddStates(1627, 1628); }
                  break;
               case 510:
                  if ((0x2000000020L & l) != 0x0L)
                     { jjAddStates(1629, 1630); }
                  break;
               case 513:
                  if ((0x7fffffe87fffffeL & l) == 0x0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddTwoStates(514, 515); }
                  break;
               case 514:
                  if ((0x7fffffe07fffffeL & l) == 0x0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddTwoStates(514, 515); }
                  break;
               case 515:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(516, 517); }
                  break;
               case 516:
                  if ((0xffffff81ffffff81L & l) == 0x0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddTwoStates(514, 515); }
                  break;
               case 517:
                  if ((0x7e0000007eL & l) == 0x0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddStates(653, 661); }
                  break;
               case 518:
                  if ((0x7e0000007eL & l) == 0x0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddStates(662, 665); }
                  break;
               case 522:
               case 524:
               case 527:
               case 531:
                  if ((0x7e0000007eL & l) != 0x0L)
                     { jjCheckNAdd(518); }
                  break;
               case 523:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 524;
                  break;
               case 525:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 526;
                  break;
               case 526:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 527;
                  break;
               case 528:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 529;
                  break;
               case 529:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 530;
                  break;
               case 530:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 531;
                  break;
               case 532:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(516, 533); }
                  break;
               case 533:
                  if ((0x7e0000007eL & l) == 0x0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddStates(666, 674); }
                  break;
               case 534:
                  if ((0x7e0000007eL & l) == 0x0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddStates(675, 678); }
                  break;
               case 536:
               case 538:
               case 541:
               case 545:
                  if ((0x7e0000007eL & l) != 0x0L)
                     { jjCheckNAdd(534); }
                  break;
               case 537:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 538;
                  break;
               case 539:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 540;
                  break;
               case 540:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 541;
                  break;
               case 542:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 543;
                  break;
               case 543:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 544;
                  break;
               case 544:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 545;
                  break;
               case 548:
                  if ((0x7fffffe87fffffeL & l) == 0x0L)
                     break;
                  if (kind > 22)
                     kind = 22;
                  { jjCheckNAddTwoStates(548, 549); }
                  break;
               case 549:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(550, 551); }
                  break;
               case 550:
                  if ((0xffffff81ffffff81L & l) == 0x0L)
                     break;
                  if (kind > 22)
                     kind = 22;
                  { jjCheckNAddTwoStates(548, 549); }
                  break;
               case 551:
                  if ((0x7e0000007eL & l) == 0x0L)
                     break;
                  if (kind > 22)
                     kind = 22;
                  { jjCheckNAddStates(679, 687); }
                  break;
               case 552:
                  if ((0x7e0000007eL & l) == 0x0L)
                     break;
                  if (kind > 22)
                     kind = 22;
                  { jjCheckNAddStates(688, 691); }
                  break;
               case 556:
               case 558:
               case 561:
               case 565:
                  if ((0x7e0000007eL & l) != 0x0L)
                     { jjCheckNAdd(552); }
                  break;
               case 557:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 558;
                  break;
               case 559:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 560;
                  break;
               case 560:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 561;
                  break;
               case 562:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 563;
                  break;
               case 563:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 564;
                  break;
               case 564:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 565;
                  break;
               case 568:
                  if ((0x7fffffe87fffffeL & l) == 0x0L)
                     break;
                  if (kind > 117)
                     kind = 117;
                  { jjCheckNAddTwoStates(568, 569); }
                  break;
               case 569:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(570, 571); }
                  break;
               case 570:
                  if ((0xffffff81ffffff81L & l) == 0x0L)
                     break;
                  if (kind > 117)
                     kind = 117;
                  { jjCheckNAddTwoStates(568, 569); }
                  break;
               case 571:
                  if ((0x7e0000007eL & l) == 0x0L)
                     break;
                  if (kind > 117)
                     kind = 117;
                  { jjCheckNAddStates(692, 700); }
                  break;
               case 572:
                  if ((0x7e0000007eL & l) == 0x0L)
                     break;
                  if (kind > 117)
                     kind = 117;
                  { jjCheckNAddStates(701, 704); }
                  break;
               case 576:
               case 578:
               case 581:
               case 585:
                  if ((0x7e0000007eL & l) != 0x0L)
                     { jjCheckNAdd(572); }
                  break;
               case 577:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 578;
                  break;
               case 579:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 580;
                  break;
               case 580:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 581;
                  break;
               case 582:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 583;
                  break;
               case 583:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 584;
                  break;
               case 584:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 585;
                  break;
               case 586:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(570, 587); }
                  break;
               case 587:
                  if ((0x7e0000007eL & l) == 0x0L)
                     break;
                  if (kind > 117)
                     kind = 117;
                  { jjCheckNAddStates(705, 713); }
                  break;
               case 588:
                  if ((0x7e0000007eL & l) == 0x0L)
                     break;
                  if (kind > 117)
                     kind = 117;
                  { jjCheckNAddStates(714, 717); }
                  break;
               case 590:
               case 592:
               case 595:
               case 599:
                  if ((0x7e0000007eL & l) != 0x0L)
                     { jjCheckNAdd(588); }
                  break;
               case 591:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 592;
                  break;
               case 593:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 594;
                  break;
               case 594:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 595;
                  break;
               case 596:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 597;
                  break;
               case 597:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 598;
                  break;
               case 598:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 599;
                  break;
               case 600:
                  if ((0x7fffffe87fffffeL & l) != 0x0L)
                     { jjCheckNAddStates(192, 194); }
                  break;
               case 601:
                  if ((0x7fffffe87fffffeL & l) != 0x0L)
                     { jjCheckNAddStates(192, 194); }
                  break;
               case 603:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(604, 605); }
                  break;
               case 604:
                  if ((0xffffff81ffffff81L & l) != 0x0L)
                     { jjCheckNAddStates(192, 194); }
                  break;
               case 605:
                  if ((0x7e0000007eL & l) != 0x0L)
                     { jjCheckNAddStates(718, 727); }
                  break;
               case 606:
                  if ((0x7e0000007eL & l) != 0x0L)
                     { jjCheckNAddStates(728, 732); }
                  break;
               case 610:
               case 612:
               case 615:
               case 619:
                  if ((0x7e0000007eL & l) != 0x0L)
                     { jjCheckNAdd(606); }
                  break;
               case 611:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 612;
                  break;
               case 613:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 614;
                  break;
               case 614:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 615;
                  break;
               case 616:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 617;
                  break;
               case 617:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 618;
                  break;
               case 618:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 619;
                  break;
               case 620:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(604, 621); }
                  break;
               case 621:
                  if ((0x7e0000007eL & l) != 0x0L)
                     { jjCheckNAddStates(733, 742); }
                  break;
               case 622:
                  if ((0x7e0000007eL & l) != 0x0L)
                     { jjCheckNAddStates(743, 747); }
                  break;
               case 624:
               case 626:
               case 629:
               case 633:
                  if ((0x7e0000007eL & l) != 0x0L)
                     { jjCheckNAdd(622); }
                  break;
               case 625:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 626;
                  break;
               case 627:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 628;
                  break;
               case 628:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 629;
                  break;
               case 630:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 631;
                  break;
               case 631:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 632;
                  break;
               case 632:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 633;
                  break;
               case 634:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(550, 635); }
                  break;
               case 635:
                  if ((0x7e0000007eL & l) == 0x0L)
                     break;
                  if (kind > 22)
                     kind = 22;
                  { jjCheckNAddStates(748, 756); }
                  break;
               case 636:
                  if ((0x7e0000007eL & l) == 0x0L)
                     break;
                  if (kind > 22)
                     kind = 22;
                  { jjCheckNAddStates(757, 760); }
                  break;
               case 638:
               case 640:
               case 643:
               case 647:
                  if ((0x7e0000007eL & l) != 0x0L)
                     { jjCheckNAdd(636); }
                  break;
               case 639:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 640;
                  break;
               case 641:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 642;
                  break;
               case 642:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 643;
                  break;
               case 644:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 645;
                  break;
               case 645:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 646;
                  break;
               case 646:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 647;
                  break;
               case 648:
                  if ((0x7fffffe87fffffeL & l) == 0x0L)
                     break;
                  if (kind > 22)
                     kind = 22;
                  { jjCheckNAddStates(1421, 1425); }
                  break;
               case 649:
                  if (curChar == 64)
                     { jjCheckNAddStates(1430, 1442); }
                  break;
               case 650:
                  if ((0x20000000200L & l) != 0x0L)
                     { jjCheckNAddTwoStates(651, 700); }
                  break;
               case 651:
                  if ((0x200000002000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(652, 689); }
                  break;
               case 652:
                  if ((0x1000000010000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(653, 678); }
                  break;
               case 653:
                  if ((0x800000008000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(654, 667); }
                  break;
               case 654:
                  if ((0x4000000040000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(655, 656); }
                  break;
               case 655:
                  if ((0x10000000100000L & l) != 0x0L && kind > 72)
                     kind = 72;
                  break;
               case 656:
                  if (curChar == 92)
                     { jjCheckNAddStates(1631, 1634); }
                  break;
               case 667:
                  if (curChar == 92)
                     { jjCheckNAddStates(1635, 1638); }
                  break;
               case 678:
                  if (curChar == 92)
                     { jjCheckNAddStates(1639, 1642); }
                  break;
               case 689:
                  if (curChar == 92)
                     { jjCheckNAddStates(1643, 1646); }
                  break;
               case 700:
                  if (curChar == 92)
                     { jjCheckNAddStates(1647, 1650); }
                  break;
               case 701:
                  if ((0x1000000010L & l) != 0x0L)
                     { jjCheckNAddStates(1651, 1654); }
                  break;
               case 711:
                  if ((0x1000000010000L & l) != 0x0L)
                     { jjAddStates(1655, 1656); }
                  break;
               case 712:
                  if ((0x200000002L & l) != 0x0L)
                     { jjCheckNAddTwoStates(713, 726); }
                  break;
               case 713:
                  if ((0x8000000080L & l) != 0x0L)
                     { jjAddStates(1657, 1658); }
                  break;
               case 714:
                  if ((0x2000000020L & l) != 0x0L && kind > 73)
                     kind = 73;
                  break;
               case 715:
                  if (curChar == 92)
                     { jjAddStates(1659, 1661); }
                  break;
               case 726:
                  if (curChar == 92)
                     { jjCheckNAddStates(1662, 1665); }
                  break;
               case 737:
                  if (curChar == 92)
                     { jjAddStates(1666, 1668); }
                  break;
               case 748:
                  if ((0x200000002000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(749, 786); }
                  break;
               case 749:
                  if ((0x2000000020L & l) != 0x0L)
                     { jjAddStates(1669, 1670); }
                  break;
               case 750:
                  if ((0x1000000010L & l) != 0x0L)
                     { jjCheckNAddTwoStates(751, 764); }
                  break;
               case 751:
                  if ((0x20000000200L & l) != 0x0L)
                     { jjAddStates(1671, 1672); }
                  break;
               case 752:
                  if ((0x200000002L & l) != 0x0L && kind > 74)
                     kind = 74;
                  break;
               case 753:
                  if (curChar == 92)
                     { jjAddStates(1673, 1675); }
                  break;
               case 764:
                  if (curChar == 92)
                     { jjCheckNAddStates(1676, 1679); }
                  break;
               case 775:
                  if (curChar == 92)
                     { jjAddStates(1680, 1682); }
                  break;
               case 786:
                  if (curChar == 92)
                     { jjAddStates(1683, 1685); }
                  break;
               case 797:
                  if ((0x4000000040L & l) != 0x0L)
                     { jjCheckNAddTwoStates(798, 872); }
                  break;
               case 798:
                  if ((0x800000008000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(799, 861); }
                  break;
               case 799:
                  if ((0x400000004000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(800, 850); }
                  break;
               case 800:
                  if ((0x10000000100000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 801;
                  break;
               case 802:
                  if ((0x4000000040L & l) != 0x0L)
                     { jjAddStates(1686, 1687); }
                  break;
               case 803:
                  if ((0x200000002L & l) != 0x0L)
                     { jjAddStates(1688, 1689); }
                  break;
               case 804:
                  if ((0x800000008L & l) != 0x0L)
                     { jjAddStates(1690, 1691); }
                  break;
               case 805:
                  if ((0x2000000020L & l) != 0x0L && kind > 75)
                     kind = 75;
                  break;
               case 806:
                  if (curChar == 92)
                     { jjAddStates(1692, 1694); }
                  break;
               case 817:
                  if (curChar == 92)
                     { jjAddStates(1695, 1697); }
                  break;
               case 828:
                  if (curChar == 92)
                     { jjAddStates(1698, 1700); }
                  break;
               case 839:
                  if (curChar == 92)
                     { jjAddStates(1701, 1703); }
                  break;
               case 850:
                  if (curChar == 92)
                     { jjCheckNAddStates(1704, 1707); }
                  break;
               case 861:
                  if (curChar == 92)
                     { jjCheckNAddStates(1708, 1711); }
                  break;
               case 862:
                  if ((0x2000000020L & l) != 0x0L)
                     { jjCheckNAddStates(1712, 1715); }
                  break;
               case 872:
                  if (curChar == 92)
                     { jjCheckNAddStates(1716, 1719); }
                  break;
               case 883:
                  if (curChar == 92)
                     { jjAddStates(1720, 1722); }
                  break;
               case 894:
                  if ((0x800000008L & l) != 0x0L)
                     { jjCheckNAddTwoStates(895, 956); }
                  break;
               case 895:
                  if ((0x10000000100L & l) != 0x0L)
                     { jjAddStates(1723, 1724); }
                  break;
               case 896:
                  if ((0x200000002L & l) != 0x0L)
                     { jjCheckNAddTwoStates(897, 934); }
                  break;
               case 897:
                  if ((0x4000000040000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(898, 923); }
                  break;
               case 898:
                  if ((0x8000000080000L & l) != 0x0L)
                     { jjAddStates(1725, 1726); }
                  break;
               case 899:
                  if ((0x2000000020L & l) != 0x0L)
                     { jjCheckNAddTwoStates(900, 901); }
                  break;
               case 900:
                  if ((0x10000000100000L & l) != 0x0L && kind > 76)
                     kind = 76;
                  break;
               case 901:
                  if (curChar == 92)
                     { jjCheckNAddStates(1727, 1730); }
                  break;
               case 912:
                  if (curChar == 92)
                     { jjAddStates(1731, 1733); }
                  break;
               case 923:
                  if (curChar == 92)
                     { jjCheckNAddStates(1734, 1737); }
                  break;
               case 934:
                  if (curChar == 92)
                     { jjCheckNAddStates(1738, 1741); }
                  break;
               case 945:
                  if (curChar == 92)
                     { jjAddStates(1742, 1744); }
                  break;
               case 956:
                  if (curChar == 92)
                     { jjCheckNAddStates(1745, 1748); }
                  break;
               case 967:
                  if (curChar == 92)
                     { jjAddStates(1749, 1751); }
                  break;
               case 979:
               case 980:
                  if ((0x7fffffe87fffffeL & l) == 0x0L)
                     break;
                  if (kind > 119)
                     kind = 119;
                  { jjCheckNAddTwoStates(980, 981); }
                  break;
               case 981:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(982, 983); }
                  break;
               case 982:
                  if ((0xffffff81ffffff81L & l) == 0x0L)
                     break;
                  if (kind > 119)
                     kind = 119;
                  { jjCheckNAddTwoStates(980, 981); }
                  break;
               case 983:
                  if ((0x7e0000007eL & l) == 0x0L)
                     break;
                  if (kind > 119)
                     kind = 119;
                  { jjCheckNAddStates(1178, 1186); }
                  break;
               case 984:
                  if ((0x7e0000007eL & l) == 0x0L)
                     break;
                  if (kind > 119)
                     kind = 119;
                  { jjCheckNAddStates(1187, 1190); }
                  break;
               case 988:
               case 990:
               case 993:
               case 997:
                  if ((0x7e0000007eL & l) != 0x0L)
                     { jjCheckNAdd(984); }
                  break;
               case 989:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 990;
                  break;
               case 991:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 992;
                  break;
               case 992:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 993;
                  break;
               case 994:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 995;
                  break;
               case 995:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 996;
                  break;
               case 996:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 997;
                  break;
               case 998:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(982, 999); }
                  break;
               case 999:
                  if ((0x7e0000007eL & l) == 0x0L)
                     break;
                  if (kind > 119)
                     kind = 119;
                  { jjCheckNAddStates(1191, 1199); }
                  break;
               case 1000:
                  if ((0x7e0000007eL & l) == 0x0L)
                     break;
                  if (kind > 119)
                     kind = 119;
                  { jjCheckNAddStates(1200, 1203); }
                  break;
               case 1002:
               case 1004:
               case 1007:
               case 1011:
                  if ((0x7e0000007eL & l) != 0x0L)
                     { jjCheckNAdd(1000); }
                  break;
               case 1003:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1004;
                  break;
               case 1005:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1006;
                  break;
               case 1006:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1007;
                  break;
               case 1008:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1009;
                  break;
               case 1009:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1010;
                  break;
               case 1010:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1011;
                  break;
               case 1012:
                  if (curChar == 92)
                     { jjCheckNAddStates(1752, 1755); }
                  break;
               case 1013:
                  if ((0x1000000010L & l) != 0x0L)
                     { jjCheckNAddStates(1756, 1759); }
                  break;
               case 1023:
                  if (curChar == 92)
                     { jjCheckNAddStates(1760, 1763); }
                  break;
               case 1034:
                  if (curChar == 92)
                     { jjCheckNAddStates(1764, 1767); }
                  break;
               case 1045:
                  if ((0x20000000200000L & l) != 0x0L)
                     { jjAddStates(1450, 1451); }
                  break;
               case 1047:
                  if ((0x7e0000007eL & l) == 0x0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddTwoStates(1048, 1055); }
                  break;
               case 1049:
                  if ((0x7e0000007eL & l) == 0x0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  jjstateSet[jjnewStateCnt++] = 1050;
                  break;
               case 1050:
                  if ((0x7e0000007eL & l) == 0x0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddStates(1248, 1251); }
                  break;
               case 1051:
                  if ((0x7e0000007eL & l) != 0x0L && kind > 106)
                     kind = 106;
                  break;
               case 1052:
                  if ((0x7e0000007eL & l) == 0x0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAdd(1051); }
                  break;
               case 1053:
                  if ((0x7e0000007eL & l) == 0x0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddTwoStates(1051, 1052); }
                  break;
               case 1054:
                  if ((0x7e0000007eL & l) == 0x0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddStates(1252, 1254); }
                  break;
               case 1055:
                  if ((0x7e0000007eL & l) == 0x0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddStates(1255, 1259); }
                  break;
               case 1056:
                  if ((0x7e0000007eL & l) == 0x0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAdd(1048); }
                  break;
               case 1057:
                  if ((0x7e0000007eL & l) == 0x0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddTwoStates(1056, 1048); }
                  break;
               case 1058:
                  if ((0x7e0000007eL & l) == 0x0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddStates(1260, 1262); }
                  break;
               case 1059:
                  if ((0x7e0000007eL & l) == 0x0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddStates(1263, 1266); }
                  break;
               case 1060:
                  if ((0x100000001000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1061;
                  break;
               case 1062:
                  if ((0x7fffffffefffffffL & l) != 0x0L)
                     { jjCheckNAddStates(1273, 1276); }
                  break;
               case 1065:
                  if (curChar == 92)
                     { jjAddStates(1768, 1769); }
                  break;
               case 1066:
                  if ((0xffffff81ffffff81L & l) != 0x0L)
                     { jjCheckNAddStates(1273, 1276); }
                  break;
               case 1067:
                  if ((0x7e0000007eL & l) != 0x0L)
                     { jjCheckNAddStates(1277, 1286); }
                  break;
               case 1068:
                  if ((0x7e0000007eL & l) != 0x0L)
                     { jjCheckNAddStates(1287, 1291); }
                  break;
               case 1072:
               case 1074:
               case 1077:
               case 1081:
                  if ((0x7e0000007eL & l) != 0x0L)
                     { jjCheckNAdd(1068); }
                  break;
               case 1073:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1074;
                  break;
               case 1075:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1076;
                  break;
               case 1076:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1077;
                  break;
               case 1078:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1079;
                  break;
               case 1079:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1080;
                  break;
               case 1080:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1081;
                  break;
               case 1083:
                  if ((0xffffffffefffffffL & l) != 0x0L)
                     { jjCheckNAddStates(1292, 1294); }
                  break;
               case 1085:
                  if (curChar == 92)
                     { jjAddStates(1770, 1773); }
                  break;
               case 1089:
                  if ((0xffffff81ffffff81L & l) != 0x0L)
                     { jjCheckNAddStates(1292, 1294); }
                  break;
               case 1090:
                  if ((0x7e0000007eL & l) != 0x0L)
                     { jjCheckNAddStates(1295, 1304); }
                  break;
               case 1091:
                  if ((0x7e0000007eL & l) != 0x0L)
                     { jjCheckNAddStates(1305, 1309); }
                  break;
               case 1094:
               case 1096:
               case 1099:
               case 1103:
                  if ((0x7e0000007eL & l) != 0x0L)
                     { jjCheckNAdd(1091); }
                  break;
               case 1095:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1096;
                  break;
               case 1097:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1098;
                  break;
               case 1098:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1099;
                  break;
               case 1100:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1101;
                  break;
               case 1101:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1102;
                  break;
               case 1102:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1103;
                  break;
               case 1105:
                  if ((0xffffffffefffffffL & l) != 0x0L)
                     { jjCheckNAddStates(1310, 1312); }
                  break;
               case 1107:
                  if (curChar == 92)
                     { jjAddStates(1774, 1777); }
                  break;
               case 1111:
                  if ((0xffffff81ffffff81L & l) != 0x0L)
                     { jjCheckNAddStates(1310, 1312); }
                  break;
               case 1112:
                  if ((0x7e0000007eL & l) != 0x0L)
                     { jjCheckNAddStates(1313, 1322); }
                  break;
               case 1113:
                  if ((0x7e0000007eL & l) != 0x0L)
                     { jjCheckNAddStates(1323, 1327); }
                  break;
               case 1116:
               case 1118:
               case 1121:
               case 1125:
                  if ((0x7e0000007eL & l) != 0x0L)
                     { jjCheckNAdd(1113); }
                  break;
               case 1117:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1118;
                  break;
               case 1119:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1120;
                  break;
               case 1120:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1121;
                  break;
               case 1122:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1123;
                  break;
               case 1123:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1124;
                  break;
               case 1124:
                  if ((0x7e0000007eL & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1125;
                  break;
               case 1127:
                  if ((0x4000000040000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1060;
                  break;
               case 1128:
                  if ((0x100000001000L & l) != 0x0L)
                     { jjCheckNAddStates(1447, 1449); }
                  break;
               case 1129:
                  if ((0x8000000080L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1130;
                  break;
               case 1131:
                  if ((0x400000004000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1129;
                  break;
               case 1132:
                  if ((0x200000002L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1131;
                  break;
               case 1133:
                  if ((0x400000004L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1134;
                  break;
               case 1135:
                  if ((0x200000002L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1133;
                  break;
               case 1136:
                  if ((0x10000000100L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1137;
                  break;
               case 1138:
                  if ((0x800000008L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1136;
                  break;
               case 1139:
                  if ((0x10000000100L & l) != 0x0L)
                     { jjAddStates(1445, 1446); }
                  break;
               case 1140:
                  if ((0x100000001000L & l) != 0x0L)
                     { jjCheckNAddTwoStates(1141, 1142); }
                  break;
               case 1141:
                  if ((0x200000002L & l) != 0x0L)
                     { jjCheckNAdd(1142); }
                  break;
               case 1143:
                  if ((0x8000000080000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1140;
                  break;
               case 1144:
                  if ((0x400000004L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1145;
                  break;
               case 1146:
                  if ((0x80000000800000L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1144;
                  break;
               case 1147:
                  if ((0x800000008000L & l) != 0x0L)
                     { jjAddStates(1443, 1444); }
                  break;
               case 1149:
                  if ((0x100000001000L & l) != 0x0L)
                     { jjCheckNAdd(1135); }
                  break;
               case 1150:
                  if ((0x80000000800L & l) != 0x0L)
                     jjstateSet[jjnewStateCnt++] = 1151;
                  break;
               case 1151:
                  if ((0x100000001000L & l) != 0x0L)
                     { jjCheckNAdd(1138); }
                  break;
               case 1152:
                  if (curChar == 92)
                     { jjCheckNAddStates(1426, 1429); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 22)
                     kind = 22;
                  { jjCheckNAddStates(1421, 1425); }
                  break;
               case 182:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 22)
                        kind = 22;
                     { jjCheckNAddTwoStates(548, 549); }
                  }
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(192, 194); }
                  break;
               case 547:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 22)
                        kind = 22;
                     { jjCheckNAddTwoStates(548, 549); }
                  }
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(192, 194); }
                  break;
               case 1148:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 22)
                        kind = 22;
                     { jjCheckNAddTwoStates(548, 549); }
                  }
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(192, 194); }
                  break;
               case 184:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 22)
                        kind = 22;
                     { jjCheckNAddTwoStates(548, 549); }
                  }
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(192, 194); }
                  break;
               case 567:
               case 568:
               case 570:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 117)
                     kind = 117;
                  { jjCheckNAddTwoStates(568, 569); }
                  break;
               case 183:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 22)
                        kind = 22;
                     { jjCheckNAddTwoStates(548, 549); }
                  }
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(192, 194); }
                  break;
               case 1242:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 22)
                        kind = 22;
                     { jjCheckNAddTwoStates(548, 549); }
                  }
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(192, 194); }
                  break;
               case 2:
               case 8:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(189, 191); }
                  break;
               case 24:
               case 30:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(186, 188); }
                  break;
               case 46:
               case 48:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 71)
                     kind = 71;
                  { jjCheckNAddTwoStates(46, 47); }
                  break;
               case 68:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1462, 1463); }
                  break;
               case 70:
               case 71:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(71, 72); }
                  break;
               case 513:
               case 514:
               case 516:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddTwoStates(514, 515); }
                  break;
               case 548:
               case 550:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 22)
                     kind = 22;
                  { jjCheckNAddTwoStates(548, 549); }
                  break;
               case 600:
               case 604:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(192, 194); }
                  break;
               case 601:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(192, 194); }
                  break;
               case 979:
               case 980:
               case 982:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 119)
                     kind = 119;
                  { jjCheckNAddTwoStates(980, 981); }
                  break;
               case 1062:
               case 1066:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1273, 1276); }
                  break;
               case 1083:
               case 1089:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1292, 1294); }
                  break;
               case 1105:
               case 1111:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1310, 1312); }
                  break;
               default : if (i1 == 0 || l1 == 0 || i2 == 0 ||  l2 == 0) break; else break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      i = jjnewStateCnt;
      jjnewStateCnt = startsAt;
      startsAt = 1241 - jjnewStateCnt;
      if (i == startsAt)
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(final java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_1(){
   switch(curChar)
   {
      case '*':
         return jjMoveStringLiteralDfa1_1(0x8L);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa1_1(long active0){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 1;
   }
   switch(curChar)
   {
      case '/':
         if ((active0 & 0x8L) != 0x0L)
            return jjStopAtPos(1, 3);
         break;
      default :
         return 2;
   }
   return 2;
}

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, "\74\41\55\55", "\55\55\76", "\176\75", 
"\174\75", "\136\75", "\44\75", "\52\75", "\173", "\175", "\50", "\51", "\56", "\73", 
"\72", "\52", "\57", "\55", "\75", "\133", "\135", "\53", "\76", "\176", "\54", null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, };
protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = im == null ? input_stream.getImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind);
   t.kind = jjmatchedKind;
   t.image = curTokenImage;

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}
static final int[] jjnextStates = {
   1154, 1155, 1156, 202, 1157, 1158, 1159, 206, 1160, 1161, 1162, 210, 1163, 1164, 1165, 238, 
   243, 1166, 1167, 1168, 245, 1169, 1170, 1171, 273, 277, 1172, 1173, 1174, 279, 283, 1175, 
   1176, 1177, 285, 289, 1178, 1179, 1180, 291, 297, 1181, 1182, 1183, 299, 305, 1184, 1185, 
   1186, 307, 311, 1187, 1188, 1189, 313, 317, 1190, 1191, 1192, 319, 323, 1193, 1194, 1195, 
   325, 329, 1196, 1197, 1198, 331, 335, 1199, 1200, 1201, 337, 341, 1202, 1203, 1204, 343, 
   346, 1205, 1206, 1207, 348, 353, 1208, 1209, 1210, 355, 360, 1211, 1212, 1213, 362, 368, 
   1214, 1215, 1216, 370, 376, 1217, 1218, 1219, 378, 381, 1220, 1221, 1222, 406, 409, 1223, 
   1224, 1225, 422, 425, 1226, 1227, 1228, 450, 453, 1229, 1230, 1231, 490, 495, 1232, 1233, 
   1234, 497, 503, 1235, 1236, 1237, 505, 508, 1238, 1239, 1240, 510, 513, 532, 478, 438, 
   410, 394, 268, 233, 547, 566, 600, 620, 634, 201, 205, 209, 237, 244, 272, 278, 
   284, 290, 298, 306, 312, 318, 324, 330, 336, 342, 347, 354, 361, 369, 377, 405, 
   421, 449, 489, 496, 504, 509, 65, 66, 74, 171, 24, 25, 26, 2, 3, 4, 
   601, 602, 603, 567, 586, 509, 510, 513, 532, 504, 505, 508, 496, 497, 503, 489, 
   490, 495, 449, 450, 453, 478, 421, 422, 425, 438, 405, 406, 409, 410, 377, 378, 
   381, 394, 369, 370, 376, 361, 362, 368, 354, 355, 360, 347, 348, 353, 342, 343, 
   346, 336, 337, 341, 330, 331, 335, 324, 325, 329, 318, 319, 323, 312, 313, 317, 
   306, 307, 311, 298, 299, 305, 290, 291, 297, 284, 285, 289, 278, 279, 283, 272, 
   273, 277, 244, 245, 268, 237, 238, 243, 209, 210, 233, 2, 10, 13, 14, 16, 
   19, 11, 12, 3, 4, 2, 11, 12, 3, 4, 24, 32, 35, 36, 38, 41, 
   33, 34, 25, 26, 24, 33, 34, 25, 26, 46, 50, 54, 55, 57, 60, 52, 
   53, 47, 46, 52, 53, 47, 69, 70, 73, 70, 72, 73, 86, 87, 91, 88, 
   89, 92, 93, 91, 88, 89, 91, 88, 89, 92, 102, 99, 100, 103, 104, 102, 
   99, 100, 102, 99, 100, 103, 108, 109, 81, 94, 113, 110, 111, 114, 115, 113, 
   110, 111, 113, 110, 111, 114, 119, 120, 80, 105, 124, 121, 122, 125, 126, 124, 
   121, 122, 124, 121, 122, 125, 130, 131, 79, 116, 135, 132, 133, 136, 137, 135, 
   132, 133, 135, 132, 133, 136, 141, 142, 78, 127, 146, 143, 144, 147, 148, 146, 
   143, 144, 146, 143, 144, 147, 152, 153, 77, 138, 157, 154, 155, 158, 159, 157, 
   154, 155, 157, 154, 155, 158, 168, 165, 166, 169, 170, 168, 165, 166, 168, 165, 
   166, 169, 174, 175, 75, 160, 179, 176, 177, 180, 181, 179, 176, 177, 179, 176, 
   177, 180, 225, 226, 213, 214, 222, 219, 220, 223, 224, 222, 219, 220, 222, 219, 
   220, 223, 230, 227, 228, 231, 232, 230, 227, 228, 230, 227, 228, 231, 235, 236, 
   210, 260, 261, 248, 249, 252, 253, 257, 254, 255, 258, 259, 257, 254, 255, 257, 
   254, 255, 258, 265, 262, 263, 266, 267, 265, 262, 263, 265, 262, 263, 266, 270, 
   271, 245, 380, 381, 394, 386, 387, 391, 388, 389, 392, 393, 391, 388, 389, 391, 
   388, 389, 392, 402, 399, 400, 403, 404, 402, 399, 400, 402, 399, 400, 403, 408, 
   409, 410, 413, 414, 418, 415, 416, 419, 420, 418, 415, 416, 418, 415, 416, 419, 
   424, 425, 438, 435, 432, 433, 436, 437, 435, 432, 433, 435, 432, 433, 436, 441, 
   442, 426, 427, 446, 443, 444, 447, 448, 446, 443, 444, 446, 443, 444, 447, 452, 
   453, 478, 464, 461, 462, 465, 466, 464, 461, 462, 464, 461, 462, 465, 470, 471, 
   455, 456, 475, 472, 473, 476, 477, 475, 472, 473, 475, 472, 473, 476, 486, 483, 
   484, 487, 488, 486, 483, 484, 486, 483, 484, 487, 512, 513, 532, 514, 518, 522, 
   523, 525, 528, 520, 521, 515, 514, 520, 521, 515, 534, 536, 537, 539, 542, 535, 
   521, 514, 515, 535, 521, 514, 515, 548, 552, 556, 557, 559, 562, 554, 555, 549, 
   548, 554, 555, 549, 568, 572, 576, 577, 579, 582, 574, 575, 569, 568, 574, 575, 
   569, 588, 590, 591, 593, 596, 589, 575, 568, 569, 589, 575, 568, 569, 601, 606, 
   610, 611, 613, 616, 608, 609, 602, 603, 601, 608, 609, 602, 603, 622, 624, 625, 
   627, 630, 623, 609, 601, 602, 603, 623, 609, 601, 602, 603, 636, 638, 639, 641, 
   644, 637, 555, 548, 549, 637, 555, 548, 549, 659, 660, 664, 661, 662, 665, 666, 
   664, 661, 662, 664, 661, 662, 665, 670, 671, 655, 656, 675, 672, 673, 676, 677, 
   675, 672, 673, 675, 672, 673, 676, 681, 682, 654, 667, 686, 683, 684, 687, 688, 
   686, 683, 684, 686, 683, 684, 687, 692, 693, 653, 678, 697, 694, 695, 698, 699, 
   697, 694, 695, 697, 694, 695, 698, 708, 705, 706, 709, 710, 708, 705, 706, 708, 
   705, 706, 709, 718, 719, 723, 720, 721, 724, 725, 723, 720, 721, 723, 720, 721, 
   724, 729, 730, 714, 715, 734, 731, 732, 735, 736, 734, 731, 732, 734, 731, 732, 
   735, 740, 741, 713, 726, 745, 742, 743, 746, 747, 745, 742, 743, 745, 742, 743, 
   746, 756, 757, 761, 758, 759, 762, 763, 761, 758, 759, 761, 758, 759, 762, 767, 
   768, 752, 753, 772, 769, 770, 773, 774, 772, 769, 770, 772, 769, 770, 773, 778, 
   779, 751, 764, 783, 780, 781, 784, 785, 783, 780, 781, 783, 780, 781, 784, 789, 
   790, 750, 775, 794, 791, 792, 795, 796, 794, 791, 792, 794, 791, 792, 795, 802, 
   839, 809, 810, 814, 811, 812, 815, 816, 814, 811, 812, 814, 811, 812, 815, 820, 
   821, 805, 806, 825, 822, 823, 826, 827, 825, 822, 823, 825, 822, 823, 826, 831, 
   832, 804, 817, 836, 833, 834, 837, 838, 836, 833, 834, 836, 833, 834, 837, 842, 
   843, 803, 828, 847, 844, 845, 848, 849, 847, 844, 845, 847, 844, 845, 848, 853, 
   854, 801, 858, 855, 856, 859, 860, 858, 855, 856, 858, 855, 856, 859, 869, 866, 
   867, 870, 871, 869, 866, 867, 869, 866, 867, 870, 875, 876, 799, 861, 880, 877, 
   878, 881, 882, 880, 877, 878, 880, 877, 878, 881, 886, 887, 798, 872, 891, 888, 
   889, 892, 893, 891, 888, 889, 891, 888, 889, 892, 904, 905, 909, 906, 907, 910, 
   911, 909, 906, 907, 909, 906, 907, 910, 915, 916, 900, 901, 920, 917, 918, 921, 
   922, 920, 917, 918, 920, 917, 918, 921, 926, 927, 899, 912, 931, 928, 929, 932, 
   933, 931, 928, 929, 931, 928, 929, 932, 937, 938, 898, 923, 942, 939, 940, 943, 
   944, 942, 939, 940, 942, 939, 940, 943, 948, 949, 897, 934, 953, 950, 951, 954, 
   955, 953, 950, 951, 953, 950, 951, 954, 959, 960, 896, 945, 964, 961, 962, 965, 
   966, 964, 961, 962, 964, 961, 962, 965, 970, 971, 895, 956, 975, 972, 973, 976, 
   977, 975, 972, 973, 975, 972, 973, 976, 979, 998, 980, 984, 988, 989, 991, 994, 
   986, 987, 981, 980, 986, 987, 981, 1000, 1002, 1003, 1005, 1008, 1001, 987, 980, 981, 
   1001, 987, 980, 981, 1020, 1017, 1018, 1021, 1022, 1020, 1017, 1018, 1020, 1017, 1018, 1021, 
   1026, 1027, 712, 737, 1031, 1028, 1029, 1032, 1033, 1031, 1028, 1029, 1031, 1028, 1029, 1032, 
   1037, 1038, 651, 700, 1042, 1039, 1040, 1043, 1044, 1042, 1039, 1040, 1042, 1039, 1040, 1043, 
   1051, 1052, 1053, 1054, 1051, 1052, 1053, 1056, 1048, 1057, 1058, 1059, 1056, 1048, 1057, 1056, 
   1048, 1057, 1058, 1062, 1082, 1104, 1064, 1065, 1126, 1062, 1063, 1064, 1065, 1062, 1068, 1072, 
   1073, 1075, 1078, 1070, 1064, 1065, 1071, 1062, 1070, 1064, 1065, 1071, 1083, 1084, 1085, 1083, 
   1091, 1094, 1095, 1097, 1100, 1092, 1093, 1084, 1085, 1083, 1092, 1093, 1084, 1085, 1105, 1106, 
   1107, 1105, 1113, 1116, 1117, 1119, 1122, 1114, 1115, 1106, 1107, 1105, 1114, 1115, 1106, 1107, 
   1062, 1082, 1104, 1063, 1064, 1065, 1126, 1160, 210, 233, 1163, 238, 243, 1166, 245, 268, 
   1169, 273, 277, 1172, 279, 283, 1175, 285, 289, 1178, 291, 297, 1181, 299, 305, 1184, 
   307, 311, 1187, 313, 317, 1190, 319, 323, 1193, 325, 329, 1196, 331, 335, 1199, 337, 
   341, 1202, 343, 346, 1205, 348, 353, 1208, 355, 360, 1211, 362, 368, 1214, 370, 376, 
   1217, 378, 381, 394, 1220, 406, 409, 410, 1223, 422, 425, 438, 1226, 450, 453, 478, 
   1229, 490, 495, 1232, 497, 503, 1235, 505, 508, 1238, 510, 513, 532, 548, 601, 602, 
   603, 549, 550, 604, 621, 635, 650, 711, 748, 797, 883, 894, 967, 978, 979, 998, 
   1012, 1023, 1034, 1148, 1150, 1143, 1146, 1132, 1135, 1138, 1046, 1127, 5, 7, 8, 9, 
   27, 29, 30, 31, 48, 49, 68, 69, 80, 105, 88, 89, 82, 90, 99, 100, 
   81, 101, 97, 98, 82, 83, 110, 111, 112, 121, 122, 79, 123, 132, 133, 78, 
   134, 143, 144, 77, 145, 154, 155, 76, 156, 165, 166, 75, 167, 163, 164, 76, 
   149, 176, 177, 74, 178, 203, 204, 207, 208, 227, 228, 229, 219, 220, 213, 221, 
   217, 218, 234, 235, 213, 214, 239, 240, 262, 263, 264, 254, 255, 248, 256, 269, 
   270, 248, 249, 274, 275, 280, 281, 286, 287, 292, 293, 300, 301, 308, 309, 314, 
   315, 320, 321, 326, 327, 332, 333, 338, 339, 344, 345, 349, 350, 356, 357, 363, 
   364, 371, 372, 379, 380, 388, 389, 382, 390, 399, 400, 381, 401, 397, 398, 382, 
   383, 407, 408, 415, 416, 409, 417, 423, 424, 432, 433, 426, 434, 430, 431, 443, 
   444, 425, 445, 451, 452, 461, 462, 455, 463, 459, 460, 472, 473, 454, 474, 483, 
   484, 453, 485, 481, 482, 454, 467, 491, 492, 498, 499, 506, 507, 511, 512, 661, 
   662, 655, 663, 672, 673, 654, 674, 683, 684, 653, 685, 694, 695, 652, 696, 705, 
   706, 651, 707, 703, 704, 652, 689, 712, 737, 714, 715, 720, 721, 722, 731, 732, 
   713, 733, 742, 743, 744, 750, 775, 752, 753, 758, 759, 760, 769, 770, 751, 771, 
   780, 781, 782, 791, 792, 793, 803, 828, 804, 817, 805, 806, 811, 812, 813, 822, 
   823, 824, 833, 834, 835, 844, 845, 846, 855, 856, 800, 857, 866, 867, 799, 868, 
   864, 865, 800, 850, 877, 878, 798, 879, 888, 889, 890, 896, 945, 899, 912, 906, 
   907, 900, 908, 917, 918, 919, 928, 929, 898, 930, 939, 940, 897, 941, 950, 951, 
   952, 961, 962, 895, 963, 972, 973, 974, 1017, 1018, 748, 1019, 1015, 1016, 749, 786, 
   1028, 1029, 711, 1030, 1039, 1040, 650, 1041, 1066, 1067, 1086, 1088, 1089, 1090, 1108, 1110, 
   1111, 1112, 
};
private static final boolean jjCanMove_0(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec2[i2] & l2) != 0L);
      default :
         if ((jjbitVec0[i1] & l1) != 0L)
            return true;
         return false;
   }
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token matchedToken;
  int curPos = 0;

  EOFLoop:
  for (;;)
  {
   try
   {
      curChar = input_stream.beginToken();
   }
   catch(final Exception e)
   {
      jjmatchedKind = 0;
      jjmatchedPos = -1;
      matchedToken = jjFillToken();
      return matchedToken;
   }
   image = jjimage;
   image.setLength(0);
   jjimageLen = 0;

   for (;;)
   {
     switch(curLexState)
     {
       case 0:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_0();
         if (jjmatchedPos == 0 && jjmatchedKind > 120)
         {
            jjmatchedKind = 120;
         }
         break;
       case 1:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_1();
         if (jjmatchedPos == 0 && jjmatchedKind > 4)
         {
            jjmatchedKind = 4;
         }
         break;
     }
     if (jjmatchedKind != 0x7fffffff)
     {
        if (jjmatchedPos + 1 < curPos)
           input_stream.backup(curPos - jjmatchedPos - 1);
        if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           matchedToken = jjFillToken();
           TokenLexicalActions(matchedToken);
       if (jjnewLexState[jjmatchedKind] != -1)
         curLexState = jjnewLexState[jjmatchedKind];
           return matchedToken;
        }
        else if ((jjtoSkip[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
         if (jjnewLexState[jjmatchedKind] != -1)
           curLexState = jjnewLexState[jjmatchedKind];
           continue EOFLoop;
        }
        jjimageLen += jjmatchedPos + 1;
      if (jjnewLexState[jjmatchedKind] != -1)
        curLexState = jjnewLexState[jjmatchedKind];
        curPos = 0;
        jjmatchedKind = 0x7fffffff;
        try {
           curChar = input_stream.readChar();
           continue;
        }
        catch (final java.io.IOException e1) { }
     }
     int error_line = input_stream.getEndLine();
     int error_column = input_stream.getEndColumn();
     String error_after = null;
     boolean EOFSeen = false;
     try {
       input_stream.readChar();
       input_stream.backup(1);
     }
     catch (final java.io.IOException e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? "" : input_stream.getImage();
        if (curChar == '\n' || curChar == '\r') {
           error_line++;
           error_column = 0;
        }
        else
           error_column++;
     }
     if (!EOFSeen) {
        input_stream.backup(1);
        error_after = curPos <= 1 ? "" : input_stream.getImage();
     }
     throw new TokenMgrException(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrException.LEXICAL_ERROR);
   }
  }
}

void SkipLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      default :
         break;
   }
}
void MoreLexicalActions()
{
   jjimageLen += (lengthOfMatch = jjmatchedPos + 1);
   switch(jjmatchedKind)
   {
      default :
         break;
   }
}
void TokenLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      case 25 :
        image.append(input_stream.getSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                                  matchedToken.image = ParserUtils.trimBy(image, 1, 1);
         break;
      case 78 :
        image.append(input_stream.getSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                         matchedToken.image = ParserUtils.trimBy(image, 0, 2);
         break;
      case 79 :
        image.append(input_stream.getSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                         matchedToken.image = ParserUtils.trimBy(image, 0, 3);
         break;
      case 80 :
        image.append(input_stream.getSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                         matchedToken.image = ParserUtils.trimBy(image, 0, 2);
         break;
      case 81 :
        image.append(input_stream.getSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                       matchedToken.image = ParserUtils.trimBy(image, 0, 2);
         break;
      case 82 :
        image.append(input_stream.getSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                       matchedToken.image = ParserUtils.trimBy(image, 0, 2);
         break;
      case 83 :
        image.append(input_stream.getSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                       matchedToken.image = ParserUtils.trimBy(image, 0, 2);
         break;
      case 84 :
        image.append(input_stream.getSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                           matchedToken.image = ParserUtils.trimBy(image, 0, 4);
         break;
      case 85 :
        image.append(input_stream.getSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                           matchedToken.image = ParserUtils.trimBy(image, 0, 4);
         break;
      case 86 :
        image.append(input_stream.getSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                              matchedToken.image = ParserUtils.trimBy(image, 0, 2);
         break;
      case 87 :
        image.append(input_stream.getSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                              matchedToken.image = ParserUtils.trimBy(image, 0, 2);
         break;
      case 88 :
        image.append(input_stream.getSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                              matchedToken.image = ParserUtils.trimBy(image, 0, 2);
         break;
      case 89 :
        image.append(input_stream.getSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                              matchedToken.image = ParserUtils.trimBy(image, 0, 2);
         break;
      case 90 :
        image.append(input_stream.getSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                              matchedToken.image = ParserUtils.trimBy(image, 0, 2);
         break;
      case 91 :
        image.append(input_stream.getSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                              matchedToken.image = ParserUtils.trimBy(image, 0, 2);
         break;
      case 92 :
        image.append(input_stream.getSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                            matchedToken.image = ParserUtils.trimBy(image, 0, 1);
         break;
      case 93 :
        image.append(input_stream.getSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                               matchedToken.image = ParserUtils.trimBy(image, 0, 3);
         break;
      case 94 :
        image.append(input_stream.getSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                               matchedToken.image = ParserUtils.trimBy(image, 0, 3);
         break;
      case 95 :
        image.append(input_stream.getSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = ParserUtils.trimBy(image, 0, 4);
         break;
      case 96 :
        image.append(input_stream.getSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = ParserUtils.trimBy(image, 0, 4);
         break;
      case 97 :
        image.append(input_stream.getSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                             matchedToken.image = ParserUtils.trimBy(image, 0, 2);
         break;
      case 98 :
        image.append(input_stream.getSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = ParserUtils.trimBy(image, 0, 1);
         break;
      case 99 :
        image.append(input_stream.getSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                             matchedToken.image = ParserUtils.trimBy(image, 0, 2);
         break;
      case 100 :
        image.append(input_stream.getSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                         matchedToken.image = ParserUtils.trimBy(image, 0, 3);
         break;
      case 101 :
        image.append(input_stream.getSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                    matchedToken.image = ParserUtils.trimBy(image, 0, 3);
         break;
      case 102 :
        image.append(input_stream.getSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                      matchedToken.image = ParserUtils.trimBy(image, 0, 4);
         break;
      case 103 :
        image.append(input_stream.getSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                              matchedToken.image = ParserUtils.trimBy(image, 0, 1);
         break;
      case 107 :
        image.append(input_stream.getSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                                            matchedToken.image = ParserUtils.trimUrl(image);
         break;
      default :
         break;
   }
}
private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

    /** Constructor. */
    public CSS3ParserTokenManager(CharStream stream){
    input_stream = stream;
  }

  /** Constructor. */
  public CSS3ParserTokenManager (CharStream stream, int lexState){
    ReInit(stream);
    SwitchTo(lexState);
  }

  /** Reinitialise parser. */
  
  public void ReInit(CharStream stream)
  {


    jjmatchedPos =
    jjnewStateCnt =
    0;
    curLexState = defaultLexState;
    input_stream = stream;
    ReInitRounds();
  }

  private void ReInitRounds()
  {
    int i;
    jjround = 0x80000001;
    for (i = 1241; i-- > 0;)
      jjrounds[i] = 0x80000000;
  }

  /** Reinitialise parser. */
  public void ReInit(CharStream stream, int lexState)
  {
    ReInit(stream);
    SwitchTo(lexState);
  }

  /** Switch to specified lex state. */
  public void SwitchTo(int lexState)
  {
    if (lexState >= 2 || lexState < 0)
      throw new TokenMgrException("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrException.INVALID_LEXICAL_STATE);
    else
      curLexState = lexState;
  }


/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
   "COMMENT",
};

/** Lex State array. */
public static final int[] jjnewLexState = {
   -1, -1, 1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
};
static final long[] jjtoToken = {
   0xffff8000037f0003L, 0x3fffdffffffffffL, 
};
static final long[] jjtoSkip = {
   0x8L, 0x0L, 
};
static final long[] jjtoSpecial = {
   0x0L, 0x0L, 
};
static final long[] jjtoMore = {
   0x14L, 0x0L, 
};
    protected CharStream  input_stream;

    private final int[] jjrounds = new int[1241];
    private final int[] jjstateSet = new int[2 * 1241];
    private final StringBuilder jjimage = new StringBuilder();
    private StringBuilder image = jjimage;
    private int jjimageLen;
    private int lengthOfMatch;
    protected int curChar;
}

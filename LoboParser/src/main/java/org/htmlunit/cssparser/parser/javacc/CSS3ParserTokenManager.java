/* CSS3ParserTokenManager.java */
/* Generated By:JavaCC: Do not edit this line. CSS3ParserTokenManager.java */
package org.htmlunit.cssparser.parser.javacc;
import java.util.LinkedList;
import java.util.Locale;
import org.htmlunit.cssparser.dom.CSSValueImpl;
import org.htmlunit.cssparser.dom.Property;
import org.htmlunit.cssparser.parser.AbstractCSSParser;
import org.htmlunit.cssparser.parser.CSSParseException;
import org.htmlunit.cssparser.parser.LexicalUnit;
import org.htmlunit.cssparser.parser.LexicalUnitImpl;
import org.htmlunit.cssparser.parser.LexicalUnit.LexicalUnitType;
import org.htmlunit.cssparser.parser.Locatable;
import org.htmlunit.cssparser.parser.Locator;
import org.htmlunit.cssparser.parser.condition.AttributeCondition;
import org.htmlunit.cssparser.parser.condition.BeginHyphenAttributeCondition;
import org.htmlunit.cssparser.parser.condition.ClassCondition;
import org.htmlunit.cssparser.parser.condition.Condition;
import org.htmlunit.cssparser.parser.condition.IdCondition;
import org.htmlunit.cssparser.parser.condition.LangCondition;
import org.htmlunit.cssparser.parser.condition.NotPseudoClassCondition;
import org.htmlunit.cssparser.parser.condition.OneOfAttributeCondition;
import org.htmlunit.cssparser.parser.condition.PrefixAttributeCondition;
import org.htmlunit.cssparser.parser.condition.PseudoClassCondition;
import org.htmlunit.cssparser.parser.condition.SubstringAttributeCondition;
import org.htmlunit.cssparser.parser.condition.SuffixAttributeCondition;
import org.htmlunit.cssparser.parser.media.MediaQuery;
import org.htmlunit.cssparser.parser.media.MediaQueryList;
import org.htmlunit.cssparser.parser.selector.ChildSelector;
import org.htmlunit.cssparser.parser.selector.DescendantSelector;
import org.htmlunit.cssparser.parser.selector.DirectAdjacentSelector;
import org.htmlunit.cssparser.parser.selector.ElementSelector;
import org.htmlunit.cssparser.parser.selector.GeneralAdjacentSelector;
import org.htmlunit.cssparser.parser.selector.PseudoElementSelector;
import org.htmlunit.cssparser.parser.selector.Selector;
import org.htmlunit.cssparser.parser.selector.SelectorList;
import org.htmlunit.cssparser.parser.selector.SelectorListImpl;
import org.htmlunit.cssparser.parser.selector.SimpleSelector;
import org.htmlunit.cssparser.util.ParserUtils;

/** Token Manager. */
@SuppressWarnings ("unused")
public class CSS3ParserTokenManager implements CSS3ParserConstants {

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_0(int pos, long active0, long active1){
   switch (pos)
   {
      case 0:
         if ((active0 & 0x200000000000000L) != 0L)
            return 1227;
         if ((active0 & 0x4000800000000000L) != 0L)
            return 557;
         if ((active0 & 0x20000L) != 0L)
         {
            jjmatchedKind = 21;
            return 184;
         }
         if ((active0 & 0x150000L) != 0L || (active1 & 0x20000000000000L) != 0L)
         {
            jjmatchedKind = 21;
            return 1228;
         }
         return -1;
      case 1:
         if ((active0 & 0x800000000000L) != 0L)
            return 577;
         if ((active0 & 0x150000L) != 0L || (active1 & 0x20000000000000L) != 0L)
         {
            jjmatchedKind = 21;
            jjmatchedPos = 1;
            return 1228;
         }
         if ((active0 & 0x20000L) != 0L)
         {
            jjmatchedKind = 21;
            jjmatchedPos = 1;
            return 182;
         }
         return -1;
      case 2:
         if ((active0 & 0x140000L) != 0L || (active1 & 0x20000000000000L) != 0L)
         {
            jjmatchedKind = 21;
            jjmatchedPos = 2;
            return 1228;
         }
         if ((active0 & 0x10000L) != 0L)
            return 1228;
         if ((active0 & 0x20000L) != 0L)
            return 183;
         return -1;
      case 3:
         if ((active0 & 0x40000L) != 0L)
            return 1228;
         if ((active0 & 0x100000L) != 0L || (active1 & 0x20000000000000L) != 0L)
         {
            jjmatchedKind = 21;
            jjmatchedPos = 3;
            return 1228;
         }
         return -1;
      case 4:
         if ((active0 & 0x100000L) != 0L || (active1 & 0x20000000000000L) != 0L)
         {
            jjmatchedKind = 21;
            jjmatchedPos = 4;
            return 1228;
         }
         return -1;
      case 5:
         if ((active0 & 0x100000L) != 0L || (active1 & 0x20000000000000L) != 0L)
         {
            jjmatchedKind = 21;
            jjmatchedPos = 5;
            return 1228;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0, long active1){
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0, active1), pos + 1);
}
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_0(){
   switch(curChar)
   {
      case 36:
         return jjMoveStringLiteralDfa1_0(0x8000000000000L, 0x0L);
      case 40:
         return jjStopAtPos(0, 55);
      case 41:
         return jjStopAtPos(0, 56);
      case 42:
         jjmatchedKind = 60;
         return jjMoveStringLiteralDfa1_0(0x10000000000000L, 0x0L);
      case 43:
         return jjStopAtPos(0, 66);
      case 44:
         return jjStopAtPos(0, 69);
      case 45:
         jjmatchedKind = 62;
         return jjMoveStringLiteralDfa1_0(0x800000000000L, 0x0L);
      case 46:
         return jjStartNfaWithStates_0(0, 57, 1227);
      case 47:
         jjmatchedKind = 61;
         return jjMoveStringLiteralDfa1_0(0x4L, 0x0L);
      case 58:
         return jjStopAtPos(0, 59);
      case 59:
         return jjStopAtPos(0, 58);
      case 60:
         return jjMoveStringLiteralDfa1_0(0x400000000000L, 0x0L);
      case 61:
         return jjStopAtPos(0, 63);
      case 62:
         return jjStopAtPos(0, 67);
      case 91:
         return jjStopAtPos(0, 64);
      case 93:
         return jjStopAtPos(0, 65);
      case 94:
         return jjMoveStringLiteralDfa1_0(0x4000000000000L, 0x0L);
      case 65:
      case 97:
         return jjMoveStringLiteralDfa1_0(0x10000L, 0x0L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa1_0(0x100000L, 0x0L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa1_0(0x20000L, 0x0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa1_0(0x40000L, 0x0L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x20000000000000L);
      case 123:
         return jjStopAtPos(0, 53);
      case 124:
         return jjMoveStringLiteralDfa1_0(0x2000000000000L, 0x0L);
      case 125:
         return jjStopAtPos(0, 54);
      case 126:
         jjmatchedKind = 68;
         return jjMoveStringLiteralDfa1_0(0x1000000000000L, 0x0L);
      default :
         return jjMoveNfa_0(1, 0);
   }
}
private int jjMoveStringLiteralDfa1_0(long active0, long active1){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0, active1);
      return 1;
   }
   switch(curChar)
   {
      case 33:
         return jjMoveStringLiteralDfa2_0(active0, 0x400000000000L, active1, 0L);
      case 42:
         if ((active0 & 0x4L) != 0L)
            return jjStopAtPos(1, 2);
         break;
      case 45:
         return jjMoveStringLiteralDfa2_0(active0, 0x800000000000L, active1, 0L);
      case 61:
         if ((active0 & 0x1000000000000L) != 0L)
            return jjStopAtPos(1, 48);
         else if ((active0 & 0x2000000000000L) != 0L)
            return jjStopAtPos(1, 49);
         else if ((active0 & 0x4000000000000L) != 0L)
            return jjStopAtPos(1, 50);
         else if ((active0 & 0x8000000000000L) != 0L)
            return jjStopAtPos(1, 51);
         else if ((active0 & 0x10000000000000L) != 0L)
            return jjStopAtPos(1, 52);
         break;
      case 78:
      case 110:
         return jjMoveStringLiteralDfa2_0(active0, 0x150000L, active1, 0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa2_0(active0, 0x20000L, active1, 0L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x20000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(0, active0, active1);
}
private int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(0, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0, active1);
      return 2;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa3_0(active0, 0x400000000000L, active1, 0L);
      case 62:
         if ((active0 & 0x800000000000L) != 0L)
            return jjStopAtPos(2, 47);
         break;
      case 68:
      case 100:
         if ((active0 & 0x10000L) != 0L)
            return jjStartNfaWithStates_0(2, 16, 1228);
         break;
      case 72:
      case 104:
         return jjMoveStringLiteralDfa3_0(active0, 0x100000L, active1, 0L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa3_0(active0, 0x40000L, active1, 0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x20000000000000L);
      case 84:
      case 116:
         if ((active0 & 0x20000L) != 0L)
            return jjStartNfaWithStates_0(2, 17, 183);
         break;
      default :
         break;
   }
   return jjStartNfa_0(1, active0, active1);
}
private int jjMoveStringLiteralDfa3_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(1, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0, active1);
      return 3;
   }
   switch(curChar)
   {
      case 45:
         if ((active0 & 0x400000000000L) != 0L)
            return jjStopAtPos(3, 46);
         break;
      case 69:
      case 101:
         return jjMoveStringLiteralDfa4_0(active0, 0x100000L, active1, 0L);
      case 71:
      case 103:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x20000000000000L);
      case 89:
      case 121:
         if ((active0 & 0x40000L) != 0L)
            return jjStartNfaWithStates_0(3, 18, 1228);
         break;
      default :
         break;
   }
   return jjStartNfa_0(2, active0, active1);
}
private int jjMoveStringLiteralDfa4_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(2, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(3, active0, active1);
      return 4;
   }
   switch(curChar)
   {
      case 73:
      case 105:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x20000000000000L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa5_0(active0, 0x100000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(3, active0, active1);
}
private int jjMoveStringLiteralDfa5_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(3, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(4, active0, active1);
      return 5;
   }
   switch(curChar)
   {
      case 68:
      case 100:
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x20000000000000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa6_0(active0, 0x100000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(4, active0, active1);
}
private int jjMoveStringLiteralDfa6_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(4, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(5, active0, active1);
      return 6;
   }
   switch(curChar)
   {
      case 58:
         if ((active1 & 0x20000000000000L) != 0L)
            return jjStopAtPos(6, 117);
         break;
      case 84:
      case 116:
         if ((active0 & 0x100000L) != 0L)
            return jjStartNfaWithStates_0(6, 20, 1228);
         break;
      default :
         break;
   }
   return jjStartNfa_0(5, active0, active1);
}
private int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
static final long[] jjbitVec0 = {
   0xfffffffffffffffeL, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec2 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 1227;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 183:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(0, 2); }
                  else if (curChar == 40)
                  {
                     if (kind > 114)
                        kind = 114;
                  }
                  if ((0x3ff200000000000L & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     { jjCheckNAddTwoStates(558, 559); }
                  }
                  else if (curChar == 40)
                  {
                     if (kind > 107)
                        kind = 107;
                  }
                  break;
               case 1228:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(0, 2); }
                  else if (curChar == 40)
                  {
                     if (kind > 114)
                        kind = 114;
                  }
                  if ((0x3ff200000000000L & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     { jjCheckNAddTwoStates(558, 559); }
                  }
                  break;
               case 182:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(0, 2); }
                  else if (curChar == 40)
                  {
                     if (kind > 114)
                        kind = 114;
                  }
                  if ((0x3ff200000000000L & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     { jjCheckNAddTwoStates(558, 559); }
                  }
                  break;
               case 1227:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 6); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(7, 9); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(10, 12); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(13, 15); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(16, 19); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(20, 23); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(24, 27); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(28, 31); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(32, 34); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(35, 37); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(38, 40); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(41, 43); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(44, 46); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(47, 49); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(50, 52); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(53, 55); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(56, 58); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(59, 61); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(62, 64); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(65, 67); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(68, 70); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(71, 73); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(74, 76); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(77, 79); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(80, 82); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(83, 85); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(86, 88); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 23)
                        kind = 23;
                     { jjCheckNAddTwoStates(215, 216); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 19)
                        kind = 19;
                     { jjCheckNAddTwoStates(211, 212); }
                  }
                  break;
               case 557:
                  if (curChar == 45)
                     { jjAddStates(89, 90); }
                  break;
               case 184:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(0, 2); }
                  else if (curChar == 40)
                  {
                     if (kind > 114)
                        kind = 114;
                  }
                  if ((0x3ff200000000000L & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     { jjCheckNAddTwoStates(558, 559); }
                  }
                  break;
               case 1:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 19)
                        kind = 19;
                     { jjCheckNAddStates(91, 238); }
                  }
                  else if ((0x100003600L & l) != 0L)
                  {
                     if (kind > 1)
                        kind = 1;
                     { jjCheckNAdd(0); }
                  }
                  else if (curChar == 45)
                     { jjAddStates(239, 243); }
                  else if (curChar == 46)
                     { jjCheckNAddStates(244, 272); }
                  else if (curChar == 33)
                     { jjCheckNAddStates(273, 276); }
                  else if (curChar == 35)
                     { jjCheckNAddTwoStates(46, 47); }
                  else if (curChar == 39)
                     { jjCheckNAddStates(277, 279); }
                  else if (curChar == 34)
                     { jjCheckNAddStates(280, 282); }
                  break;
               case 0:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 1)
                     kind = 1;
                  { jjCheckNAdd(0); }
                  break;
               case 2:
                  if ((0xfffffffbffffcbffL & l) != 0L)
                     { jjCheckNAddStates(280, 282); }
                  break;
               case 3:
                  if (curChar == 34 && kind > 24)
                     kind = 24;
                  break;
               case 5:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(280, 282); }
                  break;
               case 6:
                  if (curChar == 10)
                     { jjCheckNAddStates(280, 282); }
                  break;
               case 7:
               case 11:
                  if (curChar == 13)
                     { jjCheckNAdd(6); }
                  break;
               case 8:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(280, 282); }
                  break;
               case 9:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(283, 292); }
                  break;
               case 10:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(293, 297); }
                  break;
               case 12:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(280, 282); }
                  break;
               case 13:
               case 15:
               case 18:
               case 22:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(10); }
                  break;
               case 14:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 16:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 17:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 19:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 20:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 21:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 22;
                  break;
               case 23:
                  if (curChar == 39)
                     { jjCheckNAddStates(277, 279); }
                  break;
               case 24:
                  if ((0xffffff7fffffcbffL & l) != 0L)
                     { jjCheckNAddStates(277, 279); }
                  break;
               case 25:
                  if (curChar == 39 && kind > 24)
                     kind = 24;
                  break;
               case 27:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(277, 279); }
                  break;
               case 28:
                  if (curChar == 10)
                     { jjCheckNAddStates(277, 279); }
                  break;
               case 29:
               case 33:
                  if (curChar == 13)
                     { jjCheckNAdd(28); }
                  break;
               case 30:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(277, 279); }
                  break;
               case 31:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(298, 307); }
                  break;
               case 32:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(308, 312); }
                  break;
               case 34:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(277, 279); }
                  break;
               case 35:
               case 37:
               case 40:
               case 44:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(32); }
                  break;
               case 36:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 38:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 39;
                  break;
               case 39:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 40;
                  break;
               case 41:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 42;
                  break;
               case 42:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 43;
                  break;
               case 43:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 44;
                  break;
               case 45:
                  if (curChar == 35)
                     { jjCheckNAddTwoStates(46, 47); }
                  break;
               case 46:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddTwoStates(46, 47); }
                  break;
               case 48:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddTwoStates(46, 47); }
                  break;
               case 49:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddStates(313, 321); }
                  break;
               case 50:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddStates(322, 325); }
                  break;
               case 51:
                  if (curChar != 10)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddTwoStates(46, 47); }
                  break;
               case 52:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 53:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddTwoStates(46, 47); }
                  break;
               case 54:
               case 56:
               case 59:
               case 63:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(50); }
                  break;
               case 55:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 56;
                  break;
               case 57:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 58;
                  break;
               case 58:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 59;
                  break;
               case 60:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 61;
                  break;
               case 61:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 62;
                  break;
               case 62:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 63;
                  break;
               case 64:
                  if (curChar == 33)
                     { jjCheckNAddStates(273, 276); }
                  break;
               case 65:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(273, 276); }
                  break;
               case 66:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 67;
                  break;
               case 67:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(68, 69); }
                  break;
               case 68:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(68, 69); }
                  break;
               case 69:
                  if (curChar == 42)
                     { jjCheckNAddStates(326, 328); }
                  break;
               case 70:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(71, 72); }
                  break;
               case 71:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(71, 72); }
                  break;
               case 72:
                  if (curChar == 42)
                     { jjCheckNAddStates(329, 331); }
                  break;
               case 73:
                  if (curChar == 47)
                     { jjCheckNAddStates(273, 276); }
                  break;
               case 84:
                  if (curChar != 52)
                     break;
                  if (kind > 76)
                     kind = 76;
                  { jjAddStates(332, 333); }
                  break;
               case 85:
                  if (curChar == 10 && kind > 76)
                     kind = 76;
                  break;
               case 86:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 85;
                  break;
               case 87:
                  if ((0x100003600L & l) != 0L && kind > 76)
                     kind = 76;
                  break;
               case 88:
                  if (curChar == 53)
                     { jjCheckNAdd(84); }
                  break;
               case 89:
                  if (curChar == 55)
                     { jjCheckNAdd(84); }
                  break;
               case 90:
                  if (curChar == 48)
                     { jjCheckNAddStates(334, 338); }
                  break;
               case 91:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(88, 89); }
                  break;
               case 92:
                  if (curChar == 48)
                     { jjCheckNAddStates(339, 341); }
                  break;
               case 93:
                  if (curChar == 48)
                     { jjCheckNAddStates(342, 345); }
                  break;
               case 96:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(82, 83); }
                  break;
               case 97:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 96;
                  break;
               case 98:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(82, 83); }
                  break;
               case 99:
                  if (curChar == 52)
                     { jjCheckNAdd(95); }
                  break;
               case 100:
                  if (curChar == 54)
                     { jjCheckNAdd(95); }
                  break;
               case 101:
                  if (curChar == 48)
                     { jjCheckNAddStates(346, 350); }
                  break;
               case 102:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(99, 100); }
                  break;
               case 103:
                  if (curChar == 48)
                     { jjCheckNAddStates(351, 353); }
                  break;
               case 104:
                  if (curChar == 48)
                     { jjCheckNAddStates(354, 357); }
                  break;
               case 106:
                  if (curChar == 49)
                     { jjCheckNAddStates(358, 361); }
                  break;
               case 107:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(81, 94); }
                  break;
               case 108:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 107;
                  break;
               case 109:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(81, 94); }
                  break;
               case 110:
                  if (curChar == 52)
                     { jjCheckNAdd(106); }
                  break;
               case 111:
                  if (curChar == 54)
                     { jjCheckNAdd(106); }
                  break;
               case 112:
                  if (curChar == 48)
                     { jjCheckNAddStates(362, 366); }
                  break;
               case 113:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(110, 111); }
                  break;
               case 114:
                  if (curChar == 48)
                     { jjCheckNAddStates(367, 369); }
                  break;
               case 115:
                  if (curChar == 48)
                     { jjCheckNAddStates(370, 373); }
                  break;
               case 117:
                  if (curChar == 52)
                     { jjCheckNAddStates(374, 377); }
                  break;
               case 118:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(80, 105); }
                  break;
               case 119:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 118;
                  break;
               case 120:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(80, 105); }
                  break;
               case 121:
                  if (curChar == 53)
                     { jjCheckNAdd(117); }
                  break;
               case 122:
                  if (curChar == 55)
                     { jjCheckNAdd(117); }
                  break;
               case 123:
                  if (curChar == 48)
                     { jjCheckNAddStates(378, 382); }
                  break;
               case 124:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(121, 122); }
                  break;
               case 125:
                  if (curChar == 48)
                     { jjCheckNAddStates(383, 385); }
                  break;
               case 126:
                  if (curChar == 48)
                     { jjCheckNAddStates(386, 389); }
                  break;
               case 128:
                  if (curChar == 50)
                     { jjCheckNAddStates(390, 393); }
                  break;
               case 129:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(79, 116); }
                  break;
               case 130:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 129;
                  break;
               case 131:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(79, 116); }
                  break;
               case 132:
                  if (curChar == 53)
                     { jjCheckNAdd(128); }
                  break;
               case 133:
                  if (curChar == 55)
                     { jjCheckNAdd(128); }
                  break;
               case 134:
                  if (curChar == 48)
                     { jjCheckNAddStates(394, 398); }
                  break;
               case 135:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(132, 133); }
                  break;
               case 136:
                  if (curChar == 48)
                     { jjCheckNAddStates(399, 401); }
                  break;
               case 137:
                  if (curChar == 48)
                     { jjCheckNAddStates(402, 405); }
                  break;
               case 139:
                  if (curChar == 49)
                     { jjCheckNAddStates(406, 409); }
                  break;
               case 140:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(78, 127); }
                  break;
               case 141:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 140;
                  break;
               case 142:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(78, 127); }
                  break;
               case 143:
                  if (curChar == 53)
                     { jjCheckNAdd(139); }
                  break;
               case 144:
                  if (curChar == 55)
                     { jjCheckNAdd(139); }
                  break;
               case 145:
                  if (curChar == 48)
                     { jjCheckNAddStates(410, 414); }
                  break;
               case 146:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(143, 144); }
                  break;
               case 147:
                  if (curChar == 48)
                     { jjCheckNAddStates(415, 417); }
                  break;
               case 148:
                  if (curChar == 48)
                     { jjCheckNAddStates(418, 421); }
                  break;
               case 150:
                  if (curChar == 48)
                     { jjCheckNAddStates(422, 425); }
                  break;
               case 151:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(77, 138); }
                  break;
               case 152:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 151;
                  break;
               case 153:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(77, 138); }
                  break;
               case 154:
                  if (curChar == 53)
                     { jjCheckNAdd(150); }
                  break;
               case 155:
                  if (curChar == 55)
                     { jjCheckNAdd(150); }
                  break;
               case 156:
                  if (curChar == 48)
                     { jjCheckNAddStates(426, 430); }
                  break;
               case 157:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(154, 155); }
                  break;
               case 158:
                  if (curChar == 48)
                     { jjCheckNAddStates(431, 433); }
                  break;
               case 159:
                  if (curChar == 48)
                     { jjCheckNAddStates(434, 437); }
                  break;
               case 162:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(76, 149); }
                  break;
               case 163:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 162;
                  break;
               case 164:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(76, 149); }
                  break;
               case 165:
                  if (curChar == 52)
                     { jjCheckNAdd(161); }
                  break;
               case 166:
                  if (curChar == 54)
                     { jjCheckNAdd(161); }
                  break;
               case 167:
                  if (curChar == 48)
                     { jjCheckNAddStates(438, 442); }
                  break;
               case 168:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(165, 166); }
                  break;
               case 169:
                  if (curChar == 48)
                     { jjCheckNAddStates(443, 445); }
                  break;
               case 170:
                  if (curChar == 48)
                     { jjCheckNAddStates(446, 449); }
                  break;
               case 172:
                  if (curChar == 57)
                     { jjCheckNAddStates(450, 453); }
                  break;
               case 173:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(75, 160); }
                  break;
               case 174:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 173;
                  break;
               case 175:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(75, 160); }
                  break;
               case 176:
                  if (curChar == 52)
                     { jjCheckNAdd(172); }
                  break;
               case 177:
                  if (curChar == 54)
                     { jjCheckNAdd(172); }
                  break;
               case 178:
                  if (curChar == 48)
                     { jjCheckNAddStates(454, 458); }
                  break;
               case 179:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(176, 177); }
                  break;
               case 180:
                  if (curChar == 48)
                     { jjCheckNAddStates(459, 461); }
                  break;
               case 181:
                  if (curChar == 48)
                     { jjCheckNAddStates(462, 465); }
                  break;
               case 187:
                  if (curChar == 40 && kind > 108)
                     kind = 108;
                  break;
               case 192:
                  if (curChar == 40 && kind > 109)
                     kind = 109;
                  break;
               case 197:
                  if (curChar == 40 && kind > 110)
                     kind = 110;
                  break;
               case 202:
                  if (curChar == 40 && kind > 111)
                     kind = 111;
                  break;
               case 207:
                  if (curChar == 40 && kind > 112)
                     kind = 112;
                  break;
               case 210:
                  if (curChar == 46)
                     { jjCheckNAddStates(244, 272); }
                  break;
               case 211:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 19)
                     kind = 19;
                  { jjCheckNAddTwoStates(211, 212); }
                  break;
               case 213:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(214); }
                  break;
               case 214:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 19)
                     kind = 19;
                  { jjCheckNAdd(214); }
                  break;
               case 215:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 23)
                     kind = 23;
                  { jjCheckNAddTwoStates(215, 216); }
                  break;
               case 217:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(218); }
                  break;
               case 218:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 23)
                     kind = 23;
                  { jjCheckNAdd(218); }
                  break;
               case 219:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(86, 88); }
                  break;
               case 221:
                  if (curChar == 53)
                     { jjCheckNAddStates(466, 469); }
                  break;
               case 222:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(223, 224); }
                  break;
               case 226:
                  if (curChar == 10 && kind > 77)
                     kind = 77;
                  break;
               case 227:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 226;
                  break;
               case 228:
                  if ((0x100003600L & l) != 0L && kind > 77)
                     kind = 77;
                  break;
               case 229:
                  if (curChar == 52)
                     { jjCheckNAdd(225); }
                  break;
               case 230:
                  if (curChar == 54)
                     { jjCheckNAdd(225); }
                  break;
               case 231:
                  if (curChar == 48)
                     { jjCheckNAddStates(470, 474); }
                  break;
               case 232:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(229, 230); }
                  break;
               case 233:
                  if (curChar == 48)
                     { jjCheckNAddStates(475, 477); }
                  break;
               case 234:
                  if (curChar == 48)
                     { jjCheckNAddStates(478, 481); }
                  break;
               case 235:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 222;
                  break;
               case 236:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(223, 224); }
                  break;
               case 237:
                  if (curChar == 52)
                     { jjCheckNAdd(221); }
                  break;
               case 238:
                  if (curChar == 54)
                     { jjCheckNAdd(221); }
                  break;
               case 239:
                  if (curChar == 48)
                     { jjCheckNAddStates(482, 486); }
                  break;
               case 240:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(237, 238); }
                  break;
               case 241:
                  if (curChar == 48)
                     { jjCheckNAddStates(487, 489); }
                  break;
               case 242:
                  if (curChar == 48)
                     { jjCheckNAddStates(490, 493); }
                  break;
               case 244:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(245); }
                  break;
               case 245:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(494, 496); }
                  break;
               case 247:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(83, 85); }
                  break;
               case 249:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(250); }
                  break;
               case 250:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(250, 253); }
                  break;
               case 254:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(80, 82); }
                  break;
               case 256:
                  if (curChar == 53)
                     { jjCheckNAddStates(497, 500); }
                  break;
               case 257:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(258, 259); }
                  break;
               case 260:
                  if (curChar != 56)
                     break;
                  if (kind > 79)
                     kind = 79;
                  { jjAddStates(501, 502); }
                  break;
               case 261:
                  if (curChar == 10 && kind > 79)
                     kind = 79;
                  break;
               case 262:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 261;
                  break;
               case 263:
                  if ((0x100003600L & l) != 0L && kind > 79)
                     kind = 79;
                  break;
               case 264:
                  if (curChar == 53)
                     { jjCheckNAdd(260); }
                  break;
               case 265:
                  if (curChar == 55)
                     { jjCheckNAdd(260); }
                  break;
               case 266:
                  if (curChar == 48)
                     { jjCheckNAddStates(503, 507); }
                  break;
               case 267:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(264, 265); }
                  break;
               case 268:
                  if (curChar == 48)
                     { jjCheckNAddStates(508, 510); }
                  break;
               case 269:
                  if (curChar == 48)
                     { jjCheckNAddStates(511, 514); }
                  break;
               case 270:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 257;
                  break;
               case 271:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(258, 259); }
                  break;
               case 272:
                  if (curChar == 52)
                     { jjCheckNAdd(256); }
                  break;
               case 273:
                  if (curChar == 54)
                     { jjCheckNAdd(256); }
                  break;
               case 274:
                  if (curChar == 48)
                     { jjCheckNAddStates(515, 519); }
                  break;
               case 275:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(272, 273); }
                  break;
               case 276:
                  if (curChar == 48)
                     { jjCheckNAddStates(520, 522); }
                  break;
               case 277:
                  if (curChar == 48)
                     { jjCheckNAddStates(523, 526); }
                  break;
               case 279:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(280); }
                  break;
               case 280:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(527, 529); }
                  break;
               case 282:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(77, 79); }
                  break;
               case 284:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(285); }
                  break;
               case 285:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(285, 287); }
                  break;
               case 288:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(74, 76); }
                  break;
               case 290:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(291); }
                  break;
               case 291:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(291, 293); }
                  break;
               case 294:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(71, 73); }
                  break;
               case 296:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(297); }
                  break;
               case 297:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(297, 299); }
                  break;
               case 300:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(68, 70); }
                  break;
               case 302:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(303); }
                  break;
               case 303:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(303, 307); }
                  break;
               case 308:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(65, 67); }
                  break;
               case 310:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(311); }
                  break;
               case 311:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(311, 315); }
                  break;
               case 316:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(62, 64); }
                  break;
               case 318:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(319); }
                  break;
               case 319:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(319, 321); }
                  break;
               case 322:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(59, 61); }
                  break;
               case 324:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(325); }
                  break;
               case 325:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(325, 327); }
                  break;
               case 328:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(56, 58); }
                  break;
               case 330:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(331); }
                  break;
               case 331:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(331, 333); }
                  break;
               case 334:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(53, 55); }
                  break;
               case 336:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(337); }
                  break;
               case 337:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(337, 339); }
                  break;
               case 340:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(50, 52); }
                  break;
               case 342:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(343); }
                  break;
               case 343:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(343, 345); }
                  break;
               case 346:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(47, 49); }
                  break;
               case 348:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(349); }
                  break;
               case 349:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(349, 351); }
                  break;
               case 352:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(44, 46); }
                  break;
               case 354:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(355); }
                  break;
               case 355:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(355, 356); }
                  break;
               case 357:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(41, 43); }
                  break;
               case 359:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(360); }
                  break;
               case 360:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(360, 363); }
                  break;
               case 364:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(38, 40); }
                  break;
               case 366:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(367); }
                  break;
               case 367:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(367, 370); }
                  break;
               case 371:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(35, 37); }
                  break;
               case 373:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(374); }
                  break;
               case 374:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(374, 378); }
                  break;
               case 379:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(32, 34); }
                  break;
               case 381:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(382); }
                  break;
               case 382:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(382, 386); }
                  break;
               case 387:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(28, 31); }
                  break;
               case 389:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(390); }
                  break;
               case 390:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(530, 532); }
                  break;
               case 394:
                  if (curChar != 51)
                     break;
                  if (kind > 96)
                     kind = 96;
                  { jjAddStates(533, 534); }
                  break;
               case 395:
                  if (curChar == 10 && kind > 96)
                     kind = 96;
                  break;
               case 396:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 395;
                  break;
               case 397:
                  if ((0x100003600L & l) != 0L && kind > 96)
                     kind = 96;
                  break;
               case 398:
                  if (curChar == 53)
                     { jjCheckNAdd(394); }
                  break;
               case 399:
                  if (curChar == 55)
                     { jjCheckNAdd(394); }
                  break;
               case 400:
                  if (curChar == 48)
                     { jjCheckNAddStates(535, 539); }
                  break;
               case 401:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(398, 399); }
                  break;
               case 402:
                  if (curChar == 48)
                     { jjCheckNAddStates(540, 542); }
                  break;
               case 403:
                  if (curChar == 48)
                     { jjCheckNAddStates(543, 546); }
                  break;
               case 406:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(392, 393); }
                  break;
               case 407:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 406;
                  break;
               case 408:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(392, 393); }
                  break;
               case 409:
                  if (curChar == 52)
                     { jjCheckNAdd(405); }
                  break;
               case 410:
                  if (curChar == 54)
                     { jjCheckNAdd(405); }
                  break;
               case 411:
                  if (curChar == 48)
                     { jjCheckNAddStates(547, 551); }
                  break;
               case 412:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(409, 410); }
                  break;
               case 413:
                  if (curChar == 48)
                     { jjCheckNAddStates(552, 554); }
                  break;
               case 414:
                  if (curChar == 48)
                     { jjCheckNAddStates(555, 558); }
                  break;
               case 415:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(24, 27); }
                  break;
               case 417:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(418); }
                  break;
               case 418:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(559, 561); }
                  break;
               case 421:
                  if (curChar != 51)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjAddStates(562, 563); }
                  break;
               case 422:
                  if (curChar == 10 && kind > 97)
                     kind = 97;
                  break;
               case 423:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 422;
                  break;
               case 424:
                  if ((0x100003600L & l) != 0L && kind > 97)
                     kind = 97;
                  break;
               case 425:
                  if (curChar == 53)
                     { jjCheckNAdd(421); }
                  break;
               case 426:
                  if (curChar == 55)
                     { jjCheckNAdd(421); }
                  break;
               case 427:
                  if (curChar == 48)
                     { jjCheckNAddStates(564, 568); }
                  break;
               case 428:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(425, 426); }
                  break;
               case 429:
                  if (curChar == 48)
                     { jjCheckNAddStates(569, 571); }
                  break;
               case 430:
                  if (curChar == 48)
                     { jjCheckNAddStates(572, 575); }
                  break;
               case 431:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(20, 23); }
                  break;
               case 433:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(434); }
                  break;
               case 434:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(576, 578); }
                  break;
               case 439:
                  if (curChar == 10 && kind > 98)
                     kind = 98;
                  break;
               case 440:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 439;
                  break;
               case 441:
                  if ((0x100003600L & l) != 0L && kind > 98)
                     kind = 98;
                  break;
               case 442:
                  if (curChar == 53)
                     { jjCheckNAdd(438); }
                  break;
               case 443:
                  if (curChar == 55)
                     { jjCheckNAdd(438); }
                  break;
               case 444:
                  if (curChar == 48)
                     { jjCheckNAddStates(579, 583); }
                  break;
               case 445:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(442, 443); }
                  break;
               case 446:
                  if (curChar == 48)
                     { jjCheckNAddStates(584, 586); }
                  break;
               case 447:
                  if (curChar == 48)
                     { jjCheckNAddStates(587, 590); }
                  break;
               case 449:
                  if (curChar == 56)
                     { jjCheckNAddStates(591, 594); }
                  break;
               case 450:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(436, 437); }
                  break;
               case 451:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 450;
                  break;
               case 452:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(436, 437); }
                  break;
               case 453:
                  if (curChar == 52)
                     { jjCheckNAdd(449); }
                  break;
               case 454:
                  if (curChar == 54)
                     { jjCheckNAdd(449); }
                  break;
               case 455:
                  if (curChar == 48)
                     { jjCheckNAddStates(595, 599); }
                  break;
               case 456:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(453, 454); }
                  break;
               case 457:
                  if (curChar == 48)
                     { jjCheckNAddStates(600, 602); }
                  break;
               case 458:
                  if (curChar == 48)
                     { jjCheckNAddStates(603, 606); }
                  break;
               case 459:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(16, 19); }
                  break;
               case 461:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(462); }
                  break;
               case 462:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(607, 609); }
                  break;
               case 468:
                  if (curChar == 10 && kind > 99)
                     kind = 99;
                  break;
               case 469:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 468;
                  break;
               case 470:
                  if ((0x100003600L & l) != 0L && kind > 99)
                     kind = 99;
                  break;
               case 471:
                  if (curChar == 53)
                     { jjCheckNAdd(467); }
                  break;
               case 472:
                  if (curChar == 55)
                     { jjCheckNAdd(467); }
                  break;
               case 473:
                  if (curChar == 48)
                     { jjCheckNAddStates(610, 614); }
                  break;
               case 474:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(471, 472); }
                  break;
               case 475:
                  if (curChar == 48)
                     { jjCheckNAddStates(615, 617); }
                  break;
               case 476:
                  if (curChar == 48)
                     { jjCheckNAddStates(618, 621); }
                  break;
               case 478:
                  if (curChar == 56)
                     { jjCheckNAddStates(622, 625); }
                  break;
               case 479:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(465, 466); }
                  break;
               case 480:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 479;
                  break;
               case 481:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(465, 466); }
                  break;
               case 482:
                  if (curChar == 52)
                     { jjCheckNAdd(478); }
                  break;
               case 483:
                  if (curChar == 54)
                     { jjCheckNAdd(478); }
                  break;
               case 484:
                  if (curChar == 48)
                     { jjCheckNAddStates(626, 630); }
                  break;
               case 485:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(482, 483); }
                  break;
               case 486:
                  if (curChar == 48)
                     { jjCheckNAddStates(631, 633); }
                  break;
               case 487:
                  if (curChar == 48)
                     { jjCheckNAddStates(634, 637); }
                  break;
               case 490:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(464, 477); }
                  break;
               case 491:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 490;
                  break;
               case 492:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(464, 477); }
                  break;
               case 493:
                  if (curChar == 52)
                     { jjCheckNAdd(489); }
                  break;
               case 494:
                  if (curChar == 54)
                     { jjCheckNAdd(489); }
                  break;
               case 495:
                  if (curChar == 48)
                     { jjCheckNAddStates(638, 642); }
                  break;
               case 496:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(493, 494); }
                  break;
               case 497:
                  if (curChar == 48)
                     { jjCheckNAddStates(643, 645); }
                  break;
               case 498:
                  if (curChar == 48)
                     { jjCheckNAddStates(646, 649); }
                  break;
               case 499:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(13, 15); }
                  break;
               case 501:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(502); }
                  break;
               case 502:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(502, 505); }
                  break;
               case 506:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(10, 12); }
                  break;
               case 508:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(509); }
                  break;
               case 509:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(509, 513); }
                  break;
               case 514:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(7, 9); }
                  break;
               case 516:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(517); }
                  break;
               case 517:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(517, 518); }
                  break;
               case 518:
                  if (curChar == 37 && kind > 102)
                     kind = 102;
                  break;
               case 519:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 6); }
                  break;
               case 521:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(522); }
                  break;
               case 522:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(650, 652); }
                  break;
               case 524:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 103)
                     kind = 103;
                  { jjCheckNAddTwoStates(524, 525); }
                  break;
               case 526:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 103)
                     kind = 103;
                  { jjCheckNAddTwoStates(524, 525); }
                  break;
               case 527:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 103)
                     kind = 103;
                  { jjCheckNAddStates(653, 661); }
                  break;
               case 528:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 103)
                     kind = 103;
                  { jjCheckNAddStates(662, 665); }
                  break;
               case 529:
                  if (curChar != 10)
                     break;
                  if (kind > 103)
                     kind = 103;
                  { jjCheckNAddTwoStates(524, 525); }
                  break;
               case 530:
               case 545:
                  if (curChar == 13)
                     { jjCheckNAdd(529); }
                  break;
               case 531:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 103)
                     kind = 103;
                  { jjCheckNAddTwoStates(524, 525); }
                  break;
               case 532:
               case 534:
               case 537:
               case 541:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(528); }
                  break;
               case 533:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 534;
                  break;
               case 535:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 536;
                  break;
               case 536:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 537;
                  break;
               case 538:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 539;
                  break;
               case 539:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 540;
                  break;
               case 540:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 541;
                  break;
               case 543:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 103)
                     kind = 103;
                  { jjCheckNAddStates(666, 674); }
                  break;
               case 544:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 103)
                     kind = 103;
                  { jjCheckNAddStates(675, 678); }
                  break;
               case 546:
               case 548:
               case 551:
               case 555:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(544); }
                  break;
               case 547:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 548;
                  break;
               case 549:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 550;
                  break;
               case 550:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 551;
                  break;
               case 552:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 553;
                  break;
               case 553:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 554;
                  break;
               case 554:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 555;
                  break;
               case 556:
                  if (curChar == 45)
                     { jjAddStates(239, 243); }
                  break;
               case 558:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  { jjCheckNAddTwoStates(558, 559); }
                  break;
               case 560:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  { jjCheckNAddTwoStates(558, 559); }
                  break;
               case 561:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  { jjCheckNAddStates(679, 687); }
                  break;
               case 562:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  { jjCheckNAddStates(688, 691); }
                  break;
               case 563:
                  if (curChar != 10)
                     break;
                  if (kind > 21)
                     kind = 21;
                  { jjCheckNAddTwoStates(558, 559); }
                  break;
               case 564:
               case 647:
                  if (curChar == 13)
                     { jjCheckNAdd(563); }
                  break;
               case 565:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  { jjCheckNAddTwoStates(558, 559); }
                  break;
               case 566:
               case 568:
               case 571:
               case 575:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(562); }
                  break;
               case 567:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 568;
                  break;
               case 569:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 570;
                  break;
               case 570:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 571;
                  break;
               case 572:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 573;
                  break;
               case 573:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 574;
                  break;
               case 574:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 575;
                  break;
               case 578:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 113)
                     kind = 113;
                  { jjCheckNAddTwoStates(578, 579); }
                  break;
               case 580:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 113)
                     kind = 113;
                  { jjCheckNAddTwoStates(578, 579); }
                  break;
               case 581:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 113)
                     kind = 113;
                  { jjCheckNAddStates(692, 700); }
                  break;
               case 582:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 113)
                     kind = 113;
                  { jjCheckNAddStates(701, 704); }
                  break;
               case 583:
                  if (curChar != 10)
                     break;
                  if (kind > 113)
                     kind = 113;
                  { jjCheckNAddTwoStates(578, 579); }
                  break;
               case 584:
               case 599:
                  if (curChar == 13)
                     { jjCheckNAdd(583); }
                  break;
               case 585:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 113)
                     kind = 113;
                  { jjCheckNAddTwoStates(578, 579); }
                  break;
               case 586:
               case 588:
               case 591:
               case 595:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(582); }
                  break;
               case 587:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 588;
                  break;
               case 589:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 590;
                  break;
               case 590:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 591;
                  break;
               case 592:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 593;
                  break;
               case 593:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 594;
                  break;
               case 594:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 595;
                  break;
               case 597:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 113)
                     kind = 113;
                  { jjCheckNAddStates(705, 713); }
                  break;
               case 598:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 113)
                     kind = 113;
                  { jjCheckNAddStates(714, 717); }
                  break;
               case 600:
               case 602:
               case 605:
               case 609:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(598); }
                  break;
               case 601:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 602;
                  break;
               case 603:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 604;
                  break;
               case 604:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 605;
                  break;
               case 606:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 607;
                  break;
               case 607:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 608;
                  break;
               case 608:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 609;
                  break;
               case 611:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(0, 2); }
                  break;
               case 612:
                  if (curChar == 40 && kind > 114)
                     kind = 114;
                  break;
               case 614:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(0, 2); }
                  break;
               case 615:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(718, 727); }
                  break;
               case 616:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(728, 732); }
                  break;
               case 617:
                  if (curChar == 10)
                     { jjCheckNAddStates(0, 2); }
                  break;
               case 618:
               case 633:
                  if (curChar == 13)
                     { jjCheckNAdd(617); }
                  break;
               case 619:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(0, 2); }
                  break;
               case 620:
               case 622:
               case 625:
               case 629:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(616); }
                  break;
               case 621:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 622;
                  break;
               case 623:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 624;
                  break;
               case 624:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 625;
                  break;
               case 626:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 627;
                  break;
               case 627:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 628;
                  break;
               case 628:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 629;
                  break;
               case 631:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(733, 742); }
                  break;
               case 632:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(743, 747); }
                  break;
               case 634:
               case 636:
               case 639:
               case 643:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(632); }
                  break;
               case 635:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 636;
                  break;
               case 637:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 638;
                  break;
               case 638:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 639;
                  break;
               case 640:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 641;
                  break;
               case 641:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 642;
                  break;
               case 642:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 643;
                  break;
               case 645:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  { jjCheckNAddStates(748, 756); }
                  break;
               case 646:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  { jjCheckNAddStates(757, 760); }
                  break;
               case 648:
               case 650:
               case 653:
               case 657:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(646); }
                  break;
               case 649:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 650;
                  break;
               case 651:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 652;
                  break;
               case 652:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 653;
                  break;
               case 654:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 655;
                  break;
               case 655:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 656;
                  break;
               case 656:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 657;
                  break;
               case 667:
                  if (curChar != 52)
                     break;
                  if (kind > 71)
                     kind = 71;
                  { jjAddStates(761, 762); }
                  break;
               case 668:
                  if (curChar == 10 && kind > 71)
                     kind = 71;
                  break;
               case 669:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 668;
                  break;
               case 670:
                  if ((0x100003600L & l) != 0L && kind > 71)
                     kind = 71;
                  break;
               case 671:
                  if (curChar == 53)
                     { jjCheckNAdd(667); }
                  break;
               case 672:
                  if (curChar == 55)
                     { jjCheckNAdd(667); }
                  break;
               case 673:
                  if (curChar == 48)
                     { jjCheckNAddStates(763, 767); }
                  break;
               case 674:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(671, 672); }
                  break;
               case 675:
                  if (curChar == 48)
                     { jjCheckNAddStates(768, 770); }
                  break;
               case 676:
                  if (curChar == 48)
                     { jjCheckNAddStates(771, 774); }
                  break;
               case 678:
                  if (curChar == 50)
                     { jjCheckNAddStates(775, 778); }
                  break;
               case 679:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(665, 666); }
                  break;
               case 680:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 679;
                  break;
               case 681:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(665, 666); }
                  break;
               case 682:
                  if (curChar == 53)
                     { jjCheckNAdd(678); }
                  break;
               case 683:
                  if (curChar == 55)
                     { jjCheckNAdd(678); }
                  break;
               case 684:
                  if (curChar == 48)
                     { jjCheckNAddStates(779, 783); }
                  break;
               case 685:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(682, 683); }
                  break;
               case 686:
                  if (curChar == 48)
                     { jjCheckNAddStates(784, 786); }
                  break;
               case 687:
                  if (curChar == 48)
                     { jjCheckNAddStates(787, 790); }
                  break;
               case 689:
                  if (curChar == 49)
                     { jjCheckNAddStates(791, 794); }
                  break;
               case 690:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(664, 677); }
                  break;
               case 691:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 690;
                  break;
               case 692:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(664, 677); }
                  break;
               case 693:
                  if (curChar == 53)
                     { jjCheckNAdd(689); }
                  break;
               case 694:
                  if (curChar == 55)
                     { jjCheckNAdd(689); }
                  break;
               case 695:
                  if (curChar == 48)
                     { jjCheckNAddStates(795, 799); }
                  break;
               case 696:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(693, 694); }
                  break;
               case 697:
                  if (curChar == 48)
                     { jjCheckNAddStates(800, 802); }
                  break;
               case 698:
                  if (curChar == 48)
                     { jjCheckNAddStates(803, 806); }
                  break;
               case 700:
                  if (curChar == 48)
                     { jjCheckNAddStates(807, 810); }
                  break;
               case 701:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(663, 688); }
                  break;
               case 702:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 701;
                  break;
               case 703:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(663, 688); }
                  break;
               case 704:
                  if (curChar == 53)
                     { jjCheckNAdd(700); }
                  break;
               case 705:
                  if (curChar == 55)
                     { jjCheckNAdd(700); }
                  break;
               case 706:
                  if (curChar == 48)
                     { jjCheckNAddStates(811, 815); }
                  break;
               case 707:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(704, 705); }
                  break;
               case 708:
                  if (curChar == 48)
                     { jjCheckNAddStates(816, 818); }
                  break;
               case 709:
                  if (curChar == 48)
                     { jjCheckNAddStates(819, 822); }
                  break;
               case 712:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(662, 699); }
                  break;
               case 713:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 712;
                  break;
               case 714:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(662, 699); }
                  break;
               case 715:
                  if (curChar == 52)
                     { jjCheckNAdd(711); }
                  break;
               case 716:
                  if (curChar == 54)
                     { jjCheckNAdd(711); }
                  break;
               case 717:
                  if (curChar == 48)
                     { jjCheckNAddStates(823, 827); }
                  break;
               case 718:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(715, 716); }
                  break;
               case 719:
                  if (curChar == 48)
                     { jjCheckNAddStates(828, 830); }
                  break;
               case 720:
                  if (curChar == 48)
                     { jjCheckNAddStates(831, 834); }
                  break;
               case 726:
                  if (curChar != 53)
                     break;
                  if (kind > 72)
                     kind = 72;
                  { jjAddStates(835, 836); }
                  break;
               case 727:
                  if (curChar == 10 && kind > 72)
                     kind = 72;
                  break;
               case 728:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 727;
                  break;
               case 729:
                  if ((0x100003600L & l) != 0L && kind > 72)
                     kind = 72;
                  break;
               case 730:
                  if (curChar == 52)
                     { jjCheckNAdd(726); }
                  break;
               case 731:
                  if (curChar == 54)
                     { jjCheckNAdd(726); }
                  break;
               case 732:
                  if (curChar == 48)
                     { jjCheckNAddStates(837, 841); }
                  break;
               case 733:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(730, 731); }
                  break;
               case 734:
                  if (curChar == 48)
                     { jjCheckNAddStates(842, 844); }
                  break;
               case 735:
                  if (curChar == 48)
                     { jjCheckNAddStates(845, 848); }
                  break;
               case 737:
                  if (curChar == 55)
                     { jjCheckNAddStates(849, 852); }
                  break;
               case 738:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(724, 725); }
                  break;
               case 739:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 738;
                  break;
               case 740:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(724, 725); }
                  break;
               case 741:
                  if (curChar == 52)
                     { jjCheckNAdd(737); }
                  break;
               case 742:
                  if (curChar == 54)
                     { jjCheckNAdd(737); }
                  break;
               case 743:
                  if (curChar == 48)
                     { jjCheckNAddStates(853, 857); }
                  break;
               case 744:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(741, 742); }
                  break;
               case 745:
                  if (curChar == 48)
                     { jjCheckNAddStates(858, 860); }
                  break;
               case 746:
                  if (curChar == 48)
                     { jjCheckNAddStates(861, 864); }
                  break;
               case 748:
                  if (curChar == 49)
                     { jjCheckNAddStates(865, 868); }
                  break;
               case 749:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(723, 736); }
                  break;
               case 750:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 749;
                  break;
               case 751:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(723, 736); }
                  break;
               case 752:
                  if (curChar == 52)
                     { jjCheckNAdd(748); }
                  break;
               case 753:
                  if (curChar == 54)
                     { jjCheckNAdd(748); }
                  break;
               case 754:
                  if (curChar == 48)
                     { jjCheckNAddStates(869, 873); }
                  break;
               case 755:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(752, 753); }
                  break;
               case 756:
                  if (curChar == 48)
                     { jjCheckNAddStates(874, 876); }
                  break;
               case 757:
                  if (curChar == 48)
                     { jjCheckNAddStates(877, 880); }
                  break;
               case 764:
                  if (curChar != 49)
                     break;
                  if (kind > 73)
                     kind = 73;
                  { jjAddStates(881, 882); }
                  break;
               case 765:
                  if (curChar == 10 && kind > 73)
                     kind = 73;
                  break;
               case 766:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 765;
                  break;
               case 767:
                  if ((0x100003600L & l) != 0L && kind > 73)
                     kind = 73;
                  break;
               case 768:
                  if (curChar == 52)
                     { jjCheckNAdd(764); }
                  break;
               case 769:
                  if (curChar == 54)
                     { jjCheckNAdd(764); }
                  break;
               case 770:
                  if (curChar == 48)
                     { jjCheckNAddStates(883, 887); }
                  break;
               case 771:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(768, 769); }
                  break;
               case 772:
                  if (curChar == 48)
                     { jjCheckNAddStates(888, 890); }
                  break;
               case 773:
                  if (curChar == 48)
                     { jjCheckNAddStates(891, 894); }
                  break;
               case 775:
                  if (curChar == 57)
                     { jjCheckNAddStates(895, 898); }
                  break;
               case 776:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(762, 763); }
                  break;
               case 777:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 776;
                  break;
               case 778:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(762, 763); }
                  break;
               case 779:
                  if (curChar == 52)
                     { jjCheckNAdd(775); }
                  break;
               case 780:
                  if (curChar == 54)
                     { jjCheckNAdd(775); }
                  break;
               case 781:
                  if (curChar == 48)
                     { jjCheckNAddStates(899, 903); }
                  break;
               case 782:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(779, 780); }
                  break;
               case 783:
                  if (curChar == 48)
                     { jjCheckNAddStates(904, 906); }
                  break;
               case 784:
                  if (curChar == 48)
                     { jjCheckNAddStates(907, 910); }
                  break;
               case 786:
                  if (curChar == 52)
                     { jjCheckNAddStates(911, 914); }
                  break;
               case 787:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(761, 774); }
                  break;
               case 788:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 787;
                  break;
               case 789:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(761, 774); }
                  break;
               case 790:
                  if (curChar == 52)
                     { jjCheckNAdd(786); }
                  break;
               case 791:
                  if (curChar == 54)
                     { jjCheckNAdd(786); }
                  break;
               case 792:
                  if (curChar == 48)
                     { jjCheckNAddStates(915, 919); }
                  break;
               case 793:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(790, 791); }
                  break;
               case 794:
                  if (curChar == 48)
                     { jjCheckNAddStates(920, 922); }
                  break;
               case 795:
                  if (curChar == 48)
                     { jjCheckNAddStates(923, 926); }
                  break;
               case 797:
                  if (curChar == 53)
                     { jjCheckNAddStates(927, 930); }
                  break;
               case 798:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(760, 785); }
                  break;
               case 799:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 798;
                  break;
               case 800:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(760, 785); }
                  break;
               case 801:
                  if (curChar == 52)
                     { jjCheckNAdd(797); }
                  break;
               case 802:
                  if (curChar == 54)
                     { jjCheckNAdd(797); }
                  break;
               case 803:
                  if (curChar == 48)
                     { jjCheckNAddStates(931, 935); }
                  break;
               case 804:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(801, 802); }
                  break;
               case 805:
                  if (curChar == 48)
                     { jjCheckNAddStates(936, 938); }
                  break;
               case 806:
                  if (curChar == 48)
                     { jjCheckNAddStates(939, 942); }
                  break;
               case 811:
                  if (curChar == 45)
                     { jjAddStates(943, 944); }
                  break;
               case 817:
                  if (curChar != 53)
                     break;
                  if (kind > 74)
                     kind = 74;
                  { jjAddStates(945, 946); }
                  break;
               case 818:
                  if (curChar == 10 && kind > 74)
                     kind = 74;
                  break;
               case 819:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 818;
                  break;
               case 820:
                  if ((0x100003600L & l) != 0L && kind > 74)
                     kind = 74;
                  break;
               case 821:
                  if (curChar == 52)
                     { jjCheckNAdd(817); }
                  break;
               case 822:
                  if (curChar == 54)
                     { jjCheckNAdd(817); }
                  break;
               case 823:
                  if (curChar == 48)
                     { jjCheckNAddStates(947, 951); }
                  break;
               case 824:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(821, 822); }
                  break;
               case 825:
                  if (curChar == 48)
                     { jjCheckNAddStates(952, 954); }
                  break;
               case 826:
                  if (curChar == 48)
                     { jjCheckNAddStates(955, 958); }
                  break;
               case 828:
                  if (curChar == 51)
                     { jjCheckNAddStates(959, 962); }
                  break;
               case 829:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(815, 816); }
                  break;
               case 830:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 829;
                  break;
               case 831:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(815, 816); }
                  break;
               case 832:
                  if (curChar == 52)
                     { jjCheckNAdd(828); }
                  break;
               case 833:
                  if (curChar == 54)
                     { jjCheckNAdd(828); }
                  break;
               case 834:
                  if (curChar == 48)
                     { jjCheckNAddStates(963, 967); }
                  break;
               case 835:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(832, 833); }
                  break;
               case 836:
                  if (curChar == 48)
                     { jjCheckNAddStates(968, 970); }
                  break;
               case 837:
                  if (curChar == 48)
                     { jjCheckNAddStates(971, 974); }
                  break;
               case 839:
                  if (curChar == 49)
                     { jjCheckNAddStates(975, 978); }
                  break;
               case 840:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(814, 827); }
                  break;
               case 841:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 840;
                  break;
               case 842:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(814, 827); }
                  break;
               case 843:
                  if (curChar == 52)
                     { jjCheckNAdd(839); }
                  break;
               case 844:
                  if (curChar == 54)
                     { jjCheckNAdd(839); }
                  break;
               case 845:
                  if (curChar == 48)
                     { jjCheckNAddStates(979, 983); }
                  break;
               case 846:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(843, 844); }
                  break;
               case 847:
                  if (curChar == 48)
                     { jjCheckNAddStates(984, 986); }
                  break;
               case 848:
                  if (curChar == 48)
                     { jjCheckNAddStates(987, 990); }
                  break;
               case 850:
                  if (curChar == 54)
                     { jjCheckNAddStates(991, 994); }
                  break;
               case 851:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(813, 838); }
                  break;
               case 852:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 851;
                  break;
               case 853:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(813, 838); }
                  break;
               case 854:
                  if (curChar == 52)
                     { jjCheckNAdd(850); }
                  break;
               case 855:
                  if (curChar == 54)
                     { jjCheckNAdd(850); }
                  break;
               case 856:
                  if (curChar == 48)
                     { jjCheckNAddStates(995, 999); }
                  break;
               case 857:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(854, 855); }
                  break;
               case 858:
                  if (curChar == 48)
                     { jjCheckNAddStates(1000, 1002); }
                  break;
               case 859:
                  if (curChar == 48)
                     { jjCheckNAddStates(1003, 1006); }
                  break;
               case 861:
                  if (curChar == 52)
                     { jjCheckNAddStates(1007, 1009); }
                  break;
               case 862:
                  if (curChar == 10)
                     { jjCheckNAdd(811); }
                  break;
               case 863:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 862;
                  break;
               case 864:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAdd(811); }
                  break;
               case 865:
                  if (curChar == 53)
                     { jjCheckNAdd(861); }
                  break;
               case 866:
                  if (curChar == 55)
                     { jjCheckNAdd(861); }
                  break;
               case 867:
                  if (curChar == 48)
                     { jjCheckNAddStates(1010, 1014); }
                  break;
               case 868:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(865, 866); }
                  break;
               case 869:
                  if (curChar == 48)
                     { jjCheckNAddStates(1015, 1017); }
                  break;
               case 870:
                  if (curChar == 48)
                     { jjCheckNAddStates(1018, 1021); }
                  break;
               case 873:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(810, 860); }
                  break;
               case 874:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 873;
                  break;
               case 875:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(810, 860); }
                  break;
               case 876:
                  if (curChar == 52)
                     { jjCheckNAdd(872); }
                  break;
               case 877:
                  if (curChar == 54)
                     { jjCheckNAdd(872); }
                  break;
               case 878:
                  if (curChar == 48)
                     { jjCheckNAddStates(1022, 1026); }
                  break;
               case 879:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(876, 877); }
                  break;
               case 880:
                  if (curChar == 48)
                     { jjCheckNAddStates(1027, 1029); }
                  break;
               case 881:
                  if (curChar == 48)
                     { jjCheckNAddStates(1030, 1033); }
                  break;
               case 883:
                  if (curChar == 49)
                     { jjCheckNAddStates(1034, 1037); }
                  break;
               case 884:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(809, 871); }
                  break;
               case 885:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 884;
                  break;
               case 886:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(809, 871); }
                  break;
               case 887:
                  if (curChar == 53)
                     { jjCheckNAdd(883); }
                  break;
               case 888:
                  if (curChar == 55)
                     { jjCheckNAdd(883); }
                  break;
               case 889:
                  if (curChar == 48)
                     { jjCheckNAddStates(1038, 1042); }
                  break;
               case 890:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(887, 888); }
                  break;
               case 891:
                  if (curChar == 48)
                     { jjCheckNAddStates(1043, 1045); }
                  break;
               case 892:
                  if (curChar == 48)
                     { jjCheckNAddStates(1046, 1049); }
                  break;
               case 894:
                  if (curChar == 54)
                     { jjCheckNAddStates(1050, 1053); }
                  break;
               case 895:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(808, 882); }
                  break;
               case 896:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 895;
                  break;
               case 897:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(808, 882); }
                  break;
               case 898:
                  if (curChar == 52)
                     { jjCheckNAdd(894); }
                  break;
               case 899:
                  if (curChar == 54)
                     { jjCheckNAdd(894); }
                  break;
               case 900:
                  if (curChar == 48)
                     { jjCheckNAddStates(1054, 1058); }
                  break;
               case 901:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(898, 899); }
                  break;
               case 902:
                  if (curChar == 48)
                     { jjCheckNAddStates(1059, 1061); }
                  break;
               case 903:
                  if (curChar == 48)
                     { jjCheckNAddStates(1062, 1065); }
                  break;
               case 912:
                  if (curChar != 52)
                     break;
                  if (kind > 75)
                     kind = 75;
                  { jjAddStates(1066, 1067); }
                  break;
               case 913:
                  if (curChar == 10 && kind > 75)
                     kind = 75;
                  break;
               case 914:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 913;
                  break;
               case 915:
                  if ((0x100003600L & l) != 0L && kind > 75)
                     kind = 75;
                  break;
               case 916:
                  if (curChar == 53)
                     { jjCheckNAdd(912); }
                  break;
               case 917:
                  if (curChar == 55)
                     { jjCheckNAdd(912); }
                  break;
               case 918:
                  if (curChar == 48)
                     { jjCheckNAddStates(1068, 1072); }
                  break;
               case 919:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(916, 917); }
                  break;
               case 920:
                  if (curChar == 48)
                     { jjCheckNAddStates(1073, 1075); }
                  break;
               case 921:
                  if (curChar == 48)
                     { jjCheckNAddStates(1076, 1079); }
                  break;
               case 923:
                  if (curChar == 53)
                     { jjCheckNAddStates(1080, 1083); }
                  break;
               case 924:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(910, 911); }
                  break;
               case 925:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 924;
                  break;
               case 926:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(910, 911); }
                  break;
               case 927:
                  if (curChar == 52)
                     { jjCheckNAdd(923); }
                  break;
               case 928:
                  if (curChar == 54)
                     { jjCheckNAdd(923); }
                  break;
               case 929:
                  if (curChar == 48)
                     { jjCheckNAddStates(1084, 1088); }
                  break;
               case 930:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(927, 928); }
                  break;
               case 931:
                  if (curChar == 48)
                     { jjCheckNAddStates(1089, 1091); }
                  break;
               case 932:
                  if (curChar == 48)
                     { jjCheckNAddStates(1092, 1095); }
                  break;
               case 934:
                  if (curChar == 51)
                     { jjCheckNAddStates(1096, 1099); }
                  break;
               case 935:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(909, 922); }
                  break;
               case 936:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 935;
                  break;
               case 937:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(909, 922); }
                  break;
               case 938:
                  if (curChar == 53)
                     { jjCheckNAdd(934); }
                  break;
               case 939:
                  if (curChar == 55)
                     { jjCheckNAdd(934); }
                  break;
               case 940:
                  if (curChar == 48)
                     { jjCheckNAddStates(1100, 1104); }
                  break;
               case 941:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(938, 939); }
                  break;
               case 942:
                  if (curChar == 48)
                     { jjCheckNAddStates(1105, 1107); }
                  break;
               case 943:
                  if (curChar == 48)
                     { jjCheckNAddStates(1108, 1111); }
                  break;
               case 945:
                  if (curChar == 50)
                     { jjCheckNAddStates(1112, 1115); }
                  break;
               case 946:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(908, 933); }
                  break;
               case 947:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 946;
                  break;
               case 948:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(908, 933); }
                  break;
               case 949:
                  if (curChar == 53)
                     { jjCheckNAdd(945); }
                  break;
               case 950:
                  if (curChar == 55)
                     { jjCheckNAdd(945); }
                  break;
               case 951:
                  if (curChar == 48)
                     { jjCheckNAddStates(1116, 1120); }
                  break;
               case 952:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(949, 950); }
                  break;
               case 953:
                  if (curChar == 48)
                     { jjCheckNAddStates(1121, 1123); }
                  break;
               case 954:
                  if (curChar == 48)
                     { jjCheckNAddStates(1124, 1127); }
                  break;
               case 956:
                  if (curChar == 49)
                     { jjCheckNAddStates(1128, 1131); }
                  break;
               case 957:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(907, 944); }
                  break;
               case 958:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 957;
                  break;
               case 959:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(907, 944); }
                  break;
               case 960:
                  if (curChar == 52)
                     { jjCheckNAdd(956); }
                  break;
               case 961:
                  if (curChar == 54)
                     { jjCheckNAdd(956); }
                  break;
               case 962:
                  if (curChar == 48)
                     { jjCheckNAddStates(1132, 1136); }
                  break;
               case 963:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(960, 961); }
                  break;
               case 964:
                  if (curChar == 48)
                     { jjCheckNAddStates(1137, 1139); }
                  break;
               case 965:
                  if (curChar == 48)
                     { jjCheckNAddStates(1140, 1143); }
                  break;
               case 967:
                  if (curChar == 56)
                     { jjCheckNAddStates(1144, 1147); }
                  break;
               case 968:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(906, 955); }
                  break;
               case 969:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 968;
                  break;
               case 970:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(906, 955); }
                  break;
               case 971:
                  if (curChar == 52)
                     { jjCheckNAdd(967); }
                  break;
               case 972:
                  if (curChar == 54)
                     { jjCheckNAdd(967); }
                  break;
               case 973:
                  if (curChar == 48)
                     { jjCheckNAddStates(1148, 1152); }
                  break;
               case 974:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(971, 972); }
                  break;
               case 975:
                  if (curChar == 48)
                     { jjCheckNAddStates(1153, 1155); }
                  break;
               case 976:
                  if (curChar == 48)
                     { jjCheckNAddStates(1156, 1159); }
                  break;
               case 978:
                  if (curChar == 51)
                     { jjCheckNAddStates(1160, 1163); }
                  break;
               case 979:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(905, 966); }
                  break;
               case 980:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 979;
                  break;
               case 981:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(905, 966); }
                  break;
               case 982:
                  if (curChar == 52)
                     { jjCheckNAdd(978); }
                  break;
               case 983:
                  if (curChar == 54)
                     { jjCheckNAdd(978); }
                  break;
               case 984:
                  if (curChar == 48)
                     { jjCheckNAddStates(1164, 1168); }
                  break;
               case 985:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(982, 983); }
                  break;
               case 986:
                  if (curChar == 48)
                     { jjCheckNAddStates(1169, 1171); }
                  break;
               case 987:
                  if (curChar == 48)
                     { jjCheckNAddStates(1172, 1175); }
                  break;
               case 988:
                  if (curChar == 45)
                     { jjAddStates(1176, 1177); }
                  break;
               case 990:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 115)
                     kind = 115;
                  { jjCheckNAddTwoStates(990, 991); }
                  break;
               case 992:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 115)
                     kind = 115;
                  { jjCheckNAddTwoStates(990, 991); }
                  break;
               case 993:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 115)
                     kind = 115;
                  { jjCheckNAddStates(1178, 1186); }
                  break;
               case 994:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 115)
                     kind = 115;
                  { jjCheckNAddStates(1187, 1190); }
                  break;
               case 995:
                  if (curChar != 10)
                     break;
                  if (kind > 115)
                     kind = 115;
                  { jjCheckNAddTwoStates(990, 991); }
                  break;
               case 996:
               case 1011:
                  if (curChar == 13)
                     { jjCheckNAdd(995); }
                  break;
               case 997:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 115)
                     kind = 115;
                  { jjCheckNAddTwoStates(990, 991); }
                  break;
               case 998:
               case 1000:
               case 1003:
               case 1007:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(994); }
                  break;
               case 999:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1000;
                  break;
               case 1001:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1002;
                  break;
               case 1002:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1003;
                  break;
               case 1004:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1005;
                  break;
               case 1005:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1006;
                  break;
               case 1006:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1007;
                  break;
               case 1009:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 115)
                     kind = 115;
                  { jjCheckNAddStates(1191, 1199); }
                  break;
               case 1010:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 115)
                     kind = 115;
                  { jjCheckNAddStates(1200, 1203); }
                  break;
               case 1012:
               case 1014:
               case 1017:
               case 1021:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(1010); }
                  break;
               case 1013:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1014;
                  break;
               case 1015:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1016;
                  break;
               case 1016:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1017;
                  break;
               case 1018:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1019;
                  break;
               case 1019:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1020;
                  break;
               case 1020:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1021;
                  break;
               case 1024:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(759, 796); }
                  break;
               case 1025:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 1024;
                  break;
               case 1026:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(759, 796); }
                  break;
               case 1027:
                  if (curChar == 52)
                     { jjCheckNAdd(1023); }
                  break;
               case 1028:
                  if (curChar == 54)
                     { jjCheckNAdd(1023); }
                  break;
               case 1029:
                  if (curChar == 48)
                     { jjCheckNAddStates(1204, 1208); }
                  break;
               case 1030:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(1027, 1028); }
                  break;
               case 1031:
                  if (curChar == 48)
                     { jjCheckNAddStates(1209, 1211); }
                  break;
               case 1032:
                  if (curChar == 48)
                     { jjCheckNAddStates(1212, 1215); }
                  break;
               case 1034:
                  if (curChar == 48)
                     { jjCheckNAddStates(1216, 1219); }
                  break;
               case 1035:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(722, 747); }
                  break;
               case 1036:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 1035;
                  break;
               case 1037:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(722, 747); }
                  break;
               case 1038:
                  if (curChar == 53)
                     { jjCheckNAdd(1034); }
                  break;
               case 1039:
                  if (curChar == 55)
                     { jjCheckNAdd(1034); }
                  break;
               case 1040:
                  if (curChar == 48)
                     { jjCheckNAddStates(1220, 1224); }
                  break;
               case 1041:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(1038, 1039); }
                  break;
               case 1042:
                  if (curChar == 48)
                     { jjCheckNAddStates(1225, 1227); }
                  break;
               case 1043:
                  if (curChar == 48)
                     { jjCheckNAddStates(1228, 1231); }
                  break;
               case 1045:
                  if (curChar == 57)
                     { jjCheckNAddStates(1232, 1235); }
                  break;
               case 1046:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(661, 710); }
                  break;
               case 1047:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 1046;
                  break;
               case 1048:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(661, 710); }
                  break;
               case 1049:
                  if (curChar == 52)
                     { jjCheckNAdd(1045); }
                  break;
               case 1050:
                  if (curChar == 54)
                     { jjCheckNAdd(1045); }
                  break;
               case 1051:
                  if (curChar == 48)
                     { jjCheckNAddStates(1236, 1240); }
                  break;
               case 1052:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(1049, 1050); }
                  break;
               case 1053:
                  if (curChar == 48)
                     { jjCheckNAddStates(1241, 1243); }
                  break;
               case 1054:
                  if (curChar == 48)
                     { jjCheckNAddStates(1244, 1247); }
                  break;
               case 1056:
                  if (curChar == 43)
                     jjstateSet[jjnewStateCnt++] = 1057;
                  break;
               case 1057:
                  if ((0x83ff000000000000L & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  { jjCheckNAddTwoStates(1058, 1065); }
                  break;
               case 1058:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 1059;
                  break;
               case 1059:
                  if ((0x83ff000000000000L & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  jjstateSet[jjnewStateCnt++] = 1060;
                  break;
               case 1060:
                  if ((0x83ff000000000000L & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  { jjCheckNAddStates(1248, 1251); }
                  break;
               case 1061:
                  if ((0x83ff000000000000L & l) != 0L && kind > 105)
                     kind = 105;
                  break;
               case 1062:
                  if ((0x83ff000000000000L & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  { jjCheckNAdd(1061); }
                  break;
               case 1063:
                  if ((0x83ff000000000000L & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  { jjCheckNAddTwoStates(1061, 1062); }
                  break;
               case 1064:
                  if ((0x83ff000000000000L & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  { jjCheckNAddStates(1252, 1254); }
                  break;
               case 1065:
                  if ((0x83ff000000000000L & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  { jjCheckNAddStates(1255, 1259); }
                  break;
               case 1066:
                  if ((0x83ff000000000000L & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  { jjCheckNAdd(1058); }
                  break;
               case 1067:
                  if ((0x83ff000000000000L & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  { jjCheckNAddTwoStates(1066, 1058); }
                  break;
               case 1068:
                  if ((0x83ff000000000000L & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  { jjCheckNAddStates(1260, 1262); }
                  break;
               case 1069:
                  if ((0x83ff000000000000L & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  { jjCheckNAddStates(1263, 1266); }
                  break;
               case 1071:
                  if (curChar == 40)
                     { jjCheckNAddStates(1267, 1272); }
                  break;
               case 1072:
                  if ((0xfffffc7a00000000L & l) != 0L)
                     { jjCheckNAddStates(1273, 1276); }
                  break;
               case 1073:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(1073, 1074); }
                  break;
               case 1074:
                  if (curChar == 41 && kind > 106)
                     kind = 106;
                  break;
               case 1076:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1273, 1276); }
                  break;
               case 1077:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1277, 1286); }
                  break;
               case 1078:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1287, 1291); }
                  break;
               case 1079:
                  if (curChar == 10)
                     { jjCheckNAddStates(1273, 1276); }
                  break;
               case 1080:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 1079;
                  break;
               case 1081:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1273, 1276); }
                  break;
               case 1082:
               case 1084:
               case 1087:
               case 1091:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(1078); }
                  break;
               case 1083:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1084;
                  break;
               case 1085:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1086;
                  break;
               case 1086:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1087;
                  break;
               case 1088:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1089;
                  break;
               case 1089:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1090;
                  break;
               case 1090:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1091;
                  break;
               case 1092:
                  if (curChar == 39)
                     { jjCheckNAddStates(1292, 1294); }
                  break;
               case 1093:
                  if ((0xffffff7fffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1292, 1294); }
                  break;
               case 1094:
                  if (curChar == 39)
                     { jjCheckNAddTwoStates(1073, 1074); }
                  break;
               case 1096:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(1292, 1294); }
                  break;
               case 1097:
                  if (curChar == 10)
                     { jjCheckNAddStates(1292, 1294); }
                  break;
               case 1098:
               case 1102:
                  if (curChar == 13)
                     { jjCheckNAdd(1097); }
                  break;
               case 1099:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1292, 1294); }
                  break;
               case 1100:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1295, 1304); }
                  break;
               case 1101:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1305, 1309); }
                  break;
               case 1103:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1292, 1294); }
                  break;
               case 1104:
               case 1106:
               case 1109:
               case 1113:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(1101); }
                  break;
               case 1105:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1106;
                  break;
               case 1107:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1108;
                  break;
               case 1108:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1109;
                  break;
               case 1110:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1111;
                  break;
               case 1111:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1112;
                  break;
               case 1112:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1113;
                  break;
               case 1114:
                  if (curChar == 34)
                     { jjCheckNAddStates(1310, 1312); }
                  break;
               case 1115:
                  if ((0xfffffffbffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1310, 1312); }
                  break;
               case 1116:
                  if (curChar == 34)
                     { jjCheckNAddTwoStates(1073, 1074); }
                  break;
               case 1118:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(1310, 1312); }
                  break;
               case 1119:
                  if (curChar == 10)
                     { jjCheckNAddStates(1310, 1312); }
                  break;
               case 1120:
               case 1124:
                  if (curChar == 13)
                     { jjCheckNAdd(1119); }
                  break;
               case 1121:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1310, 1312); }
                  break;
               case 1122:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1313, 1322); }
                  break;
               case 1123:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1323, 1327); }
                  break;
               case 1125:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1310, 1312); }
                  break;
               case 1126:
               case 1128:
               case 1131:
               case 1135:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(1123); }
                  break;
               case 1127:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1128;
                  break;
               case 1129:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1130;
                  break;
               case 1130:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1131;
                  break;
               case 1132:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1133;
                  break;
               case 1133:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1134;
                  break;
               case 1134:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1135;
                  break;
               case 1136:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1328, 1334); }
                  break;
               case 1139:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 19)
                     kind = 19;
                  { jjCheckNAddStates(91, 238); }
                  break;
               case 1140:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 19)
                     kind = 19;
                  { jjCheckNAddTwoStates(1140, 212); }
                  break;
               case 1141:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1141, 1142); }
                  break;
               case 1142:
                  if (curChar == 46)
                     { jjCheckNAdd(211); }
                  break;
               case 1143:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 23)
                     kind = 23;
                  { jjCheckNAddTwoStates(1143, 216); }
                  break;
               case 1144:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1144, 1145); }
                  break;
               case 1145:
                  if (curChar == 46)
                     { jjCheckNAdd(215); }
                  break;
               case 1146:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1335, 1337); }
                  break;
               case 1147:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1147, 1148); }
                  break;
               case 1148:
                  if (curChar == 46)
                     { jjCheckNAdd(219); }
                  break;
               case 1149:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1338, 1340); }
                  break;
               case 1150:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1150, 1151); }
                  break;
               case 1151:
                  if (curChar == 46)
                     { jjCheckNAdd(247); }
                  break;
               case 1152:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1341, 1343); }
                  break;
               case 1153:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1153, 1154); }
                  break;
               case 1154:
                  if (curChar == 46)
                     { jjCheckNAdd(254); }
                  break;
               case 1155:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1344, 1346); }
                  break;
               case 1156:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1156, 1157); }
                  break;
               case 1157:
                  if (curChar == 46)
                     { jjCheckNAdd(282); }
                  break;
               case 1158:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1347, 1349); }
                  break;
               case 1159:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1159, 1160); }
                  break;
               case 1160:
                  if (curChar == 46)
                     { jjCheckNAdd(288); }
                  break;
               case 1161:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1350, 1352); }
                  break;
               case 1162:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1162, 1163); }
                  break;
               case 1163:
                  if (curChar == 46)
                     { jjCheckNAdd(294); }
                  break;
               case 1164:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1353, 1355); }
                  break;
               case 1165:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1165, 1166); }
                  break;
               case 1166:
                  if (curChar == 46)
                     { jjCheckNAdd(300); }
                  break;
               case 1167:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1356, 1358); }
                  break;
               case 1168:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1168, 1169); }
                  break;
               case 1169:
                  if (curChar == 46)
                     { jjCheckNAdd(308); }
                  break;
               case 1170:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1359, 1361); }
                  break;
               case 1171:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1171, 1172); }
                  break;
               case 1172:
                  if (curChar == 46)
                     { jjCheckNAdd(316); }
                  break;
               case 1173:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1362, 1364); }
                  break;
               case 1174:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1174, 1175); }
                  break;
               case 1175:
                  if (curChar == 46)
                     { jjCheckNAdd(322); }
                  break;
               case 1176:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1365, 1367); }
                  break;
               case 1177:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1177, 1178); }
                  break;
               case 1178:
                  if (curChar == 46)
                     { jjCheckNAdd(328); }
                  break;
               case 1179:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1368, 1370); }
                  break;
               case 1180:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1180, 1181); }
                  break;
               case 1181:
                  if (curChar == 46)
                     { jjCheckNAdd(334); }
                  break;
               case 1182:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1371, 1373); }
                  break;
               case 1183:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1183, 1184); }
                  break;
               case 1184:
                  if (curChar == 46)
                     { jjCheckNAdd(340); }
                  break;
               case 1185:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1374, 1376); }
                  break;
               case 1186:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1186, 1187); }
                  break;
               case 1187:
                  if (curChar == 46)
                     { jjCheckNAdd(346); }
                  break;
               case 1188:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1377, 1379); }
                  break;
               case 1189:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1189, 1190); }
                  break;
               case 1190:
                  if (curChar == 46)
                     { jjCheckNAdd(352); }
                  break;
               case 1191:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1380, 1382); }
                  break;
               case 1192:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1192, 1193); }
                  break;
               case 1193:
                  if (curChar == 46)
                     { jjCheckNAdd(357); }
                  break;
               case 1194:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1383, 1385); }
                  break;
               case 1195:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1195, 1196); }
                  break;
               case 1196:
                  if (curChar == 46)
                     { jjCheckNAdd(364); }
                  break;
               case 1197:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1386, 1388); }
                  break;
               case 1198:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1198, 1199); }
                  break;
               case 1199:
                  if (curChar == 46)
                     { jjCheckNAdd(371); }
                  break;
               case 1200:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1389, 1391); }
                  break;
               case 1201:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1201, 1202); }
                  break;
               case 1202:
                  if (curChar == 46)
                     { jjCheckNAdd(379); }
                  break;
               case 1203:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1392, 1395); }
                  break;
               case 1204:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1204, 1205); }
                  break;
               case 1205:
                  if (curChar == 46)
                     { jjCheckNAdd(387); }
                  break;
               case 1206:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1396, 1399); }
                  break;
               case 1207:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1207, 1208); }
                  break;
               case 1208:
                  if (curChar == 46)
                     { jjCheckNAdd(415); }
                  break;
               case 1209:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1400, 1403); }
                  break;
               case 1210:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1210, 1211); }
                  break;
               case 1211:
                  if (curChar == 46)
                     { jjCheckNAdd(431); }
                  break;
               case 1212:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1404, 1407); }
                  break;
               case 1213:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1213, 1214); }
                  break;
               case 1214:
                  if (curChar == 46)
                     { jjCheckNAdd(459); }
                  break;
               case 1215:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1408, 1410); }
                  break;
               case 1216:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1216, 1217); }
                  break;
               case 1217:
                  if (curChar == 46)
                     { jjCheckNAdd(499); }
                  break;
               case 1218:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1411, 1413); }
                  break;
               case 1219:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1219, 1220); }
                  break;
               case 1220:
                  if (curChar == 46)
                     { jjCheckNAdd(506); }
                  break;
               case 1221:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1414, 1416); }
                  break;
               case 1222:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1222, 1223); }
                  break;
               case 1223:
                  if (curChar == 46)
                     { jjCheckNAdd(514); }
                  break;
               case 1224:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1417, 1420); }
                  break;
               case 1225:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1225, 1226); }
                  break;
               case 1226:
                  if (curChar == 46)
                     { jjCheckNAdd(519); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 183:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(0, 2); }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(560, 561); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     { jjCheckNAddTwoStates(558, 559); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(614, 615); }
                  break;
               case 1228:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(0, 2); }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(560, 561); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     { jjCheckNAddTwoStates(558, 559); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(614, 615); }
                  break;
               case 182:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(0, 2); }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(560, 561); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     { jjCheckNAddTwoStates(558, 559); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(614, 615); }
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 183;
                  break;
               case 577:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 113)
                        kind = 113;
                     { jjCheckNAddTwoStates(578, 579); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(580, 597); }
                  break;
               case 557:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(0, 2); }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(560, 645); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     { jjCheckNAddTwoStates(558, 559); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(614, 631); }
                  break;
               case 184:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(0, 2); }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(560, 561); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     { jjCheckNAddTwoStates(558, 559); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(614, 615); }
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 182;
                  break;
               case 1:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     { jjCheckNAddStates(1421, 1425); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddStates(1426, 1429); }
                  else if (curChar == 64)
                     { jjCheckNAddStates(1430, 1442); }
                  if ((0x20000000200000L & l) != 0L)
                     { jjAddStates(1443, 1444); }
                  else if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 208;
                  else if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 203;
                  else if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 198;
                  else if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 194;
                  else if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 189;
                  else if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 184;
                  break;
               case 2:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(280, 282); }
                  break;
               case 4:
                  if (curChar == 92)
                     { jjAddStates(1445, 1448); }
                  break;
               case 8:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(280, 282); }
                  break;
               case 9:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(283, 292); }
                  break;
               case 10:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(293, 297); }
                  break;
               case 13:
               case 15:
               case 18:
               case 22:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(10); }
                  break;
               case 14:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 16:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 17:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 19:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 20:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 21:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 22;
                  break;
               case 24:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(277, 279); }
                  break;
               case 26:
                  if (curChar == 92)
                     { jjAddStates(1449, 1452); }
                  break;
               case 30:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(277, 279); }
                  break;
               case 31:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(298, 307); }
                  break;
               case 32:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(308, 312); }
                  break;
               case 35:
               case 37:
               case 40:
               case 44:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(32); }
                  break;
               case 36:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 38:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 39;
                  break;
               case 39:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 40;
                  break;
               case 41:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 42;
                  break;
               case 42:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 43;
                  break;
               case 43:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 44;
                  break;
               case 46:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddTwoStates(46, 47); }
                  break;
               case 47:
                  if (curChar == 92)
                     { jjAddStates(1453, 1454); }
                  break;
               case 48:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddTwoStates(46, 47); }
                  break;
               case 49:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddStates(313, 321); }
                  break;
               case 50:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddStates(322, 325); }
                  break;
               case 54:
               case 56:
               case 59:
               case 63:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(50); }
                  break;
               case 55:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 56;
                  break;
               case 57:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 58;
                  break;
               case 58:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 59;
                  break;
               case 60:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 61;
                  break;
               case 61:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 62;
                  break;
               case 62:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 63;
                  break;
               case 68:
                  { jjAddStates(1455, 1456); }
                  break;
               case 70:
               case 71:
                  { jjCheckNAddTwoStates(71, 72); }
                  break;
               case 74:
                  if ((0x20000000200L & l) != 0L)
                     { jjCheckNAddTwoStates(75, 160); }
                  break;
               case 75:
                  if ((0x200000002000L & l) != 0L)
                     { jjCheckNAddTwoStates(76, 149); }
                  break;
               case 76:
                  if ((0x1000000010000L & l) != 0L)
                     { jjCheckNAddTwoStates(77, 138); }
                  break;
               case 77:
                  if ((0x800000008000L & l) != 0L)
                     { jjCheckNAddTwoStates(78, 127); }
                  break;
               case 78:
                  if ((0x4000000040000L & l) != 0L)
                     { jjCheckNAddTwoStates(79, 116); }
                  break;
               case 79:
                  if ((0x10000000100000L & l) != 0L)
                     { jjAddStates(1457, 1458); }
                  break;
               case 80:
                  if ((0x200000002L & l) != 0L)
                     { jjCheckNAddTwoStates(81, 94); }
                  break;
               case 81:
                  if ((0x400000004000L & l) != 0L)
                     { jjCheckNAddTwoStates(82, 83); }
                  break;
               case 82:
                  if ((0x10000000100000L & l) != 0L && kind > 76)
                     kind = 76;
                  break;
               case 83:
                  if (curChar == 92)
                     { jjCheckNAddStates(1459, 1462); }
                  break;
               case 94:
                  if (curChar == 92)
                     { jjCheckNAddStates(1463, 1466); }
                  break;
               case 95:
                  if ((0x2000000020L & l) != 0L)
                     { jjCheckNAddStates(1467, 1470); }
                  break;
               case 105:
                  if (curChar == 92)
                     { jjAddStates(1471, 1473); }
                  break;
               case 116:
                  if (curChar == 92)
                     { jjCheckNAddStates(1474, 1477); }
                  break;
               case 127:
                  if (curChar == 92)
                     { jjCheckNAddStates(1478, 1481); }
                  break;
               case 138:
                  if (curChar == 92)
                     { jjCheckNAddStates(1482, 1485); }
                  break;
               case 149:
                  if (curChar == 92)
                     { jjCheckNAddStates(1486, 1489); }
                  break;
               case 160:
                  if (curChar == 92)
                     { jjCheckNAddStates(1490, 1493); }
                  break;
               case 161:
                  if ((0x1000000010L & l) != 0L)
                     { jjCheckNAddStates(1494, 1497); }
                  break;
               case 171:
                  if (curChar == 92)
                     { jjAddStates(1498, 1501); }
                  break;
               case 185:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 184;
                  break;
               case 186:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 187;
                  break;
               case 188:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 186;
                  break;
               case 189:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 188;
                  break;
               case 190:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 189;
                  break;
               case 191:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 192;
                  break;
               case 193:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 191;
                  break;
               case 194:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 193;
                  break;
               case 195:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 194;
                  break;
               case 196:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 197;
                  break;
               case 198:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 196;
                  break;
               case 199:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 198;
                  break;
               case 200:
                  if ((0x400000004L & l) != 0L)
                     { jjCheckNAddTwoStates(201, 202); }
                  break;
               case 201:
                  if ((0x200000002L & l) != 0L)
                     { jjCheckNAdd(202); }
                  break;
               case 203:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 200;
                  break;
               case 204:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 203;
                  break;
               case 205:
                  if ((0x100000001000L & l) != 0L)
                     { jjCheckNAddTwoStates(206, 207); }
                  break;
               case 206:
                  if ((0x200000002L & l) != 0L)
                     { jjCheckNAdd(207); }
                  break;
               case 208:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 205;
                  break;
               case 209:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 208;
                  break;
               case 212:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1502, 1503); }
                  break;
               case 216:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1504, 1505); }
                  break;
               case 220:
                  if (curChar == 92)
                     { jjAddStates(1506, 1508); }
                  break;
               case 223:
                  if ((0x200000002000L & l) != 0L && kind > 77)
                     kind = 77;
                  break;
               case 224:
                  if (curChar == 92)
                     { jjCheckNAddStates(1509, 1512); }
                  break;
               case 225:
                  if ((0x1000000010L & l) == 0L)
                     break;
                  if (kind > 77)
                     kind = 77;
                  { jjAddStates(1513, 1514); }
                  break;
               case 243:
                  if ((0x2000000020L & l) != 0L)
                     { jjCheckNAddStates(1515, 1518); }
                  break;
               case 246:
                  if ((0x2000000020L & l) != 0L)
                     { jjCheckNAddTwoStates(223, 224); }
                  break;
               case 248:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1519, 1520); }
                  break;
               case 251:
                  if ((0x200000002000L & l) != 0L && kind > 78)
                     kind = 78;
                  break;
               case 252:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 251;
                  break;
               case 253:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 252;
                  break;
               case 255:
                  if (curChar == 92)
                     { jjAddStates(1521, 1523); }
                  break;
               case 258:
                  if ((0x100000001000000L & l) != 0L && kind > 79)
                     kind = 79;
                  break;
               case 259:
                  if (curChar == 92)
                     { jjCheckNAddStates(1524, 1527); }
                  break;
               case 278:
                  if ((0x2000000020L & l) != 0L)
                     { jjCheckNAddStates(1528, 1531); }
                  break;
               case 281:
                  if ((0x2000000020L & l) != 0L)
                     { jjCheckNAddTwoStates(258, 259); }
                  break;
               case 283:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1532, 1533); }
                  break;
               case 286:
                  if ((0x10000000100L & l) != 0L && kind > 80)
                     kind = 80;
                  break;
               case 287:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 286;
                  break;
               case 289:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1534, 1535); }
                  break;
               case 292:
                  if ((0x80000000800000L & l) != 0L && kind > 81)
                     kind = 81;
                  break;
               case 293:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 292;
                  break;
               case 295:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1536, 1537); }
                  break;
               case 298:
                  if ((0x10000000100L & l) != 0L && kind > 82)
                     kind = 82;
                  break;
               case 299:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 298;
                  break;
               case 301:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1538, 1539); }
                  break;
               case 304:
                  if ((0x400000004000L & l) != 0L && kind > 83)
                     kind = 83;
                  break;
               case 305:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 304;
                  break;
               case 306:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 305;
                  break;
               case 307:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 306;
                  break;
               case 309:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1540, 1541); }
                  break;
               case 312:
                  if ((0x100000001000000L & l) != 0L && kind > 84)
                     kind = 84;
                  break;
               case 313:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 312;
                  break;
               case 314:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 313;
                  break;
               case 315:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 314;
                  break;
               case 317:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1542, 1543); }
                  break;
               case 320:
                  if ((0x100000001000000L & l) != 0L && kind > 85)
                     kind = 85;
                  break;
               case 321:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 320;
                  break;
               case 323:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1544, 1545); }
                  break;
               case 326:
                  if ((0x200000002000L & l) != 0L && kind > 86)
                     kind = 86;
                  break;
               case 327:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 326;
                  break;
               case 329:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1546, 1547); }
                  break;
               case 332:
                  if ((0x200000002000L & l) != 0L && kind > 87)
                     kind = 87;
                  break;
               case 333:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 332;
                  break;
               case 335:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1548, 1549); }
                  break;
               case 338:
                  if ((0x400000004000L & l) != 0L && kind > 88)
                     kind = 88;
                  break;
               case 339:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 338;
                  break;
               case 341:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1550, 1551); }
                  break;
               case 344:
                  if ((0x10000000100000L & l) != 0L && kind > 89)
                     kind = 89;
                  break;
               case 345:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 344;
                  break;
               case 347:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1552, 1553); }
                  break;
               case 350:
                  if ((0x800000008L & l) != 0L && kind > 90)
                     kind = 90;
                  break;
               case 351:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 350;
                  break;
               case 353:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1554, 1555); }
                  break;
               case 356:
                  if ((0x2000000020000L & l) != 0L && kind > 91)
                     kind = 91;
                  break;
               case 358:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1556, 1557); }
                  break;
               case 361:
                  if ((0x8000000080L & l) != 0L && kind > 92)
                     kind = 92;
                  break;
               case 362:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 361;
                  break;
               case 363:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 362;
                  break;
               case 365:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1558, 1559); }
                  break;
               case 368:
                  if ((0x1000000010L & l) != 0L && kind > 93)
                     kind = 93;
                  break;
               case 369:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 368;
                  break;
               case 370:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 369;
                  break;
               case 372:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1560, 1561); }
                  break;
               case 375:
                  if ((0x1000000010L & l) != 0L && kind > 94)
                     kind = 94;
                  break;
               case 376:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 375;
                  break;
               case 377:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 376;
                  break;
               case 378:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 377;
                  break;
               case 380:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1562, 1563); }
                  break;
               case 383:
                  if ((0x400000004000L & l) != 0L && kind > 95)
                     kind = 95;
                  break;
               case 384:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 383;
                  break;
               case 385:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 384;
                  break;
               case 386:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 385;
                  break;
               case 388:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1564, 1565); }
                  break;
               case 391:
                  if ((0x200000002000L & l) != 0L)
                     { jjCheckNAddTwoStates(392, 393); }
                  break;
               case 392:
                  if ((0x8000000080000L & l) != 0L && kind > 96)
                     kind = 96;
                  break;
               case 393:
                  if (curChar == 92)
                     { jjCheckNAddStates(1566, 1569); }
                  break;
               case 404:
                  if (curChar == 92)
                     { jjAddStates(1570, 1573); }
                  break;
               case 405:
                  if ((0x1000000010L & l) != 0L)
                     { jjCheckNAddStates(1574, 1577); }
                  break;
               case 416:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1578, 1579); }
                  break;
               case 419:
                  if ((0x8000000080000L & l) != 0L && kind > 97)
                     kind = 97;
                  break;
               case 420:
                  if (curChar == 92)
                     { jjAddStates(1580, 1583); }
                  break;
               case 432:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1584, 1585); }
                  break;
               case 435:
                  if ((0x10000000100L & l) != 0L)
                     { jjCheckNAddTwoStates(436, 437); }
                  break;
               case 436:
                  if ((0x400000004000000L & l) != 0L && kind > 98)
                     kind = 98;
                  break;
               case 437:
                  if (curChar == 92)
                     { jjCheckNAddStates(1586, 1589); }
                  break;
               case 438:
                  if ((0x200000002L & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjAddStates(1590, 1591); }
                  break;
               case 448:
                  if (curChar == 92)
                     { jjAddStates(1592, 1595); }
                  break;
               case 460:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1596, 1597); }
                  break;
               case 463:
                  if ((0x80000000800L & l) != 0L)
                     { jjCheckNAddTwoStates(464, 477); }
                  break;
               case 464:
                  if ((0x10000000100L & l) != 0L)
                     { jjCheckNAddTwoStates(465, 466); }
                  break;
               case 465:
                  if ((0x400000004000000L & l) != 0L && kind > 99)
                     kind = 99;
                  break;
               case 466:
                  if (curChar == 92)
                     { jjCheckNAddStates(1598, 1601); }
                  break;
               case 467:
                  if ((0x200000002L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  { jjAddStates(1602, 1603); }
                  break;
               case 477:
                  if (curChar == 92)
                     { jjCheckNAddStates(1604, 1607); }
                  break;
               case 488:
                  if (curChar == 92)
                     { jjAddStates(1608, 1611); }
                  break;
               case 489:
                  if ((0x400000004L & l) != 0L)
                     { jjCheckNAddStates(1612, 1615); }
                  break;
               case 500:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1616, 1617); }
                  break;
               case 503:
                  if ((0x20000000200L & l) != 0L && kind > 100)
                     kind = 100;
                  break;
               case 504:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 503;
                  break;
               case 505:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 504;
                  break;
               case 507:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1618, 1619); }
                  break;
               case 510:
                  if ((0x200000002000L & l) != 0L && kind > 101)
                     kind = 101;
                  break;
               case 511:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 510;
                  break;
               case 512:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 511;
                  break;
               case 513:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 512;
                  break;
               case 515:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1620, 1621); }
                  break;
               case 520:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1622, 1623); }
                  break;
               case 523:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 103)
                     kind = 103;
                  { jjCheckNAddTwoStates(524, 525); }
                  break;
               case 524:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 103)
                     kind = 103;
                  { jjCheckNAddTwoStates(524, 525); }
                  break;
               case 525:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(526, 527); }
                  break;
               case 526:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 103)
                     kind = 103;
                  { jjCheckNAddTwoStates(524, 525); }
                  break;
               case 527:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 103)
                     kind = 103;
                  { jjCheckNAddStates(653, 661); }
                  break;
               case 528:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 103)
                     kind = 103;
                  { jjCheckNAddStates(662, 665); }
                  break;
               case 532:
               case 534:
               case 537:
               case 541:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(528); }
                  break;
               case 533:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 534;
                  break;
               case 535:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 536;
                  break;
               case 536:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 537;
                  break;
               case 538:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 539;
                  break;
               case 539:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 540;
                  break;
               case 540:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 541;
                  break;
               case 542:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(526, 543); }
                  break;
               case 543:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 103)
                     kind = 103;
                  { jjCheckNAddStates(666, 674); }
                  break;
               case 544:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 103)
                     kind = 103;
                  { jjCheckNAddStates(675, 678); }
                  break;
               case 546:
               case 548:
               case 551:
               case 555:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(544); }
                  break;
               case 547:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 548;
                  break;
               case 549:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 550;
                  break;
               case 550:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 551;
                  break;
               case 552:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 553;
                  break;
               case 553:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 554;
                  break;
               case 554:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 555;
                  break;
               case 558:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  { jjCheckNAddTwoStates(558, 559); }
                  break;
               case 559:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(560, 561); }
                  break;
               case 560:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  { jjCheckNAddTwoStates(558, 559); }
                  break;
               case 561:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  { jjCheckNAddStates(679, 687); }
                  break;
               case 562:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  { jjCheckNAddStates(688, 691); }
                  break;
               case 566:
               case 568:
               case 571:
               case 575:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(562); }
                  break;
               case 567:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 568;
                  break;
               case 569:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 570;
                  break;
               case 570:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 571;
                  break;
               case 572:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 573;
                  break;
               case 573:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 574;
                  break;
               case 574:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 575;
                  break;
               case 578:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 113)
                     kind = 113;
                  { jjCheckNAddTwoStates(578, 579); }
                  break;
               case 579:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(580, 581); }
                  break;
               case 580:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 113)
                     kind = 113;
                  { jjCheckNAddTwoStates(578, 579); }
                  break;
               case 581:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 113)
                     kind = 113;
                  { jjCheckNAddStates(692, 700); }
                  break;
               case 582:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 113)
                     kind = 113;
                  { jjCheckNAddStates(701, 704); }
                  break;
               case 586:
               case 588:
               case 591:
               case 595:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(582); }
                  break;
               case 587:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 588;
                  break;
               case 589:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 590;
                  break;
               case 590:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 591;
                  break;
               case 592:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 593;
                  break;
               case 593:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 594;
                  break;
               case 594:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 595;
                  break;
               case 596:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(580, 597); }
                  break;
               case 597:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 113)
                     kind = 113;
                  { jjCheckNAddStates(705, 713); }
                  break;
               case 598:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 113)
                     kind = 113;
                  { jjCheckNAddStates(714, 717); }
                  break;
               case 600:
               case 602:
               case 605:
               case 609:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(598); }
                  break;
               case 601:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 602;
                  break;
               case 603:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 604;
                  break;
               case 604:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 605;
                  break;
               case 606:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 607;
                  break;
               case 607:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 608;
                  break;
               case 608:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 609;
                  break;
               case 610:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(0, 2); }
                  break;
               case 611:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(0, 2); }
                  break;
               case 613:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(614, 615); }
                  break;
               case 614:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(0, 2); }
                  break;
               case 615:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(718, 727); }
                  break;
               case 616:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(728, 732); }
                  break;
               case 620:
               case 622:
               case 625:
               case 629:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(616); }
                  break;
               case 621:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 622;
                  break;
               case 623:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 624;
                  break;
               case 624:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 625;
                  break;
               case 626:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 627;
                  break;
               case 627:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 628;
                  break;
               case 628:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 629;
                  break;
               case 630:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(614, 631); }
                  break;
               case 631:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(733, 742); }
                  break;
               case 632:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(743, 747); }
                  break;
               case 634:
               case 636:
               case 639:
               case 643:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(632); }
                  break;
               case 635:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 636;
                  break;
               case 637:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 638;
                  break;
               case 638:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 639;
                  break;
               case 640:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 641;
                  break;
               case 641:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 642;
                  break;
               case 642:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 643;
                  break;
               case 644:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(560, 645); }
                  break;
               case 645:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  { jjCheckNAddStates(748, 756); }
                  break;
               case 646:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  { jjCheckNAddStates(757, 760); }
                  break;
               case 648:
               case 650:
               case 653:
               case 657:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(646); }
                  break;
               case 649:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 650;
                  break;
               case 651:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 652;
                  break;
               case 652:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 653;
                  break;
               case 654:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 655;
                  break;
               case 655:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 656;
                  break;
               case 656:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 657;
                  break;
               case 658:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  { jjCheckNAddStates(1421, 1425); }
                  break;
               case 659:
                  if (curChar == 64)
                     { jjCheckNAddStates(1430, 1442); }
                  break;
               case 660:
                  if ((0x20000000200L & l) != 0L)
                     { jjCheckNAddTwoStates(661, 710); }
                  break;
               case 661:
                  if ((0x200000002000L & l) != 0L)
                     { jjCheckNAddTwoStates(662, 699); }
                  break;
               case 662:
                  if ((0x1000000010000L & l) != 0L)
                     { jjCheckNAddTwoStates(663, 688); }
                  break;
               case 663:
                  if ((0x800000008000L & l) != 0L)
                     { jjCheckNAddTwoStates(664, 677); }
                  break;
               case 664:
                  if ((0x4000000040000L & l) != 0L)
                     { jjCheckNAddTwoStates(665, 666); }
                  break;
               case 665:
                  if ((0x10000000100000L & l) != 0L && kind > 71)
                     kind = 71;
                  break;
               case 666:
                  if (curChar == 92)
                     { jjCheckNAddStates(1624, 1627); }
                  break;
               case 677:
                  if (curChar == 92)
                     { jjCheckNAddStates(1628, 1631); }
                  break;
               case 688:
                  if (curChar == 92)
                     { jjCheckNAddStates(1632, 1635); }
                  break;
               case 699:
                  if (curChar == 92)
                     { jjCheckNAddStates(1636, 1639); }
                  break;
               case 710:
                  if (curChar == 92)
                     { jjCheckNAddStates(1640, 1643); }
                  break;
               case 711:
                  if ((0x1000000010L & l) != 0L)
                     { jjCheckNAddStates(1644, 1647); }
                  break;
               case 721:
                  if ((0x1000000010000L & l) != 0L)
                     { jjAddStates(1648, 1649); }
                  break;
               case 722:
                  if ((0x200000002L & l) != 0L)
                     { jjCheckNAddTwoStates(723, 736); }
                  break;
               case 723:
                  if ((0x8000000080L & l) != 0L)
                     { jjAddStates(1650, 1651); }
                  break;
               case 724:
                  if ((0x2000000020L & l) != 0L && kind > 72)
                     kind = 72;
                  break;
               case 725:
                  if (curChar == 92)
                     { jjAddStates(1652, 1654); }
                  break;
               case 736:
                  if (curChar == 92)
                     { jjCheckNAddStates(1655, 1658); }
                  break;
               case 747:
                  if (curChar == 92)
                     { jjAddStates(1659, 1661); }
                  break;
               case 758:
                  if ((0x200000002000L & l) != 0L)
                     { jjCheckNAddTwoStates(759, 796); }
                  break;
               case 759:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1662, 1663); }
                  break;
               case 760:
                  if ((0x1000000010L & l) != 0L)
                     { jjCheckNAddTwoStates(761, 774); }
                  break;
               case 761:
                  if ((0x20000000200L & l) != 0L)
                     { jjAddStates(1664, 1665); }
                  break;
               case 762:
                  if ((0x200000002L & l) != 0L && kind > 73)
                     kind = 73;
                  break;
               case 763:
                  if (curChar == 92)
                     { jjAddStates(1666, 1668); }
                  break;
               case 774:
                  if (curChar == 92)
                     { jjCheckNAddStates(1669, 1672); }
                  break;
               case 785:
                  if (curChar == 92)
                     { jjAddStates(1673, 1675); }
                  break;
               case 796:
                  if (curChar == 92)
                     { jjAddStates(1676, 1678); }
                  break;
               case 807:
                  if ((0x4000000040L & l) != 0L)
                     { jjCheckNAddTwoStates(808, 882); }
                  break;
               case 808:
                  if ((0x800000008000L & l) != 0L)
                     { jjCheckNAddTwoStates(809, 871); }
                  break;
               case 809:
                  if ((0x400000004000L & l) != 0L)
                     { jjCheckNAddTwoStates(810, 860); }
                  break;
               case 810:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 811;
                  break;
               case 812:
                  if ((0x4000000040L & l) != 0L)
                     { jjAddStates(1679, 1680); }
                  break;
               case 813:
                  if ((0x200000002L & l) != 0L)
                     { jjAddStates(1681, 1682); }
                  break;
               case 814:
                  if ((0x800000008L & l) != 0L)
                     { jjAddStates(1683, 1684); }
                  break;
               case 815:
                  if ((0x2000000020L & l) != 0L && kind > 74)
                     kind = 74;
                  break;
               case 816:
                  if (curChar == 92)
                     { jjAddStates(1685, 1687); }
                  break;
               case 827:
                  if (curChar == 92)
                     { jjAddStates(1688, 1690); }
                  break;
               case 838:
                  if (curChar == 92)
                     { jjAddStates(1691, 1693); }
                  break;
               case 849:
                  if (curChar == 92)
                     { jjAddStates(1694, 1696); }
                  break;
               case 860:
                  if (curChar == 92)
                     { jjCheckNAddStates(1697, 1700); }
                  break;
               case 871:
                  if (curChar == 92)
                     { jjCheckNAddStates(1701, 1704); }
                  break;
               case 872:
                  if ((0x2000000020L & l) != 0L)
                     { jjCheckNAddStates(1705, 1708); }
                  break;
               case 882:
                  if (curChar == 92)
                     { jjCheckNAddStates(1709, 1712); }
                  break;
               case 893:
                  if (curChar == 92)
                     { jjAddStates(1713, 1715); }
                  break;
               case 904:
                  if ((0x800000008L & l) != 0L)
                     { jjCheckNAddTwoStates(905, 966); }
                  break;
               case 905:
                  if ((0x10000000100L & l) != 0L)
                     { jjAddStates(1716, 1717); }
                  break;
               case 906:
                  if ((0x200000002L & l) != 0L)
                     { jjCheckNAddTwoStates(907, 944); }
                  break;
               case 907:
                  if ((0x4000000040000L & l) != 0L)
                     { jjCheckNAddTwoStates(908, 933); }
                  break;
               case 908:
                  if ((0x8000000080000L & l) != 0L)
                     { jjAddStates(1718, 1719); }
                  break;
               case 909:
                  if ((0x2000000020L & l) != 0L)
                     { jjCheckNAddTwoStates(910, 911); }
                  break;
               case 910:
                  if ((0x10000000100000L & l) != 0L && kind > 75)
                     kind = 75;
                  break;
               case 911:
                  if (curChar == 92)
                     { jjCheckNAddStates(1720, 1723); }
                  break;
               case 922:
                  if (curChar == 92)
                     { jjAddStates(1724, 1726); }
                  break;
               case 933:
                  if (curChar == 92)
                     { jjCheckNAddStates(1727, 1730); }
                  break;
               case 944:
                  if (curChar == 92)
                     { jjCheckNAddStates(1731, 1734); }
                  break;
               case 955:
                  if (curChar == 92)
                     { jjAddStates(1735, 1737); }
                  break;
               case 966:
                  if (curChar == 92)
                     { jjCheckNAddStates(1738, 1741); }
                  break;
               case 977:
                  if (curChar == 92)
                     { jjAddStates(1742, 1744); }
                  break;
               case 989:
               case 990:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 115)
                     kind = 115;
                  { jjCheckNAddTwoStates(990, 991); }
                  break;
               case 991:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(992, 993); }
                  break;
               case 992:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 115)
                     kind = 115;
                  { jjCheckNAddTwoStates(990, 991); }
                  break;
               case 993:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 115)
                     kind = 115;
                  { jjCheckNAddStates(1178, 1186); }
                  break;
               case 994:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 115)
                     kind = 115;
                  { jjCheckNAddStates(1187, 1190); }
                  break;
               case 998:
               case 1000:
               case 1003:
               case 1007:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(994); }
                  break;
               case 999:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1000;
                  break;
               case 1001:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1002;
                  break;
               case 1002:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1003;
                  break;
               case 1004:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1005;
                  break;
               case 1005:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1006;
                  break;
               case 1006:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1007;
                  break;
               case 1008:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(992, 1009); }
                  break;
               case 1009:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 115)
                     kind = 115;
                  { jjCheckNAddStates(1191, 1199); }
                  break;
               case 1010:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 115)
                     kind = 115;
                  { jjCheckNAddStates(1200, 1203); }
                  break;
               case 1012:
               case 1014:
               case 1017:
               case 1021:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(1010); }
                  break;
               case 1013:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1014;
                  break;
               case 1015:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1016;
                  break;
               case 1016:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1017;
                  break;
               case 1018:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1019;
                  break;
               case 1019:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1020;
                  break;
               case 1020:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1021;
                  break;
               case 1022:
                  if (curChar == 92)
                     { jjCheckNAddStates(1745, 1748); }
                  break;
               case 1023:
                  if ((0x1000000010L & l) != 0L)
                     { jjCheckNAddStates(1749, 1752); }
                  break;
               case 1033:
                  if (curChar == 92)
                     { jjCheckNAddStates(1753, 1756); }
                  break;
               case 1044:
                  if (curChar == 92)
                     { jjCheckNAddStates(1757, 1760); }
                  break;
               case 1055:
                  if ((0x20000000200000L & l) != 0L)
                     { jjAddStates(1443, 1444); }
                  break;
               case 1057:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  { jjCheckNAddTwoStates(1058, 1065); }
                  break;
               case 1059:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  jjstateSet[jjnewStateCnt++] = 1060;
                  break;
               case 1060:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  { jjCheckNAddStates(1248, 1251); }
                  break;
               case 1061:
                  if ((0x7e0000007eL & l) != 0L && kind > 105)
                     kind = 105;
                  break;
               case 1062:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  { jjCheckNAdd(1061); }
                  break;
               case 1063:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  { jjCheckNAddTwoStates(1061, 1062); }
                  break;
               case 1064:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  { jjCheckNAddStates(1252, 1254); }
                  break;
               case 1065:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  { jjCheckNAddStates(1255, 1259); }
                  break;
               case 1066:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  { jjCheckNAdd(1058); }
                  break;
               case 1067:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  { jjCheckNAddTwoStates(1066, 1058); }
                  break;
               case 1068:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  { jjCheckNAddStates(1260, 1262); }
                  break;
               case 1069:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  { jjCheckNAddStates(1263, 1266); }
                  break;
               case 1070:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1071;
                  break;
               case 1072:
                  if ((0x7fffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(1273, 1276); }
                  break;
               case 1075:
                  if (curChar == 92)
                     { jjAddStates(1761, 1762); }
                  break;
               case 1076:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(1273, 1276); }
                  break;
               case 1077:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1277, 1286); }
                  break;
               case 1078:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1287, 1291); }
                  break;
               case 1082:
               case 1084:
               case 1087:
               case 1091:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(1078); }
                  break;
               case 1083:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1084;
                  break;
               case 1085:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1086;
                  break;
               case 1086:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1087;
                  break;
               case 1088:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1089;
                  break;
               case 1089:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1090;
                  break;
               case 1090:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1091;
                  break;
               case 1093:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(1292, 1294); }
                  break;
               case 1095:
                  if (curChar == 92)
                     { jjAddStates(1763, 1766); }
                  break;
               case 1099:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(1292, 1294); }
                  break;
               case 1100:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1295, 1304); }
                  break;
               case 1101:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1305, 1309); }
                  break;
               case 1104:
               case 1106:
               case 1109:
               case 1113:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(1101); }
                  break;
               case 1105:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1106;
                  break;
               case 1107:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1108;
                  break;
               case 1108:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1109;
                  break;
               case 1110:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1111;
                  break;
               case 1111:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1112;
                  break;
               case 1112:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1113;
                  break;
               case 1115:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(1310, 1312); }
                  break;
               case 1117:
                  if (curChar == 92)
                     { jjAddStates(1767, 1770); }
                  break;
               case 1121:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(1310, 1312); }
                  break;
               case 1122:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1313, 1322); }
                  break;
               case 1123:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1323, 1327); }
                  break;
               case 1126:
               case 1128:
               case 1131:
               case 1135:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(1123); }
                  break;
               case 1127:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1128;
                  break;
               case 1129:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1130;
                  break;
               case 1130:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1131;
                  break;
               case 1132:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1133;
                  break;
               case 1133:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1134;
                  break;
               case 1134:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1135;
                  break;
               case 1137:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1070;
                  break;
               case 1138:
                  if (curChar == 92)
                     { jjCheckNAddStates(1426, 1429); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 183:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 21)
                        kind = 21;
                     { jjCheckNAddTwoStates(558, 559); }
                  }
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(0, 2); }
                  break;
               case 1228:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 21)
                        kind = 21;
                     { jjCheckNAddTwoStates(558, 559); }
                  }
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(0, 2); }
                  break;
               case 182:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 21)
                        kind = 21;
                     { jjCheckNAddTwoStates(558, 559); }
                  }
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(0, 2); }
                  break;
               case 577:
               case 578:
               case 580:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 113)
                     kind = 113;
                  { jjCheckNAddTwoStates(578, 579); }
                  break;
               case 557:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 21)
                        kind = 21;
                     { jjCheckNAddTwoStates(558, 559); }
                  }
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(0, 2); }
                  break;
               case 184:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 21)
                        kind = 21;
                     { jjCheckNAddTwoStates(558, 559); }
                  }
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(0, 2); }
                  break;
               case 1:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 21)
                     kind = 21;
                  { jjCheckNAddStates(1421, 1425); }
                  break;
               case 2:
               case 8:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(280, 282); }
                  break;
               case 24:
               case 30:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(277, 279); }
                  break;
               case 46:
               case 48:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddTwoStates(46, 47); }
                  break;
               case 68:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1455, 1456); }
                  break;
               case 70:
               case 71:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(71, 72); }
                  break;
               case 523:
               case 524:
               case 526:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 103)
                     kind = 103;
                  { jjCheckNAddTwoStates(524, 525); }
                  break;
               case 558:
               case 560:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 21)
                     kind = 21;
                  { jjCheckNAddTwoStates(558, 559); }
                  break;
               case 610:
               case 614:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(0, 2); }
                  break;
               case 611:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(0, 2); }
                  break;
               case 989:
               case 990:
               case 992:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 115)
                     kind = 115;
                  { jjCheckNAddTwoStates(990, 991); }
                  break;
               case 1072:
               case 1076:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1273, 1276); }
                  break;
               case 1093:
               case 1099:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1292, 1294); }
                  break;
               case 1115:
               case 1121:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1310, 1312); }
                  break;
               default : if (i1 == 0 || l1 == 0 || i2 == 0 ||  l2 == 0) break; else break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 1227 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_1(){
   switch(curChar)
   {
      case 42:
         return jjMoveStringLiteralDfa1_1(0x8L);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa1_1(long active0){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 1;
   }
   switch(curChar)
   {
      case 47:
         if ((active0 & 0x8L) != 0L)
            return jjStopAtPos(1, 3);
         break;
      default :
         return 2;
   }
   return 2;
}

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, "\74\41\55\55", "\55\55\76", "\176\75", "\174\75", 
"\136\75", "\44\75", "\52\75", "\173", "\175", "\50", "\51", "\56", "\73", "\72", "\52", 
"\57", "\55", "\75", "\133", "\135", "\53", "\76", "\176", "\54", null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, };
protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}
static final int[] jjnextStates = {
   611, 612, 613, 519, 520, 523, 542, 514, 515, 518, 506, 507, 513, 499, 500, 505, 
   459, 460, 463, 488, 431, 432, 435, 448, 415, 416, 419, 420, 387, 388, 391, 404, 
   379, 380, 386, 371, 372, 378, 364, 365, 370, 357, 358, 363, 352, 353, 356, 346, 
   347, 351, 340, 341, 345, 334, 335, 339, 328, 329, 333, 322, 323, 327, 316, 317, 
   321, 308, 309, 315, 300, 301, 307, 294, 295, 299, 288, 289, 293, 282, 283, 287, 
   254, 255, 278, 247, 248, 253, 219, 220, 243, 577, 596, 1140, 1141, 1142, 212, 1143, 
   1144, 1145, 216, 1146, 1147, 1148, 220, 1149, 1150, 1151, 248, 253, 1152, 1153, 1154, 255, 
   1155, 1156, 1157, 283, 287, 1158, 1159, 1160, 289, 293, 1161, 1162, 1163, 295, 299, 1164, 
   1165, 1166, 301, 307, 1167, 1168, 1169, 309, 315, 1170, 1171, 1172, 317, 321, 1173, 1174, 
   1175, 323, 327, 1176, 1177, 1178, 329, 333, 1179, 1180, 1181, 335, 339, 1182, 1183, 1184, 
   341, 345, 1185, 1186, 1187, 347, 351, 1188, 1189, 1190, 353, 356, 1191, 1192, 1193, 358, 
   363, 1194, 1195, 1196, 365, 370, 1197, 1198, 1199, 372, 378, 1200, 1201, 1202, 380, 386, 
   1203, 1204, 1205, 388, 391, 1206, 1207, 1208, 416, 419, 1209, 1210, 1211, 432, 435, 1212, 
   1213, 1214, 460, 463, 1215, 1216, 1217, 500, 505, 1218, 1219, 1220, 507, 513, 1221, 1222, 
   1223, 515, 518, 1224, 1225, 1226, 520, 523, 542, 488, 448, 420, 404, 278, 243, 557, 
   576, 610, 630, 644, 211, 215, 219, 247, 254, 282, 288, 294, 300, 308, 316, 322, 
   328, 334, 340, 346, 352, 357, 364, 371, 379, 387, 415, 431, 459, 499, 506, 514, 
   519, 65, 66, 74, 171, 24, 25, 26, 2, 3, 4, 2, 10, 13, 14, 16, 
   19, 11, 12, 3, 4, 2, 11, 12, 3, 4, 24, 32, 35, 36, 38, 41, 
   33, 34, 25, 26, 24, 33, 34, 25, 26, 46, 50, 54, 55, 57, 60, 52, 
   53, 47, 46, 52, 53, 47, 69, 70, 73, 70, 72, 73, 86, 87, 91, 88, 
   89, 92, 93, 91, 88, 89, 91, 88, 89, 92, 102, 99, 100, 103, 104, 102, 
   99, 100, 102, 99, 100, 103, 108, 109, 81, 94, 113, 110, 111, 114, 115, 113, 
   110, 111, 113, 110, 111, 114, 119, 120, 80, 105, 124, 121, 122, 125, 126, 124, 
   121, 122, 124, 121, 122, 125, 130, 131, 79, 116, 135, 132, 133, 136, 137, 135, 
   132, 133, 135, 132, 133, 136, 141, 142, 78, 127, 146, 143, 144, 147, 148, 146, 
   143, 144, 146, 143, 144, 147, 152, 153, 77, 138, 157, 154, 155, 158, 159, 157, 
   154, 155, 157, 154, 155, 158, 168, 165, 166, 169, 170, 168, 165, 166, 168, 165, 
   166, 169, 174, 175, 75, 160, 179, 176, 177, 180, 181, 179, 176, 177, 179, 176, 
   177, 180, 235, 236, 223, 224, 232, 229, 230, 233, 234, 232, 229, 230, 232, 229, 
   230, 233, 240, 237, 238, 241, 242, 240, 237, 238, 240, 237, 238, 241, 245, 246, 
   220, 270, 271, 258, 259, 262, 263, 267, 264, 265, 268, 269, 267, 264, 265, 267, 
   264, 265, 268, 275, 272, 273, 276, 277, 275, 272, 273, 275, 272, 273, 276, 280, 
   281, 255, 390, 391, 404, 396, 397, 401, 398, 399, 402, 403, 401, 398, 399, 401, 
   398, 399, 402, 412, 409, 410, 413, 414, 412, 409, 410, 412, 409, 410, 413, 418, 
   419, 420, 423, 424, 428, 425, 426, 429, 430, 428, 425, 426, 428, 425, 426, 429, 
   434, 435, 448, 445, 442, 443, 446, 447, 445, 442, 443, 445, 442, 443, 446, 451, 
   452, 436, 437, 456, 453, 454, 457, 458, 456, 453, 454, 456, 453, 454, 457, 462, 
   463, 488, 474, 471, 472, 475, 476, 474, 471, 472, 474, 471, 472, 475, 480, 481, 
   465, 466, 485, 482, 483, 486, 487, 485, 482, 483, 485, 482, 483, 486, 496, 493, 
   494, 497, 498, 496, 493, 494, 496, 493, 494, 497, 522, 523, 542, 524, 528, 532, 
   533, 535, 538, 530, 531, 525, 524, 530, 531, 525, 544, 546, 547, 549, 552, 545, 
   531, 524, 525, 545, 531, 524, 525, 558, 562, 566, 567, 569, 572, 564, 565, 559, 
   558, 564, 565, 559, 578, 582, 586, 587, 589, 592, 584, 585, 579, 578, 584, 585, 
   579, 598, 600, 601, 603, 606, 599, 585, 578, 579, 599, 585, 578, 579, 611, 616, 
   620, 621, 623, 626, 618, 619, 612, 613, 611, 618, 619, 612, 613, 632, 634, 635, 
   637, 640, 633, 619, 611, 612, 613, 633, 619, 611, 612, 613, 646, 648, 649, 651, 
   654, 647, 565, 558, 559, 647, 565, 558, 559, 669, 670, 674, 671, 672, 675, 676, 
   674, 671, 672, 674, 671, 672, 675, 680, 681, 665, 666, 685, 682, 683, 686, 687, 
   685, 682, 683, 685, 682, 683, 686, 691, 692, 664, 677, 696, 693, 694, 697, 698, 
   696, 693, 694, 696, 693, 694, 697, 702, 703, 663, 688, 707, 704, 705, 708, 709, 
   707, 704, 705, 707, 704, 705, 708, 718, 715, 716, 719, 720, 718, 715, 716, 718, 
   715, 716, 719, 728, 729, 733, 730, 731, 734, 735, 733, 730, 731, 733, 730, 731, 
   734, 739, 740, 724, 725, 744, 741, 742, 745, 746, 744, 741, 742, 744, 741, 742, 
   745, 750, 751, 723, 736, 755, 752, 753, 756, 757, 755, 752, 753, 755, 752, 753, 
   756, 766, 767, 771, 768, 769, 772, 773, 771, 768, 769, 771, 768, 769, 772, 777, 
   778, 762, 763, 782, 779, 780, 783, 784, 782, 779, 780, 782, 779, 780, 783, 788, 
   789, 761, 774, 793, 790, 791, 794, 795, 793, 790, 791, 793, 790, 791, 794, 799, 
   800, 760, 785, 804, 801, 802, 805, 806, 804, 801, 802, 804, 801, 802, 805, 812, 
   849, 819, 820, 824, 821, 822, 825, 826, 824, 821, 822, 824, 821, 822, 825, 830, 
   831, 815, 816, 835, 832, 833, 836, 837, 835, 832, 833, 835, 832, 833, 836, 841, 
   842, 814, 827, 846, 843, 844, 847, 848, 846, 843, 844, 846, 843, 844, 847, 852, 
   853, 813, 838, 857, 854, 855, 858, 859, 857, 854, 855, 857, 854, 855, 858, 863, 
   864, 811, 868, 865, 866, 869, 870, 868, 865, 866, 868, 865, 866, 869, 879, 876, 
   877, 880, 881, 879, 876, 877, 879, 876, 877, 880, 885, 886, 809, 871, 890, 887, 
   888, 891, 892, 890, 887, 888, 890, 887, 888, 891, 896, 897, 808, 882, 901, 898, 
   899, 902, 903, 901, 898, 899, 901, 898, 899, 902, 914, 915, 919, 916, 917, 920, 
   921, 919, 916, 917, 919, 916, 917, 920, 925, 926, 910, 911, 930, 927, 928, 931, 
   932, 930, 927, 928, 930, 927, 928, 931, 936, 937, 909, 922, 941, 938, 939, 942, 
   943, 941, 938, 939, 941, 938, 939, 942, 947, 948, 908, 933, 952, 949, 950, 953, 
   954, 952, 949, 950, 952, 949, 950, 953, 958, 959, 907, 944, 963, 960, 961, 964, 
   965, 963, 960, 961, 963, 960, 961, 964, 969, 970, 906, 955, 974, 971, 972, 975, 
   976, 974, 971, 972, 974, 971, 972, 975, 980, 981, 905, 966, 985, 982, 983, 986, 
   987, 985, 982, 983, 985, 982, 983, 986, 989, 1008, 990, 994, 998, 999, 1001, 1004, 
   996, 997, 991, 990, 996, 997, 991, 1010, 1012, 1013, 1015, 1018, 1011, 997, 990, 991, 
   1011, 997, 990, 991, 1030, 1027, 1028, 1031, 1032, 1030, 1027, 1028, 1030, 1027, 1028, 1031, 
   1036, 1037, 722, 747, 1041, 1038, 1039, 1042, 1043, 1041, 1038, 1039, 1041, 1038, 1039, 1042, 
   1047, 1048, 661, 710, 1052, 1049, 1050, 1053, 1054, 1052, 1049, 1050, 1052, 1049, 1050, 1053, 
   1061, 1062, 1063, 1064, 1061, 1062, 1063, 1066, 1058, 1067, 1068, 1069, 1066, 1058, 1067, 1066, 
   1058, 1067, 1068, 1072, 1092, 1114, 1074, 1075, 1136, 1072, 1073, 1074, 1075, 1072, 1078, 1082, 
   1083, 1085, 1088, 1080, 1074, 1075, 1081, 1072, 1080, 1074, 1075, 1081, 1093, 1094, 1095, 1093, 
   1101, 1104, 1105, 1107, 1110, 1102, 1103, 1094, 1095, 1093, 1102, 1103, 1094, 1095, 1115, 1116, 
   1117, 1115, 1123, 1126, 1127, 1129, 1132, 1124, 1125, 1116, 1117, 1115, 1124, 1125, 1116, 1117, 
   1072, 1092, 1114, 1073, 1074, 1075, 1136, 1146, 220, 243, 1149, 248, 253, 1152, 255, 278, 
   1155, 283, 287, 1158, 289, 293, 1161, 295, 299, 1164, 301, 307, 1167, 309, 315, 1170, 
   317, 321, 1173, 323, 327, 1176, 329, 333, 1179, 335, 339, 1182, 341, 345, 1185, 347, 
   351, 1188, 353, 356, 1191, 358, 363, 1194, 365, 370, 1197, 372, 378, 1200, 380, 386, 
   1203, 388, 391, 404, 1206, 416, 419, 420, 1209, 432, 435, 448, 1212, 460, 463, 488, 
   1215, 500, 505, 1218, 507, 513, 1221, 515, 518, 1224, 520, 523, 542, 558, 611, 612, 
   613, 559, 560, 614, 631, 645, 660, 721, 758, 807, 893, 904, 977, 988, 989, 1008, 
   1022, 1033, 1044, 1056, 1137, 5, 7, 8, 9, 27, 29, 30, 31, 48, 49, 68, 
   69, 80, 105, 88, 89, 82, 90, 99, 100, 81, 101, 97, 98, 82, 83, 110, 
   111, 112, 121, 122, 79, 123, 132, 133, 78, 134, 143, 144, 77, 145, 154, 155, 
   76, 156, 165, 166, 75, 167, 163, 164, 76, 149, 176, 177, 74, 178, 213, 214, 
   217, 218, 237, 238, 239, 229, 230, 223, 231, 227, 228, 244, 245, 223, 224, 249, 
   250, 272, 273, 274, 264, 265, 258, 266, 279, 280, 258, 259, 284, 285, 290, 291, 
   296, 297, 302, 303, 310, 311, 318, 319, 324, 325, 330, 331, 336, 337, 342, 343, 
   348, 349, 354, 355, 359, 360, 366, 367, 373, 374, 381, 382, 389, 390, 398, 399, 
   392, 400, 409, 410, 391, 411, 407, 408, 392, 393, 417, 418, 425, 426, 419, 427, 
   433, 434, 442, 443, 436, 444, 440, 441, 453, 454, 435, 455, 461, 462, 471, 472, 
   465, 473, 469, 470, 482, 483, 464, 484, 493, 494, 463, 495, 491, 492, 464, 477, 
   501, 502, 508, 509, 516, 517, 521, 522, 671, 672, 665, 673, 682, 683, 664, 684, 
   693, 694, 663, 695, 704, 705, 662, 706, 715, 716, 661, 717, 713, 714, 662, 699, 
   722, 747, 724, 725, 730, 731, 732, 741, 742, 723, 743, 752, 753, 754, 760, 785, 
   762, 763, 768, 769, 770, 779, 780, 761, 781, 790, 791, 792, 801, 802, 803, 813, 
   838, 814, 827, 815, 816, 821, 822, 823, 832, 833, 834, 843, 844, 845, 854, 855, 
   856, 865, 866, 810, 867, 876, 877, 809, 878, 874, 875, 810, 860, 887, 888, 808, 
   889, 898, 899, 900, 906, 955, 909, 922, 916, 917, 910, 918, 927, 928, 929, 938, 
   939, 908, 940, 949, 950, 907, 951, 960, 961, 962, 971, 972, 905, 973, 982, 983, 
   984, 1027, 1028, 758, 1029, 1025, 1026, 759, 796, 1038, 1039, 721, 1040, 1049, 1050, 660, 
   1051, 1076, 1077, 1096, 1098, 1099, 1100, 1118, 1120, 1121, 1122, 
};
private static final boolean jjCanMove_0(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec2[i2] & l2) != 0L);
      default :
         if ((jjbitVec0[i1] & l1) != 0L)
            return true;
         return false;
   }
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(Exception e)
   {
      jjmatchedKind = 0;
      jjmatchedPos = -1;
      matchedToken = jjFillToken();
      return matchedToken;
   }
   image = jjimage;
   image.setLength(0);
   jjimageLen = 0;

   for (;;)
   {
     switch(curLexState)
     {
       case 0:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_0();
         if (jjmatchedPos == 0 && jjmatchedKind > 116)
         {
            jjmatchedKind = 116;
         }
         break;
       case 1:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_1();
         if (jjmatchedPos == 0 && jjmatchedKind > 4)
         {
            jjmatchedKind = 4;
         }
         break;
     }
     if (jjmatchedKind != 0x7fffffff)
     {
        if (jjmatchedPos + 1 < curPos)
           input_stream.backup(curPos - jjmatchedPos - 1);
        if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           matchedToken = jjFillToken();
           TokenLexicalActions(matchedToken);
       if (jjnewLexState[jjmatchedKind] != -1)
         curLexState = jjnewLexState[jjmatchedKind];
           return matchedToken;
        }
        else if ((jjtoSkip[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
         if (jjnewLexState[jjmatchedKind] != -1)
           curLexState = jjnewLexState[jjmatchedKind];
           continue EOFLoop;
        }
        jjimageLen += jjmatchedPos + 1;
      if (jjnewLexState[jjmatchedKind] != -1)
        curLexState = jjnewLexState[jjmatchedKind];
        curPos = 0;
        jjmatchedKind = 0x7fffffff;
        try {
           curChar = input_stream.readChar();
           continue;
        }
        catch (java.io.IOException e1) { }
     }
     int error_line = input_stream.getEndLine();
     int error_column = input_stream.getEndColumn();
     String error_after = null;
     boolean EOFSeen = false;
     try { input_stream.readChar(); input_stream.backup(1); }
     catch (java.io.IOException e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
        if (curChar == '\n' || curChar == '\r') {
           error_line++;
           error_column = 0;
        }
        else
           error_column++;
     }
     if (!EOFSeen) {
        input_stream.backup(1);
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
     }
     throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
   }
  }
}

void SkipLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      default :
         break;
   }
}
void MoreLexicalActions()
{
   jjimageLen += (lengthOfMatch = jjmatchedPos + 1);
   switch(jjmatchedKind)
   {
      default :
         break;
   }
}
void TokenLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      case 24 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                                  matchedToken.image = ParserUtils.trimBy(image, 1, 1);
         break;
      case 77 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                         matchedToken.image = ParserUtils.trimBy(image, 0, 2);
         break;
      case 78 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                         matchedToken.image = ParserUtils.trimBy(image, 0, 3);
         break;
      case 79 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                         matchedToken.image = ParserUtils.trimBy(image, 0, 2);
         break;
      case 80 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                       matchedToken.image = ParserUtils.trimBy(image, 0, 2);
         break;
      case 81 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                       matchedToken.image = ParserUtils.trimBy(image, 0, 2);
         break;
      case 82 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                       matchedToken.image = ParserUtils.trimBy(image, 0, 2);
         break;
      case 83 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                           matchedToken.image = ParserUtils.trimBy(image, 0, 4);
         break;
      case 84 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                           matchedToken.image = ParserUtils.trimBy(image, 0, 4);
         break;
      case 85 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                              matchedToken.image = ParserUtils.trimBy(image, 0, 2);
         break;
      case 86 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                              matchedToken.image = ParserUtils.trimBy(image, 0, 2);
         break;
      case 87 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                              matchedToken.image = ParserUtils.trimBy(image, 0, 2);
         break;
      case 88 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                              matchedToken.image = ParserUtils.trimBy(image, 0, 2);
         break;
      case 89 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                              matchedToken.image = ParserUtils.trimBy(image, 0, 2);
         break;
      case 90 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                              matchedToken.image = ParserUtils.trimBy(image, 0, 2);
         break;
      case 91 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                            matchedToken.image = ParserUtils.trimBy(image, 0, 1);
         break;
      case 92 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                               matchedToken.image = ParserUtils.trimBy(image, 0, 3);
         break;
      case 93 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                               matchedToken.image = ParserUtils.trimBy(image, 0, 3);
         break;
      case 94 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = ParserUtils.trimBy(image, 0, 4);
         break;
      case 95 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = ParserUtils.trimBy(image, 0, 4);
         break;
      case 96 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                             matchedToken.image = ParserUtils.trimBy(image, 0, 2);
         break;
      case 97 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = ParserUtils.trimBy(image, 0, 1);
         break;
      case 98 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                             matchedToken.image = ParserUtils.trimBy(image, 0, 2);
         break;
      case 99 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                         matchedToken.image = ParserUtils.trimBy(image, 0, 3);
         break;
      case 100 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                    matchedToken.image = ParserUtils.trimBy(image, 0, 3);
         break;
      case 101 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                      matchedToken.image = ParserUtils.trimBy(image, 0, 4);
         break;
      case 102 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                              matchedToken.image = ParserUtils.trimBy(image, 0, 1);
         break;
      case 106 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                                            matchedToken.image = ParserUtils.trimUrl(image);
         break;
      default :
         break;
   }
}
private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

    /** Constructor. */
    public CSS3ParserTokenManager(CharStream stream){


    input_stream = stream;
  }

  /** Constructor. */
  public CSS3ParserTokenManager (CharStream stream, int lexState){
    ReInit(stream);
    SwitchTo(lexState);
  }

  /** Reinitialise parser. */
  
  public void ReInit(CharStream stream)
  {


    jjmatchedPos =
    jjnewStateCnt =
    0;
    curLexState = defaultLexState;
    input_stream = stream;
    ReInitRounds();
  }

  private void ReInitRounds()
  {
    int i;
    jjround = 0x80000001;
    for (i = 1227; i-- > 0;)
      jjrounds[i] = 0x80000000;
  }

  /** Reinitialise parser. */
  public void ReInit(CharStream stream, int lexState)
  
  {
    ReInit(stream);
    SwitchTo(lexState);
  }

  /** Switch to specified lex state. */
  public void SwitchTo(int lexState)
  {
    if (lexState >= 2 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
    else
      curLexState = lexState;
  }


/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
   "COMMENT",
};

/** Lex State array. */
public static final int[] jjnewLexState = {
   -1, -1, 1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
};
static final long[] jjtoToken = {
   0xffffc00001bf0003L, 0x3ffeffffffffffL, 
};
static final long[] jjtoSkip = {
   0x8L, 0x0L, 
};
static final long[] jjtoSpecial = {
   0x0L, 0x0L, 
};
static final long[] jjtoMore = {
   0x14L, 0x0L, 
};
    protected CharStream  input_stream;

    private final int[] jjrounds = new int[1227];
    private final int[] jjstateSet = new int[2 * 1227];
    private final StringBuilder jjimage = new StringBuilder();
    private StringBuilder image = jjimage;
    private int jjimageLen;
    private int lengthOfMatch;
    protected int curChar;
}

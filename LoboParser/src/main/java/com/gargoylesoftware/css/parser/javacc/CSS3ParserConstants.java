/* Generated By:JavaCC: Do not edit this line. CSS3ParserConstants.java */
package com.gargoylesoftware.css.parser.javacc;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface CSS3ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int S = 1;
  /** RegularExpression Id. */
  int W = 2;
  /** RegularExpression Id. */
  int H = 6;
  /** RegularExpression Id. */
  int HNUM = 7;
  /** RegularExpression Id. */
  int NONASCII = 8;
  /** RegularExpression Id. */
  int UNICODE = 9;
  /** RegularExpression Id. */
  int ESCAPE = 10;
  /** RegularExpression Id. */
  int NMSTART = 11;
  /** RegularExpression Id. */
  int NMCHAR = 12;
  /** RegularExpression Id. */
  int NL = 13;
  /** RegularExpression Id. */
  int STRING1 = 14;
  /** RegularExpression Id. */
  int STRING2 = 15;
  /** RegularExpression Id. */
  int COMMENT_ = 16;
  /** RegularExpression Id. */
  int AND = 17;
  /** RegularExpression Id. */
  int NOT = 18;
  /** RegularExpression Id. */
  int ONLY = 19;
  /** RegularExpression Id. */
  int NUMBER = 20;
  /** RegularExpression Id. */
  int INHERIT = 21;
  /** RegularExpression Id. */
  int IDENT = 22;
  /** RegularExpression Id. */
  int NAME = 23;
  /** RegularExpression Id. */
  int NUM = 24;
  /** RegularExpression Id. */
  int STRING = 25;
  /** RegularExpression Id. */
  int URL = 26;
  /** RegularExpression Id. */
  int A_LETTER = 27;
  /** RegularExpression Id. */
  int C_LETTER = 28;
  /** RegularExpression Id. */
  int D_LETTER = 29;
  /** RegularExpression Id. */
  int E_LETTER = 30;
  /** RegularExpression Id. */
  int F_LETTER = 31;
  /** RegularExpression Id. */
  int G_LETTER = 32;
  /** RegularExpression Id. */
  int H_LETTER = 33;
  /** RegularExpression Id. */
  int I_LETTER = 34;
  /** RegularExpression Id. */
  int K_LETTER = 35;
  /** RegularExpression Id. */
  int L_LETTER = 36;
  /** RegularExpression Id. */
  int M_LETTER = 37;
  /** RegularExpression Id. */
  int N_LETTER = 38;
  /** RegularExpression Id. */
  int O_LETTER = 39;
  /** RegularExpression Id. */
  int P_LETTER = 40;
  /** RegularExpression Id. */
  int R_LETTER = 41;
  /** RegularExpression Id. */
  int S_LETTER = 42;
  /** RegularExpression Id. */
  int T_LETTER = 43;
  /** RegularExpression Id. */
  int U_LETTER = 44;
  /** RegularExpression Id. */
  int V_LETTER = 45;
  /** RegularExpression Id. */
  int X_LETTER = 46;
  /** RegularExpression Id. */
  int Z_LETTER = 47;
  /** RegularExpression Id. */
  int CDO = 48;
  /** RegularExpression Id. */
  int CDC = 49;
  /** RegularExpression Id. */
  int INCLUDES = 50;
  /** RegularExpression Id. */
  int DASHMATCH = 51;
  /** RegularExpression Id. */
  int PREFIXMATCH = 52;
  /** RegularExpression Id. */
  int SUFFIXMATCH = 53;
  /** RegularExpression Id. */
  int SUBSTRINGMATCH = 54;
  /** RegularExpression Id. */
  int LBRACE = 55;
  /** RegularExpression Id. */
  int RBRACE = 56;
  /** RegularExpression Id. */
  int LROUND = 57;
  /** RegularExpression Id. */
  int RROUND = 58;
  /** RegularExpression Id. */
  int DOT = 59;
  /** RegularExpression Id. */
  int SEMICOLON = 60;
  /** RegularExpression Id. */
  int COLON = 61;
  /** RegularExpression Id. */
  int ASTERISK = 62;
  /** RegularExpression Id. */
  int SLASH = 63;
  /** RegularExpression Id. */
  int MINUS = 64;
  /** RegularExpression Id. */
  int EQUALS = 65;
  /** RegularExpression Id. */
  int LSQUARE = 66;
  /** RegularExpression Id. */
  int RSQUARE = 67;
  /** RegularExpression Id. */
  int PLUS = 68;
  /** RegularExpression Id. */
  int GREATER = 69;
  /** RegularExpression Id. */
  int TILDE = 70;
  /** RegularExpression Id. */
  int COMMA = 71;
  /** RegularExpression Id. */
  int HASH = 72;
  /** RegularExpression Id. */
  int IMPORT_SYM = 73;
  /** RegularExpression Id. */
  int PAGE_SYM = 74;
  /** RegularExpression Id. */
  int MEDIA_SYM = 75;
  /** RegularExpression Id. */
  int FONT_FACE_SYM = 76;
  /** RegularExpression Id. */
  int CHARSET_SYM = 77;
  /** RegularExpression Id. */
  int IMPORTANT_SYM = 78;
  /** RegularExpression Id. */
  int EMS = 79;
  /** RegularExpression Id. */
  int EXS = 80;
  /** RegularExpression Id. */
  int LENGTH_PX = 81;
  /** RegularExpression Id. */
  int LENGTH_CM = 82;
  /** RegularExpression Id. */
  int LENGTH_MM = 83;
  /** RegularExpression Id. */
  int LENGTH_IN = 84;
  /** RegularExpression Id. */
  int LENGTH_PT = 85;
  /** RegularExpression Id. */
  int LENGTH_PC = 86;
  /** RegularExpression Id. */
  int ANGLE_DEG = 87;
  /** RegularExpression Id. */
  int ANGLE_RAD = 88;
  /** RegularExpression Id. */
  int ANGLE_GRAD = 89;
  /** RegularExpression Id. */
  int TIME_MS = 90;
  /** RegularExpression Id. */
  int TIME_S = 91;
  /** RegularExpression Id. */
  int FREQ_HZ = 92;
  /** RegularExpression Id. */
  int FREQ_KHZ = 93;
  /** RegularExpression Id. */
  int RESOLUTION_DPI = 94;
  /** RegularExpression Id. */
  int RESOLUTION_DPCM = 95;
  /** RegularExpression Id. */
  int PERCENTAGE = 96;
  /** RegularExpression Id. */
  int DIMENSION = 97;
  /** RegularExpression Id. */
  int H_PLACEHOLDER = 98;
  /** RegularExpression Id. */
  int UNICODE_RANGE = 99;
  /** RegularExpression Id. */
  int URI = 100;
  /** RegularExpression Id. */
  int FUNCTION_NOT = 101;
  /** RegularExpression Id. */
  int FUNCTION_LANG = 102;
  /** RegularExpression Id. */
  int FUNCTION = 103;
  /** RegularExpression Id. */
  int ATKEYWORD = 104;
  /** RegularExpression Id. */
  int UNKNOWN = 105;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int COMMENT = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<S>",
    "<W>",
    "\"/*\"",
    "\"*/\"",
    "<token of kind 5>",
    "<H>",
    "<HNUM>",
    "<NONASCII>",
    "<UNICODE>",
    "<ESCAPE>",
    "<NMSTART>",
    "<NMCHAR>",
    "<NL>",
    "<STRING1>",
    "<STRING2>",
    "<COMMENT_>",
    "\"and\"",
    "\"not\"",
    "\"only\"",
    "<NUMBER>",
    "\"inherit\"",
    "<IDENT>",
    "<NAME>",
    "<NUM>",
    "<STRING>",
    "<URL>",
    "<A_LETTER>",
    "<C_LETTER>",
    "<D_LETTER>",
    "<E_LETTER>",
    "<F_LETTER>",
    "<G_LETTER>",
    "<H_LETTER>",
    "<I_LETTER>",
    "<K_LETTER>",
    "<L_LETTER>",
    "<M_LETTER>",
    "<N_LETTER>",
    "<O_LETTER>",
    "<P_LETTER>",
    "<R_LETTER>",
    "<S_LETTER>",
    "<T_LETTER>",
    "<U_LETTER>",
    "<V_LETTER>",
    "<X_LETTER>",
    "<Z_LETTER>",
    "\"<!--\"",
    "\"-->\"",
    "\"~=\"",
    "\"|=\"",
    "\"^=\"",
    "\"$=\"",
    "\"*=\"",
    "<LBRACE>",
    "\"}\"",
    "\"(\"",
    "\")\"",
    "\".\"",
    "\";\"",
    "\":\"",
    "\"*\"",
    "\"/\"",
    "\"-\"",
    "\"=\"",
    "\"[\"",
    "\"]\"",
    "<PLUS>",
    "<GREATER>",
    "\"~\"",
    "<COMMA>",
    "<HASH>",
    "<IMPORT_SYM>",
    "<PAGE_SYM>",
    "<MEDIA_SYM>",
    "<FONT_FACE_SYM>",
    "<CHARSET_SYM>",
    "<IMPORTANT_SYM>",
    "<EMS>",
    "<EXS>",
    "<LENGTH_PX>",
    "<LENGTH_CM>",
    "<LENGTH_MM>",
    "<LENGTH_IN>",
    "<LENGTH_PT>",
    "<LENGTH_PC>",
    "<ANGLE_DEG>",
    "<ANGLE_RAD>",
    "<ANGLE_GRAD>",
    "<TIME_MS>",
    "<TIME_S>",
    "<FREQ_HZ>",
    "<FREQ_KHZ>",
    "<RESOLUTION_DPI>",
    "<RESOLUTION_DPCM>",
    "<PERCENTAGE>",
    "<DIMENSION>",
    "<H_PLACEHOLDER>",
    "<UNICODE_RANGE>",
    "<URI>",
    "<FUNCTION_NOT>",
    "<FUNCTION_LANG>",
    "<FUNCTION>",
    "<ATKEYWORD>",
    "<UNKNOWN>",
    "\"progid:\"",
  };

}

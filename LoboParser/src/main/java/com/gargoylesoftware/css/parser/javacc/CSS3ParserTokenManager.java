/* CSS3ParserTokenManager.java */
/* Generated By:JavaCC: Do not edit this line. CSS3ParserTokenManager.java */
package com.gargoylesoftware.css.parser.javacc;
import java.util.LinkedList;
import java.util.Locale;
import com.gargoylesoftware.css.dom.CSSValueImpl;
import com.gargoylesoftware.css.dom.Property;
import com.gargoylesoftware.css.parser.AbstractCSSParser;
import com.gargoylesoftware.css.parser.CSSParseException;
import com.gargoylesoftware.css.parser.LexicalUnit;
import com.gargoylesoftware.css.parser.LexicalUnitImpl;
import com.gargoylesoftware.css.parser.LexicalUnit.LexicalUnitType;
import com.gargoylesoftware.css.parser.Locatable;
import com.gargoylesoftware.css.parser.Locator;
import com.gargoylesoftware.css.parser.ParserUtils;
import com.gargoylesoftware.css.parser.condition.AttributeCondition;
import com.gargoylesoftware.css.parser.condition.BeginHyphenAttributeCondition;
import com.gargoylesoftware.css.parser.condition.ClassCondition;
import com.gargoylesoftware.css.parser.condition.Condition;
import com.gargoylesoftware.css.parser.condition.IdCondition;
import com.gargoylesoftware.css.parser.condition.LangCondition;
import com.gargoylesoftware.css.parser.condition.NotPseudoClassCondition;
import com.gargoylesoftware.css.parser.condition.OneOfAttributeCondition;
import com.gargoylesoftware.css.parser.condition.PrefixAttributeCondition;
import com.gargoylesoftware.css.parser.condition.PseudoClassCondition;
import com.gargoylesoftware.css.parser.condition.SubstringAttributeCondition;
import com.gargoylesoftware.css.parser.condition.SuffixAttributeCondition;
import com.gargoylesoftware.css.parser.media.MediaQuery;
import com.gargoylesoftware.css.parser.media.MediaQueryList;
import com.gargoylesoftware.css.parser.selector.ChildSelector;
import com.gargoylesoftware.css.parser.selector.DescendantSelector;
import com.gargoylesoftware.css.parser.selector.DirectAdjacentSelector;
import com.gargoylesoftware.css.parser.selector.ElementSelector;
import com.gargoylesoftware.css.parser.selector.GeneralAdjacentSelector;
import com.gargoylesoftware.css.parser.selector.PseudoElementSelector;
import com.gargoylesoftware.css.parser.selector.Selector;
import com.gargoylesoftware.css.parser.selector.SelectorList;
import com.gargoylesoftware.css.parser.selector.SelectorListImpl;
import com.gargoylesoftware.css.parser.selector.SimpleSelector;
import com.gargoylesoftware.css.util.LangUtils;

/** Token Manager. */
@SuppressWarnings ("unused")
public class CSS3ParserTokenManager implements CSS3ParserConstants {

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_0(int pos, long active0, long active1){
   switch (pos)
   {
      case 0:
         if ((active0 & 0x400000000000000L) != 0L)
            return 1237;
         if ((active0 & 0x2a0000L) != 0L || (active1 & 0x40000000000000L) != 0L)
         {
            jjmatchedKind = 22;
            jjmatchedPos = 0;
            return 1238;
         }
         if ((active0 & 0x8001000000000000L) != 0L)
            return 567;
         if ((active0 & 0x40000L) != 0L)
         {
            jjmatchedKind = 22;
            jjmatchedPos = 0;
            return 187;
         }
         return -1;
      case 1:
         if ((active0 & 0x2a0000L) != 0L || (active1 & 0x40000000000000L) != 0L)
         {
            jjmatchedKind = 22;
            jjmatchedPos = 1;
            return 1238;
         }
         if ((active0 & 0x40000L) != 0L)
         {
            jjmatchedKind = 22;
            jjmatchedPos = 1;
            return 185;
         }
         if ((active0 & 0x1000000000000L) != 0L)
            return 587;
         return -1;
      case 2:
         if ((active0 & 0x20000L) != 0L)
            return 1238;
         if ((active0 & 0x40000L) != 0L)
            return 186;
         if ((active0 & 0x280000L) != 0L || (active1 & 0x40000000000000L) != 0L)
         {
            jjmatchedKind = 22;
            jjmatchedPos = 2;
            return 1238;
         }
         return -1;
      case 3:
         if ((active0 & 0x80000L) != 0L)
            return 1238;
         if ((active0 & 0x200000L) != 0L || (active1 & 0x40000000000000L) != 0L)
         {
            jjmatchedKind = 22;
            jjmatchedPos = 3;
            return 1238;
         }
         return -1;
      case 4:
         if ((active0 & 0x200000L) != 0L || (active1 & 0x40000000000000L) != 0L)
         {
            jjmatchedKind = 22;
            jjmatchedPos = 4;
            return 1238;
         }
         return -1;
      case 5:
         if ((active0 & 0x200000L) != 0L || (active1 & 0x40000000000000L) != 0L)
         {
            jjmatchedKind = 22;
            jjmatchedPos = 5;
            return 1238;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0, long active1){
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0, active1), pos + 1);
}
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_0(){
   switch(curChar)
   {
      case 36:
         return jjMoveStringLiteralDfa1_0(0x10000000000000L, 0x0L);
      case 40:
         return jjStopAtPos(0, 56);
      case 41:
         return jjStopAtPos(0, 57);
      case 42:
         {
         jjmatchedKind = 61;
         jjmatchedPos = 0;
         }
         return jjMoveStringLiteralDfa1_0(0x20000000000000L, 0x0L);
      case 45:
         {
         jjmatchedKind = 63;
         jjmatchedPos = 0;
         }
         return jjMoveStringLiteralDfa1_0(0x1000000000000L, 0x0L);
      case 46:
         return jjStartNfaWithStates_0(0, 58, 1237);
      case 47:
         {
         jjmatchedKind = 62;
         jjmatchedPos = 0;
         }
         return jjMoveStringLiteralDfa1_0(0x8L, 0x0L);
      case 58:
         return jjStopAtPos(0, 60);
      case 59:
         return jjStopAtPos(0, 59);
      case 60:
         return jjMoveStringLiteralDfa1_0(0x800000000000L, 0x0L);
      case 61:
         return jjStopAtPos(0, 64);
      case 91:
         return jjStopAtPos(0, 65);
      case 93:
         return jjStopAtPos(0, 66);
      case 94:
         return jjMoveStringLiteralDfa1_0(0x8000000000000L, 0x0L);
      case 65:
      case 97:
         return jjMoveStringLiteralDfa1_0(0x20000L, 0x0L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa1_0(0x200000L, 0x0L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa1_0(0x40000L, 0x0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa1_0(0x80000L, 0x0L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x40000000000000L);
      case 124:
         return jjMoveStringLiteralDfa1_0(0x4000000000000L, 0x0L);
      case 125:
         return jjStopAtPos(0, 55);
      case 126:
         {
         jjmatchedKind = 69;
         jjmatchedPos = 0;
         }
         return jjMoveStringLiteralDfa1_0(0x2000000000000L, 0x0L);
      default :
         return jjMoveNfa_0(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_0(long active0, long active1){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0, active1);
      return 1;
   }
   switch(curChar)
   {
      case 33:
         return jjMoveStringLiteralDfa2_0(active0, 0x800000000000L, active1, 0L);
      case 42:
         if ((active0 & 0x8L) != 0L)
            return jjStopAtPos(1, 3);
         break;
      case 45:
         return jjMoveStringLiteralDfa2_0(active0, 0x1000000000000L, active1, 0L);
      case 61:
         if ((active0 & 0x2000000000000L) != 0L)
            return jjStopAtPos(1, 49);
         else if ((active0 & 0x4000000000000L) != 0L)
            return jjStopAtPos(1, 50);
         else if ((active0 & 0x8000000000000L) != 0L)
            return jjStopAtPos(1, 51);
         else if ((active0 & 0x10000000000000L) != 0L)
            return jjStopAtPos(1, 52);
         else if ((active0 & 0x20000000000000L) != 0L)
            return jjStopAtPos(1, 53);
         break;
      case 78:
      case 110:
         return jjMoveStringLiteralDfa2_0(active0, 0x2a0000L, active1, 0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa2_0(active0, 0x40000L, active1, 0L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x40000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(0, active0, active1);
}
private int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(0, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0, active1);
      return 2;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa3_0(active0, 0x800000000000L, active1, 0L);
      case 62:
         if ((active0 & 0x1000000000000L) != 0L)
            return jjStopAtPos(2, 48);
         break;
      case 68:
      case 100:
         if ((active0 & 0x20000L) != 0L)
            return jjStartNfaWithStates_0(2, 17, 1238);
         break;
      case 72:
      case 104:
         return jjMoveStringLiteralDfa3_0(active0, 0x200000L, active1, 0L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa3_0(active0, 0x80000L, active1, 0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x40000000000000L);
      case 84:
      case 116:
         if ((active0 & 0x40000L) != 0L)
            return jjStartNfaWithStates_0(2, 18, 186);
         break;
      default :
         break;
   }
   return jjStartNfa_0(1, active0, active1);
}
private int jjMoveStringLiteralDfa3_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(1, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0, active1);
      return 3;
   }
   switch(curChar)
   {
      case 45:
         if ((active0 & 0x800000000000L) != 0L)
            return jjStopAtPos(3, 47);
         break;
      case 69:
      case 101:
         return jjMoveStringLiteralDfa4_0(active0, 0x200000L, active1, 0L);
      case 71:
      case 103:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x40000000000000L);
      case 89:
      case 121:
         if ((active0 & 0x80000L) != 0L)
            return jjStartNfaWithStates_0(3, 19, 1238);
         break;
      default :
         break;
   }
   return jjStartNfa_0(2, active0, active1);
}
private int jjMoveStringLiteralDfa4_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(2, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(3, active0, active1);
      return 4;
   }
   switch(curChar)
   {
      case 73:
      case 105:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x40000000000000L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa5_0(active0, 0x200000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(3, active0, active1);
}
private int jjMoveStringLiteralDfa5_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(3, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(4, active0, active1);
      return 5;
   }
   switch(curChar)
   {
      case 68:
      case 100:
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x40000000000000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa6_0(active0, 0x200000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(4, active0, active1);
}
private int jjMoveStringLiteralDfa6_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(4, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(5, active0, active1);
      return 6;
   }
   switch(curChar)
   {
      case 58:
         if ((active1 & 0x40000000000000L) != 0L)
            return jjStopAtPos(6, 118);
         break;
      case 84:
      case 116:
         if ((active0 & 0x200000L) != 0L)
            return jjStartNfaWithStates_0(6, 21, 1238);
         break;
      default :
         break;
   }
   return jjStartNfa_0(5, active0, active1);
}
private int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
static final long[] jjbitVec0 = {
   0xfffffffffffffffeL, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec2 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 1237;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 185:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(0, 2); }
                  else if (curChar == 40)
                  {
                     if (kind > 115)
                        kind = 115;
                  }
                  if ((0x3ff200000000000L & l) != 0L)
                  {
                     if (kind > 22)
                        kind = 22;
                     { jjCheckNAddTwoStates(568, 569); }
                  }
                  break;
               case 1237:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 6); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(7, 9); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(10, 12); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(13, 15); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(16, 19); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(20, 23); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(24, 27); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(28, 31); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(32, 34); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(35, 37); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(38, 40); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(41, 43); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(44, 46); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(47, 49); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(50, 52); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(53, 55); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(56, 58); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(59, 61); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(62, 64); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(65, 67); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(68, 70); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(71, 73); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(74, 76); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(77, 79); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(80, 82); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(83, 85); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(86, 88); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 24)
                        kind = 24;
                     { jjCheckNAddTwoStates(225, 226); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 20)
                        kind = 20;
                     { jjCheckNAddTwoStates(221, 222); }
                  }
                  break;
               case 0:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 20)
                        kind = 20;
                     { jjCheckNAddStates(89, 236); }
                  }
                  else if ((0x100003600L & l) != 0L)
                  {
                     if (kind > 1)
                        kind = 1;
                     { jjCheckNAddStates(237, 246); }
                  }
                  else if (curChar == 45)
                     { jjAddStates(247, 251); }
                  else if (curChar == 46)
                     { jjCheckNAddStates(252, 280); }
                  else if (curChar == 33)
                     { jjCheckNAddStates(281, 284); }
                  else if (curChar == 35)
                     { jjCheckNAddTwoStates(49, 50); }
                  else if (curChar == 44)
                  {
                     if (kind > 70)
                        kind = 70;
                  }
                  else if (curChar == 62)
                  {
                     if (kind > 68)
                        kind = 68;
                  }
                  else if (curChar == 43)
                  {
                     if (kind > 67)
                        kind = 67;
                  }
                  else if (curChar == 39)
                     { jjCheckNAddStates(285, 287); }
                  else if (curChar == 34)
                     { jjCheckNAddStates(288, 290); }
                  break;
               case 1238:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(0, 2); }
                  else if (curChar == 40)
                  {
                     if (kind > 115)
                        kind = 115;
                  }
                  if ((0x3ff200000000000L & l) != 0L)
                  {
                     if (kind > 22)
                        kind = 22;
                     { jjCheckNAddTwoStates(568, 569); }
                  }
                  break;
               case 187:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(0, 2); }
                  else if (curChar == 40)
                  {
                     if (kind > 115)
                        kind = 115;
                  }
                  if ((0x3ff200000000000L & l) != 0L)
                  {
                     if (kind > 22)
                        kind = 22;
                     { jjCheckNAddTwoStates(568, 569); }
                  }
                  break;
               case 186:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(0, 2); }
                  else if (curChar == 40)
                  {
                     if (kind > 115)
                        kind = 115;
                  }
                  if ((0x3ff200000000000L & l) != 0L)
                  {
                     if (kind > 22)
                        kind = 22;
                     { jjCheckNAddTwoStates(568, 569); }
                  }
                  else if (curChar == 40)
                  {
                     if (kind > 108)
                        kind = 108;
                  }
                  break;
               case 567:
                  if (curChar == 45)
                     { jjAddStates(291, 292); }
                  break;
               case 1:
                  if ((0xfffffffbffffcbffL & l) != 0L)
                     { jjCheckNAddStates(288, 290); }
                  break;
               case 2:
                  if (curChar == 34 && kind > 25)
                     kind = 25;
                  break;
               case 4:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(288, 290); }
                  break;
               case 5:
                  if (curChar == 10)
                     { jjCheckNAddStates(288, 290); }
                  break;
               case 6:
               case 10:
                  if (curChar == 13)
                     { jjCheckNAdd(5); }
                  break;
               case 7:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(288, 290); }
                  break;
               case 8:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(293, 302); }
                  break;
               case 9:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(303, 307); }
                  break;
               case 11:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(288, 290); }
                  break;
               case 12:
               case 14:
               case 17:
               case 21:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(9); }
                  break;
               case 13:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 15:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 16:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 18:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 19:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 20:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 22:
                  if (curChar == 39)
                     { jjCheckNAddStates(285, 287); }
                  break;
               case 23:
                  if ((0xffffff7fffffcbffL & l) != 0L)
                     { jjCheckNAddStates(285, 287); }
                  break;
               case 24:
                  if (curChar == 39 && kind > 25)
                     kind = 25;
                  break;
               case 26:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(285, 287); }
                  break;
               case 27:
                  if (curChar == 10)
                     { jjCheckNAddStates(285, 287); }
                  break;
               case 28:
               case 32:
                  if (curChar == 13)
                     { jjCheckNAdd(27); }
                  break;
               case 29:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(285, 287); }
                  break;
               case 30:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(308, 317); }
                  break;
               case 31:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(318, 322); }
                  break;
               case 33:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(285, 287); }
                  break;
               case 34:
               case 36:
               case 39:
               case 43:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(31); }
                  break;
               case 35:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 36;
                  break;
               case 37:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 38;
                  break;
               case 38:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 39;
                  break;
               case 40:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 41:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 42;
                  break;
               case 42:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 43;
                  break;
               case 45:
                  if (curChar == 43 && kind > 67)
                     kind = 67;
                  break;
               case 46:
                  if (curChar == 62 && kind > 68)
                     kind = 68;
                  break;
               case 47:
                  if (curChar == 44 && kind > 70)
                     kind = 70;
                  break;
               case 48:
                  if (curChar == 35)
                     { jjCheckNAddTwoStates(49, 50); }
                  break;
               case 49:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  { jjCheckNAddTwoStates(49, 50); }
                  break;
               case 51:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  { jjCheckNAddTwoStates(49, 50); }
                  break;
               case 52:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  { jjCheckNAddStates(323, 331); }
                  break;
               case 53:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  { jjCheckNAddStates(332, 335); }
                  break;
               case 54:
                  if (curChar != 10)
                     break;
                  if (kind > 71)
                     kind = 71;
                  { jjCheckNAddTwoStates(49, 50); }
                  break;
               case 55:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 54;
                  break;
               case 56:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  { jjCheckNAddTwoStates(49, 50); }
                  break;
               case 57:
               case 59:
               case 62:
               case 66:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(53); }
                  break;
               case 58:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 59;
                  break;
               case 60:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 61;
                  break;
               case 61:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 62;
                  break;
               case 63:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 64;
                  break;
               case 64:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 65;
                  break;
               case 65:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 66;
                  break;
               case 67:
                  if (curChar == 33)
                     { jjCheckNAddStates(281, 284); }
                  break;
               case 68:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(281, 284); }
                  break;
               case 69:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 70;
                  break;
               case 70:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(71, 72); }
                  break;
               case 71:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(71, 72); }
                  break;
               case 72:
                  if (curChar == 42)
                     { jjCheckNAddStates(336, 338); }
                  break;
               case 73:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(74, 75); }
                  break;
               case 74:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(74, 75); }
                  break;
               case 75:
                  if (curChar == 42)
                     { jjCheckNAddStates(339, 341); }
                  break;
               case 76:
                  if (curChar == 47)
                     { jjCheckNAddStates(281, 284); }
                  break;
               case 87:
                  if (curChar != 52)
                     break;
                  if (kind > 77)
                     kind = 77;
                  { jjAddStates(342, 343); }
                  break;
               case 88:
                  if (curChar == 10 && kind > 77)
                     kind = 77;
                  break;
               case 89:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 88;
                  break;
               case 90:
                  if ((0x100003600L & l) != 0L && kind > 77)
                     kind = 77;
                  break;
               case 91:
                  if (curChar == 53)
                     { jjCheckNAdd(87); }
                  break;
               case 92:
                  if (curChar == 55)
                     { jjCheckNAdd(87); }
                  break;
               case 93:
                  if (curChar == 48)
                     { jjCheckNAddStates(344, 348); }
                  break;
               case 94:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(91, 92); }
                  break;
               case 95:
                  if (curChar == 48)
                     { jjCheckNAddStates(349, 351); }
                  break;
               case 96:
                  if (curChar == 48)
                     { jjCheckNAddStates(352, 355); }
                  break;
               case 99:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(85, 86); }
                  break;
               case 100:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 99;
                  break;
               case 101:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(85, 86); }
                  break;
               case 102:
                  if (curChar == 52)
                     { jjCheckNAdd(98); }
                  break;
               case 103:
                  if (curChar == 54)
                     { jjCheckNAdd(98); }
                  break;
               case 104:
                  if (curChar == 48)
                     { jjCheckNAddStates(356, 360); }
                  break;
               case 105:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(102, 103); }
                  break;
               case 106:
                  if (curChar == 48)
                     { jjCheckNAddStates(361, 363); }
                  break;
               case 107:
                  if (curChar == 48)
                     { jjCheckNAddStates(364, 367); }
                  break;
               case 109:
                  if (curChar == 49)
                     { jjCheckNAddStates(368, 371); }
                  break;
               case 110:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(84, 97); }
                  break;
               case 111:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 110;
                  break;
               case 112:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(84, 97); }
                  break;
               case 113:
                  if (curChar == 52)
                     { jjCheckNAdd(109); }
                  break;
               case 114:
                  if (curChar == 54)
                     { jjCheckNAdd(109); }
                  break;
               case 115:
                  if (curChar == 48)
                     { jjCheckNAddStates(372, 376); }
                  break;
               case 116:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(113, 114); }
                  break;
               case 117:
                  if (curChar == 48)
                     { jjCheckNAddStates(377, 379); }
                  break;
               case 118:
                  if (curChar == 48)
                     { jjCheckNAddStates(380, 383); }
                  break;
               case 120:
                  if (curChar == 52)
                     { jjCheckNAddStates(384, 387); }
                  break;
               case 121:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(83, 108); }
                  break;
               case 122:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 121;
                  break;
               case 123:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(83, 108); }
                  break;
               case 124:
                  if (curChar == 53)
                     { jjCheckNAdd(120); }
                  break;
               case 125:
                  if (curChar == 55)
                     { jjCheckNAdd(120); }
                  break;
               case 126:
                  if (curChar == 48)
                     { jjCheckNAddStates(388, 392); }
                  break;
               case 127:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(124, 125); }
                  break;
               case 128:
                  if (curChar == 48)
                     { jjCheckNAddStates(393, 395); }
                  break;
               case 129:
                  if (curChar == 48)
                     { jjCheckNAddStates(396, 399); }
                  break;
               case 131:
                  if (curChar == 50)
                     { jjCheckNAddStates(400, 403); }
                  break;
               case 132:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(82, 119); }
                  break;
               case 133:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 132;
                  break;
               case 134:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(82, 119); }
                  break;
               case 135:
                  if (curChar == 53)
                     { jjCheckNAdd(131); }
                  break;
               case 136:
                  if (curChar == 55)
                     { jjCheckNAdd(131); }
                  break;
               case 137:
                  if (curChar == 48)
                     { jjCheckNAddStates(404, 408); }
                  break;
               case 138:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(135, 136); }
                  break;
               case 139:
                  if (curChar == 48)
                     { jjCheckNAddStates(409, 411); }
                  break;
               case 140:
                  if (curChar == 48)
                     { jjCheckNAddStates(412, 415); }
                  break;
               case 142:
                  if (curChar == 49)
                     { jjCheckNAddStates(416, 419); }
                  break;
               case 143:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(81, 130); }
                  break;
               case 144:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 143;
                  break;
               case 145:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(81, 130); }
                  break;
               case 146:
                  if (curChar == 53)
                     { jjCheckNAdd(142); }
                  break;
               case 147:
                  if (curChar == 55)
                     { jjCheckNAdd(142); }
                  break;
               case 148:
                  if (curChar == 48)
                     { jjCheckNAddStates(420, 424); }
                  break;
               case 149:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(146, 147); }
                  break;
               case 150:
                  if (curChar == 48)
                     { jjCheckNAddStates(425, 427); }
                  break;
               case 151:
                  if (curChar == 48)
                     { jjCheckNAddStates(428, 431); }
                  break;
               case 153:
                  if (curChar == 48)
                     { jjCheckNAddStates(432, 435); }
                  break;
               case 154:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(80, 141); }
                  break;
               case 155:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 154;
                  break;
               case 156:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(80, 141); }
                  break;
               case 157:
                  if (curChar == 53)
                     { jjCheckNAdd(153); }
                  break;
               case 158:
                  if (curChar == 55)
                     { jjCheckNAdd(153); }
                  break;
               case 159:
                  if (curChar == 48)
                     { jjCheckNAddStates(436, 440); }
                  break;
               case 160:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(157, 158); }
                  break;
               case 161:
                  if (curChar == 48)
                     { jjCheckNAddStates(441, 443); }
                  break;
               case 162:
                  if (curChar == 48)
                     { jjCheckNAddStates(444, 447); }
                  break;
               case 165:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(79, 152); }
                  break;
               case 166:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 165;
                  break;
               case 167:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(79, 152); }
                  break;
               case 168:
                  if (curChar == 52)
                     { jjCheckNAdd(164); }
                  break;
               case 169:
                  if (curChar == 54)
                     { jjCheckNAdd(164); }
                  break;
               case 170:
                  if (curChar == 48)
                     { jjCheckNAddStates(448, 452); }
                  break;
               case 171:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(168, 169); }
                  break;
               case 172:
                  if (curChar == 48)
                     { jjCheckNAddStates(453, 455); }
                  break;
               case 173:
                  if (curChar == 48)
                     { jjCheckNAddStates(456, 459); }
                  break;
               case 175:
                  if (curChar == 57)
                     { jjCheckNAddStates(460, 463); }
                  break;
               case 176:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(78, 163); }
                  break;
               case 177:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 176;
                  break;
               case 178:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(78, 163); }
                  break;
               case 179:
                  if (curChar == 52)
                     { jjCheckNAdd(175); }
                  break;
               case 180:
                  if (curChar == 54)
                     { jjCheckNAdd(175); }
                  break;
               case 181:
                  if (curChar == 48)
                     { jjCheckNAddStates(464, 468); }
                  break;
               case 182:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(179, 180); }
                  break;
               case 183:
                  if (curChar == 48)
                     { jjCheckNAddStates(469, 471); }
                  break;
               case 184:
                  if (curChar == 48)
                     { jjCheckNAddStates(472, 475); }
                  break;
               case 190:
                  if (curChar == 40 && kind > 109)
                     kind = 109;
                  break;
               case 195:
                  if (curChar == 40 && kind > 110)
                     kind = 110;
                  break;
               case 200:
                  if (curChar == 40 && kind > 111)
                     kind = 111;
                  break;
               case 205:
                  if (curChar == 40 && kind > 112)
                     kind = 112;
                  break;
               case 210:
                  if (curChar == 40 && kind > 113)
                     kind = 113;
                  break;
               case 213:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 1)
                     kind = 1;
                  { jjCheckNAddStates(237, 246); }
                  break;
               case 214:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 1)
                     kind = 1;
                  { jjCheckNAdd(214); }
                  break;
               case 215:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 2)
                     kind = 2;
                  { jjCheckNAdd(215); }
                  break;
               case 216:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(216, 44); }
                  break;
               case 217:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(217, 45); }
                  break;
               case 218:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(218, 46); }
                  break;
               case 219:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(219, 47); }
                  break;
               case 220:
                  if (curChar == 46)
                     { jjCheckNAddStates(252, 280); }
                  break;
               case 221:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 20)
                     kind = 20;
                  { jjCheckNAddTwoStates(221, 222); }
                  break;
               case 223:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(224); }
                  break;
               case 224:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 20)
                     kind = 20;
                  { jjCheckNAdd(224); }
                  break;
               case 225:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 24)
                     kind = 24;
                  { jjCheckNAddTwoStates(225, 226); }
                  break;
               case 227:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(228); }
                  break;
               case 228:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 24)
                     kind = 24;
                  { jjCheckNAdd(228); }
                  break;
               case 229:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(86, 88); }
                  break;
               case 231:
                  if (curChar == 53)
                     { jjCheckNAddStates(476, 479); }
                  break;
               case 232:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(233, 234); }
                  break;
               case 236:
                  if (curChar == 10 && kind > 78)
                     kind = 78;
                  break;
               case 237:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 236;
                  break;
               case 238:
                  if ((0x100003600L & l) != 0L && kind > 78)
                     kind = 78;
                  break;
               case 239:
                  if (curChar == 52)
                     { jjCheckNAdd(235); }
                  break;
               case 240:
                  if (curChar == 54)
                     { jjCheckNAdd(235); }
                  break;
               case 241:
                  if (curChar == 48)
                     { jjCheckNAddStates(480, 484); }
                  break;
               case 242:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(239, 240); }
                  break;
               case 243:
                  if (curChar == 48)
                     { jjCheckNAddStates(485, 487); }
                  break;
               case 244:
                  if (curChar == 48)
                     { jjCheckNAddStates(488, 491); }
                  break;
               case 245:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 232;
                  break;
               case 246:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(233, 234); }
                  break;
               case 247:
                  if (curChar == 52)
                     { jjCheckNAdd(231); }
                  break;
               case 248:
                  if (curChar == 54)
                     { jjCheckNAdd(231); }
                  break;
               case 249:
                  if (curChar == 48)
                     { jjCheckNAddStates(492, 496); }
                  break;
               case 250:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(247, 248); }
                  break;
               case 251:
                  if (curChar == 48)
                     { jjCheckNAddStates(497, 499); }
                  break;
               case 252:
                  if (curChar == 48)
                     { jjCheckNAddStates(500, 503); }
                  break;
               case 254:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(255); }
                  break;
               case 255:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(504, 506); }
                  break;
               case 257:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(83, 85); }
                  break;
               case 259:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(260); }
                  break;
               case 260:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(260, 263); }
                  break;
               case 264:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(80, 82); }
                  break;
               case 266:
                  if (curChar == 53)
                     { jjCheckNAddStates(507, 510); }
                  break;
               case 267:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(268, 269); }
                  break;
               case 270:
                  if (curChar != 56)
                     break;
                  if (kind > 80)
                     kind = 80;
                  { jjAddStates(511, 512); }
                  break;
               case 271:
                  if (curChar == 10 && kind > 80)
                     kind = 80;
                  break;
               case 272:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 271;
                  break;
               case 273:
                  if ((0x100003600L & l) != 0L && kind > 80)
                     kind = 80;
                  break;
               case 274:
                  if (curChar == 53)
                     { jjCheckNAdd(270); }
                  break;
               case 275:
                  if (curChar == 55)
                     { jjCheckNAdd(270); }
                  break;
               case 276:
                  if (curChar == 48)
                     { jjCheckNAddStates(513, 517); }
                  break;
               case 277:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(274, 275); }
                  break;
               case 278:
                  if (curChar == 48)
                     { jjCheckNAddStates(518, 520); }
                  break;
               case 279:
                  if (curChar == 48)
                     { jjCheckNAddStates(521, 524); }
                  break;
               case 280:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 267;
                  break;
               case 281:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(268, 269); }
                  break;
               case 282:
                  if (curChar == 52)
                     { jjCheckNAdd(266); }
                  break;
               case 283:
                  if (curChar == 54)
                     { jjCheckNAdd(266); }
                  break;
               case 284:
                  if (curChar == 48)
                     { jjCheckNAddStates(525, 529); }
                  break;
               case 285:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(282, 283); }
                  break;
               case 286:
                  if (curChar == 48)
                     { jjCheckNAddStates(530, 532); }
                  break;
               case 287:
                  if (curChar == 48)
                     { jjCheckNAddStates(533, 536); }
                  break;
               case 289:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(290); }
                  break;
               case 290:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(537, 539); }
                  break;
               case 292:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(77, 79); }
                  break;
               case 294:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(295); }
                  break;
               case 295:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(295, 297); }
                  break;
               case 298:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(74, 76); }
                  break;
               case 300:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(301); }
                  break;
               case 301:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(301, 303); }
                  break;
               case 304:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(71, 73); }
                  break;
               case 306:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(307); }
                  break;
               case 307:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(307, 309); }
                  break;
               case 310:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(68, 70); }
                  break;
               case 312:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(313); }
                  break;
               case 313:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(313, 317); }
                  break;
               case 318:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(65, 67); }
                  break;
               case 320:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(321); }
                  break;
               case 321:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(321, 325); }
                  break;
               case 326:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(62, 64); }
                  break;
               case 328:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(329); }
                  break;
               case 329:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(329, 331); }
                  break;
               case 332:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(59, 61); }
                  break;
               case 334:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(335); }
                  break;
               case 335:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(335, 337); }
                  break;
               case 338:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(56, 58); }
                  break;
               case 340:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(341); }
                  break;
               case 341:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(341, 343); }
                  break;
               case 344:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(53, 55); }
                  break;
               case 346:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(347); }
                  break;
               case 347:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(347, 349); }
                  break;
               case 350:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(50, 52); }
                  break;
               case 352:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(353); }
                  break;
               case 353:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(353, 355); }
                  break;
               case 356:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(47, 49); }
                  break;
               case 358:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(359); }
                  break;
               case 359:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(359, 361); }
                  break;
               case 362:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(44, 46); }
                  break;
               case 364:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(365); }
                  break;
               case 365:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(365, 366); }
                  break;
               case 367:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(41, 43); }
                  break;
               case 369:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(370); }
                  break;
               case 370:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(370, 373); }
                  break;
               case 374:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(38, 40); }
                  break;
               case 376:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(377); }
                  break;
               case 377:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(377, 380); }
                  break;
               case 381:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(35, 37); }
                  break;
               case 383:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(384); }
                  break;
               case 384:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(384, 388); }
                  break;
               case 389:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(32, 34); }
                  break;
               case 391:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(392); }
                  break;
               case 392:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(392, 396); }
                  break;
               case 397:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(28, 31); }
                  break;
               case 399:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(400); }
                  break;
               case 400:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(540, 542); }
                  break;
               case 404:
                  if (curChar != 51)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjAddStates(543, 544); }
                  break;
               case 405:
                  if (curChar == 10 && kind > 97)
                     kind = 97;
                  break;
               case 406:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 405;
                  break;
               case 407:
                  if ((0x100003600L & l) != 0L && kind > 97)
                     kind = 97;
                  break;
               case 408:
                  if (curChar == 53)
                     { jjCheckNAdd(404); }
                  break;
               case 409:
                  if (curChar == 55)
                     { jjCheckNAdd(404); }
                  break;
               case 410:
                  if (curChar == 48)
                     { jjCheckNAddStates(545, 549); }
                  break;
               case 411:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(408, 409); }
                  break;
               case 412:
                  if (curChar == 48)
                     { jjCheckNAddStates(550, 552); }
                  break;
               case 413:
                  if (curChar == 48)
                     { jjCheckNAddStates(553, 556); }
                  break;
               case 416:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(402, 403); }
                  break;
               case 417:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 416;
                  break;
               case 418:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(402, 403); }
                  break;
               case 419:
                  if (curChar == 52)
                     { jjCheckNAdd(415); }
                  break;
               case 420:
                  if (curChar == 54)
                     { jjCheckNAdd(415); }
                  break;
               case 421:
                  if (curChar == 48)
                     { jjCheckNAddStates(557, 561); }
                  break;
               case 422:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(419, 420); }
                  break;
               case 423:
                  if (curChar == 48)
                     { jjCheckNAddStates(562, 564); }
                  break;
               case 424:
                  if (curChar == 48)
                     { jjCheckNAddStates(565, 568); }
                  break;
               case 425:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(24, 27); }
                  break;
               case 427:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(428); }
                  break;
               case 428:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(569, 571); }
                  break;
               case 431:
                  if (curChar != 51)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjAddStates(572, 573); }
                  break;
               case 432:
                  if (curChar == 10 && kind > 98)
                     kind = 98;
                  break;
               case 433:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 432;
                  break;
               case 434:
                  if ((0x100003600L & l) != 0L && kind > 98)
                     kind = 98;
                  break;
               case 435:
                  if (curChar == 53)
                     { jjCheckNAdd(431); }
                  break;
               case 436:
                  if (curChar == 55)
                     { jjCheckNAdd(431); }
                  break;
               case 437:
                  if (curChar == 48)
                     { jjCheckNAddStates(574, 578); }
                  break;
               case 438:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(435, 436); }
                  break;
               case 439:
                  if (curChar == 48)
                     { jjCheckNAddStates(579, 581); }
                  break;
               case 440:
                  if (curChar == 48)
                     { jjCheckNAddStates(582, 585); }
                  break;
               case 441:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(20, 23); }
                  break;
               case 443:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(444); }
                  break;
               case 444:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(586, 588); }
                  break;
               case 449:
                  if (curChar == 10 && kind > 99)
                     kind = 99;
                  break;
               case 450:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 449;
                  break;
               case 451:
                  if ((0x100003600L & l) != 0L && kind > 99)
                     kind = 99;
                  break;
               case 452:
                  if (curChar == 53)
                     { jjCheckNAdd(448); }
                  break;
               case 453:
                  if (curChar == 55)
                     { jjCheckNAdd(448); }
                  break;
               case 454:
                  if (curChar == 48)
                     { jjCheckNAddStates(589, 593); }
                  break;
               case 455:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(452, 453); }
                  break;
               case 456:
                  if (curChar == 48)
                     { jjCheckNAddStates(594, 596); }
                  break;
               case 457:
                  if (curChar == 48)
                     { jjCheckNAddStates(597, 600); }
                  break;
               case 459:
                  if (curChar == 56)
                     { jjCheckNAddStates(601, 604); }
                  break;
               case 460:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(446, 447); }
                  break;
               case 461:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 460;
                  break;
               case 462:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(446, 447); }
                  break;
               case 463:
                  if (curChar == 52)
                     { jjCheckNAdd(459); }
                  break;
               case 464:
                  if (curChar == 54)
                     { jjCheckNAdd(459); }
                  break;
               case 465:
                  if (curChar == 48)
                     { jjCheckNAddStates(605, 609); }
                  break;
               case 466:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(463, 464); }
                  break;
               case 467:
                  if (curChar == 48)
                     { jjCheckNAddStates(610, 612); }
                  break;
               case 468:
                  if (curChar == 48)
                     { jjCheckNAddStates(613, 616); }
                  break;
               case 469:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(16, 19); }
                  break;
               case 471:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(472); }
                  break;
               case 472:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(617, 619); }
                  break;
               case 478:
                  if (curChar == 10 && kind > 100)
                     kind = 100;
                  break;
               case 479:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 478;
                  break;
               case 480:
                  if ((0x100003600L & l) != 0L && kind > 100)
                     kind = 100;
                  break;
               case 481:
                  if (curChar == 53)
                     { jjCheckNAdd(477); }
                  break;
               case 482:
                  if (curChar == 55)
                     { jjCheckNAdd(477); }
                  break;
               case 483:
                  if (curChar == 48)
                     { jjCheckNAddStates(620, 624); }
                  break;
               case 484:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(481, 482); }
                  break;
               case 485:
                  if (curChar == 48)
                     { jjCheckNAddStates(625, 627); }
                  break;
               case 486:
                  if (curChar == 48)
                     { jjCheckNAddStates(628, 631); }
                  break;
               case 488:
                  if (curChar == 56)
                     { jjCheckNAddStates(632, 635); }
                  break;
               case 489:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(475, 476); }
                  break;
               case 490:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 489;
                  break;
               case 491:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(475, 476); }
                  break;
               case 492:
                  if (curChar == 52)
                     { jjCheckNAdd(488); }
                  break;
               case 493:
                  if (curChar == 54)
                     { jjCheckNAdd(488); }
                  break;
               case 494:
                  if (curChar == 48)
                     { jjCheckNAddStates(636, 640); }
                  break;
               case 495:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(492, 493); }
                  break;
               case 496:
                  if (curChar == 48)
                     { jjCheckNAddStates(641, 643); }
                  break;
               case 497:
                  if (curChar == 48)
                     { jjCheckNAddStates(644, 647); }
                  break;
               case 500:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(474, 487); }
                  break;
               case 501:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 500;
                  break;
               case 502:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(474, 487); }
                  break;
               case 503:
                  if (curChar == 52)
                     { jjCheckNAdd(499); }
                  break;
               case 504:
                  if (curChar == 54)
                     { jjCheckNAdd(499); }
                  break;
               case 505:
                  if (curChar == 48)
                     { jjCheckNAddStates(648, 652); }
                  break;
               case 506:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(503, 504); }
                  break;
               case 507:
                  if (curChar == 48)
                     { jjCheckNAddStates(653, 655); }
                  break;
               case 508:
                  if (curChar == 48)
                     { jjCheckNAddStates(656, 659); }
                  break;
               case 509:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(13, 15); }
                  break;
               case 511:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(512); }
                  break;
               case 512:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(512, 515); }
                  break;
               case 516:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(10, 12); }
                  break;
               case 518:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(519); }
                  break;
               case 519:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(519, 523); }
                  break;
               case 524:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(7, 9); }
                  break;
               case 526:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(527); }
                  break;
               case 527:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(527, 528); }
                  break;
               case 528:
                  if (curChar == 37 && kind > 103)
                     kind = 103;
                  break;
               case 529:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 6); }
                  break;
               case 531:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(532); }
                  break;
               case 532:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(660, 662); }
                  break;
               case 534:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddTwoStates(534, 535); }
                  break;
               case 536:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddTwoStates(534, 535); }
                  break;
               case 537:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddStates(663, 671); }
                  break;
               case 538:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddStates(672, 675); }
                  break;
               case 539:
                  if (curChar != 10)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddTwoStates(534, 535); }
                  break;
               case 540:
               case 555:
                  if (curChar == 13)
                     { jjCheckNAdd(539); }
                  break;
               case 541:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddTwoStates(534, 535); }
                  break;
               case 542:
               case 544:
               case 547:
               case 551:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(538); }
                  break;
               case 543:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 544;
                  break;
               case 545:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 546;
                  break;
               case 546:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 547;
                  break;
               case 548:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 549;
                  break;
               case 549:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 550;
                  break;
               case 550:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 551;
                  break;
               case 553:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddStates(676, 684); }
                  break;
               case 554:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddStates(685, 688); }
                  break;
               case 556:
               case 558:
               case 561:
               case 565:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(554); }
                  break;
               case 557:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 558;
                  break;
               case 559:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 560;
                  break;
               case 560:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 561;
                  break;
               case 562:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 563;
                  break;
               case 563:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 564;
                  break;
               case 564:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 565;
                  break;
               case 566:
                  if (curChar == 45)
                     { jjAddStates(247, 251); }
                  break;
               case 568:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 22)
                     kind = 22;
                  { jjCheckNAddTwoStates(568, 569); }
                  break;
               case 570:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 22)
                     kind = 22;
                  { jjCheckNAddTwoStates(568, 569); }
                  break;
               case 571:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 22)
                     kind = 22;
                  { jjCheckNAddStates(689, 697); }
                  break;
               case 572:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 22)
                     kind = 22;
                  { jjCheckNAddStates(698, 701); }
                  break;
               case 573:
                  if (curChar != 10)
                     break;
                  if (kind > 22)
                     kind = 22;
                  { jjCheckNAddTwoStates(568, 569); }
                  break;
               case 574:
               case 657:
                  if (curChar == 13)
                     { jjCheckNAdd(573); }
                  break;
               case 575:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 22)
                     kind = 22;
                  { jjCheckNAddTwoStates(568, 569); }
                  break;
               case 576:
               case 578:
               case 581:
               case 585:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(572); }
                  break;
               case 577:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 578;
                  break;
               case 579:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 580;
                  break;
               case 580:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 581;
                  break;
               case 582:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 583;
                  break;
               case 583:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 584;
                  break;
               case 584:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 585;
                  break;
               case 588:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 114)
                     kind = 114;
                  { jjCheckNAddTwoStates(588, 589); }
                  break;
               case 590:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 114)
                     kind = 114;
                  { jjCheckNAddTwoStates(588, 589); }
                  break;
               case 591:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 114)
                     kind = 114;
                  { jjCheckNAddStates(702, 710); }
                  break;
               case 592:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 114)
                     kind = 114;
                  { jjCheckNAddStates(711, 714); }
                  break;
               case 593:
                  if (curChar != 10)
                     break;
                  if (kind > 114)
                     kind = 114;
                  { jjCheckNAddTwoStates(588, 589); }
                  break;
               case 594:
               case 609:
                  if (curChar == 13)
                     { jjCheckNAdd(593); }
                  break;
               case 595:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 114)
                     kind = 114;
                  { jjCheckNAddTwoStates(588, 589); }
                  break;
               case 596:
               case 598:
               case 601:
               case 605:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(592); }
                  break;
               case 597:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 598;
                  break;
               case 599:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 600;
                  break;
               case 600:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 601;
                  break;
               case 602:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 603;
                  break;
               case 603:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 604;
                  break;
               case 604:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 605;
                  break;
               case 607:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 114)
                     kind = 114;
                  { jjCheckNAddStates(715, 723); }
                  break;
               case 608:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 114)
                     kind = 114;
                  { jjCheckNAddStates(724, 727); }
                  break;
               case 610:
               case 612:
               case 615:
               case 619:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(608); }
                  break;
               case 611:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 612;
                  break;
               case 613:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 614;
                  break;
               case 614:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 615;
                  break;
               case 616:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 617;
                  break;
               case 617:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 618;
                  break;
               case 618:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 619;
                  break;
               case 621:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(0, 2); }
                  break;
               case 622:
                  if (curChar == 40 && kind > 115)
                     kind = 115;
                  break;
               case 624:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(0, 2); }
                  break;
               case 625:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(728, 737); }
                  break;
               case 626:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(738, 742); }
                  break;
               case 627:
                  if (curChar == 10)
                     { jjCheckNAddStates(0, 2); }
                  break;
               case 628:
               case 643:
                  if (curChar == 13)
                     { jjCheckNAdd(627); }
                  break;
               case 629:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(0, 2); }
                  break;
               case 630:
               case 632:
               case 635:
               case 639:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(626); }
                  break;
               case 631:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 632;
                  break;
               case 633:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 634;
                  break;
               case 634:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 635;
                  break;
               case 636:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 637;
                  break;
               case 637:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 638;
                  break;
               case 638:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 639;
                  break;
               case 641:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(743, 752); }
                  break;
               case 642:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(753, 757); }
                  break;
               case 644:
               case 646:
               case 649:
               case 653:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(642); }
                  break;
               case 645:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 646;
                  break;
               case 647:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 648;
                  break;
               case 648:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 649;
                  break;
               case 650:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 651;
                  break;
               case 651:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 652;
                  break;
               case 652:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 653;
                  break;
               case 655:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 22)
                     kind = 22;
                  { jjCheckNAddStates(758, 766); }
                  break;
               case 656:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 22)
                     kind = 22;
                  { jjCheckNAddStates(767, 770); }
                  break;
               case 658:
               case 660:
               case 663:
               case 667:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(656); }
                  break;
               case 659:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 660;
                  break;
               case 661:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 662;
                  break;
               case 662:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 663;
                  break;
               case 664:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 665;
                  break;
               case 665:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 666;
                  break;
               case 666:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 667;
                  break;
               case 677:
                  if (curChar != 52)
                     break;
                  if (kind > 72)
                     kind = 72;
                  { jjAddStates(771, 772); }
                  break;
               case 678:
                  if (curChar == 10 && kind > 72)
                     kind = 72;
                  break;
               case 679:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 678;
                  break;
               case 680:
                  if ((0x100003600L & l) != 0L && kind > 72)
                     kind = 72;
                  break;
               case 681:
                  if (curChar == 53)
                     { jjCheckNAdd(677); }
                  break;
               case 682:
                  if (curChar == 55)
                     { jjCheckNAdd(677); }
                  break;
               case 683:
                  if (curChar == 48)
                     { jjCheckNAddStates(773, 777); }
                  break;
               case 684:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(681, 682); }
                  break;
               case 685:
                  if (curChar == 48)
                     { jjCheckNAddStates(778, 780); }
                  break;
               case 686:
                  if (curChar == 48)
                     { jjCheckNAddStates(781, 784); }
                  break;
               case 688:
                  if (curChar == 50)
                     { jjCheckNAddStates(785, 788); }
                  break;
               case 689:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(675, 676); }
                  break;
               case 690:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 689;
                  break;
               case 691:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(675, 676); }
                  break;
               case 692:
                  if (curChar == 53)
                     { jjCheckNAdd(688); }
                  break;
               case 693:
                  if (curChar == 55)
                     { jjCheckNAdd(688); }
                  break;
               case 694:
                  if (curChar == 48)
                     { jjCheckNAddStates(789, 793); }
                  break;
               case 695:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(692, 693); }
                  break;
               case 696:
                  if (curChar == 48)
                     { jjCheckNAddStates(794, 796); }
                  break;
               case 697:
                  if (curChar == 48)
                     { jjCheckNAddStates(797, 800); }
                  break;
               case 699:
                  if (curChar == 49)
                     { jjCheckNAddStates(801, 804); }
                  break;
               case 700:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(674, 687); }
                  break;
               case 701:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 700;
                  break;
               case 702:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(674, 687); }
                  break;
               case 703:
                  if (curChar == 53)
                     { jjCheckNAdd(699); }
                  break;
               case 704:
                  if (curChar == 55)
                     { jjCheckNAdd(699); }
                  break;
               case 705:
                  if (curChar == 48)
                     { jjCheckNAddStates(805, 809); }
                  break;
               case 706:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(703, 704); }
                  break;
               case 707:
                  if (curChar == 48)
                     { jjCheckNAddStates(810, 812); }
                  break;
               case 708:
                  if (curChar == 48)
                     { jjCheckNAddStates(813, 816); }
                  break;
               case 710:
                  if (curChar == 48)
                     { jjCheckNAddStates(817, 820); }
                  break;
               case 711:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(673, 698); }
                  break;
               case 712:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 711;
                  break;
               case 713:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(673, 698); }
                  break;
               case 714:
                  if (curChar == 53)
                     { jjCheckNAdd(710); }
                  break;
               case 715:
                  if (curChar == 55)
                     { jjCheckNAdd(710); }
                  break;
               case 716:
                  if (curChar == 48)
                     { jjCheckNAddStates(821, 825); }
                  break;
               case 717:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(714, 715); }
                  break;
               case 718:
                  if (curChar == 48)
                     { jjCheckNAddStates(826, 828); }
                  break;
               case 719:
                  if (curChar == 48)
                     { jjCheckNAddStates(829, 832); }
                  break;
               case 722:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(672, 709); }
                  break;
               case 723:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 722;
                  break;
               case 724:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(672, 709); }
                  break;
               case 725:
                  if (curChar == 52)
                     { jjCheckNAdd(721); }
                  break;
               case 726:
                  if (curChar == 54)
                     { jjCheckNAdd(721); }
                  break;
               case 727:
                  if (curChar == 48)
                     { jjCheckNAddStates(833, 837); }
                  break;
               case 728:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(725, 726); }
                  break;
               case 729:
                  if (curChar == 48)
                     { jjCheckNAddStates(838, 840); }
                  break;
               case 730:
                  if (curChar == 48)
                     { jjCheckNAddStates(841, 844); }
                  break;
               case 736:
                  if (curChar != 53)
                     break;
                  if (kind > 73)
                     kind = 73;
                  { jjAddStates(845, 846); }
                  break;
               case 737:
                  if (curChar == 10 && kind > 73)
                     kind = 73;
                  break;
               case 738:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 737;
                  break;
               case 739:
                  if ((0x100003600L & l) != 0L && kind > 73)
                     kind = 73;
                  break;
               case 740:
                  if (curChar == 52)
                     { jjCheckNAdd(736); }
                  break;
               case 741:
                  if (curChar == 54)
                     { jjCheckNAdd(736); }
                  break;
               case 742:
                  if (curChar == 48)
                     { jjCheckNAddStates(847, 851); }
                  break;
               case 743:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(740, 741); }
                  break;
               case 744:
                  if (curChar == 48)
                     { jjCheckNAddStates(852, 854); }
                  break;
               case 745:
                  if (curChar == 48)
                     { jjCheckNAddStates(855, 858); }
                  break;
               case 747:
                  if (curChar == 55)
                     { jjCheckNAddStates(859, 862); }
                  break;
               case 748:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(734, 735); }
                  break;
               case 749:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 748;
                  break;
               case 750:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(734, 735); }
                  break;
               case 751:
                  if (curChar == 52)
                     { jjCheckNAdd(747); }
                  break;
               case 752:
                  if (curChar == 54)
                     { jjCheckNAdd(747); }
                  break;
               case 753:
                  if (curChar == 48)
                     { jjCheckNAddStates(863, 867); }
                  break;
               case 754:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(751, 752); }
                  break;
               case 755:
                  if (curChar == 48)
                     { jjCheckNAddStates(868, 870); }
                  break;
               case 756:
                  if (curChar == 48)
                     { jjCheckNAddStates(871, 874); }
                  break;
               case 758:
                  if (curChar == 49)
                     { jjCheckNAddStates(875, 878); }
                  break;
               case 759:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(733, 746); }
                  break;
               case 760:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 759;
                  break;
               case 761:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(733, 746); }
                  break;
               case 762:
                  if (curChar == 52)
                     { jjCheckNAdd(758); }
                  break;
               case 763:
                  if (curChar == 54)
                     { jjCheckNAdd(758); }
                  break;
               case 764:
                  if (curChar == 48)
                     { jjCheckNAddStates(879, 883); }
                  break;
               case 765:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(762, 763); }
                  break;
               case 766:
                  if (curChar == 48)
                     { jjCheckNAddStates(884, 886); }
                  break;
               case 767:
                  if (curChar == 48)
                     { jjCheckNAddStates(887, 890); }
                  break;
               case 774:
                  if (curChar != 49)
                     break;
                  if (kind > 74)
                     kind = 74;
                  { jjAddStates(891, 892); }
                  break;
               case 775:
                  if (curChar == 10 && kind > 74)
                     kind = 74;
                  break;
               case 776:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 775;
                  break;
               case 777:
                  if ((0x100003600L & l) != 0L && kind > 74)
                     kind = 74;
                  break;
               case 778:
                  if (curChar == 52)
                     { jjCheckNAdd(774); }
                  break;
               case 779:
                  if (curChar == 54)
                     { jjCheckNAdd(774); }
                  break;
               case 780:
                  if (curChar == 48)
                     { jjCheckNAddStates(893, 897); }
                  break;
               case 781:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(778, 779); }
                  break;
               case 782:
                  if (curChar == 48)
                     { jjCheckNAddStates(898, 900); }
                  break;
               case 783:
                  if (curChar == 48)
                     { jjCheckNAddStates(901, 904); }
                  break;
               case 785:
                  if (curChar == 57)
                     { jjCheckNAddStates(905, 908); }
                  break;
               case 786:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(772, 773); }
                  break;
               case 787:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 786;
                  break;
               case 788:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(772, 773); }
                  break;
               case 789:
                  if (curChar == 52)
                     { jjCheckNAdd(785); }
                  break;
               case 790:
                  if (curChar == 54)
                     { jjCheckNAdd(785); }
                  break;
               case 791:
                  if (curChar == 48)
                     { jjCheckNAddStates(909, 913); }
                  break;
               case 792:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(789, 790); }
                  break;
               case 793:
                  if (curChar == 48)
                     { jjCheckNAddStates(914, 916); }
                  break;
               case 794:
                  if (curChar == 48)
                     { jjCheckNAddStates(917, 920); }
                  break;
               case 796:
                  if (curChar == 52)
                     { jjCheckNAddStates(921, 924); }
                  break;
               case 797:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(771, 784); }
                  break;
               case 798:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 797;
                  break;
               case 799:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(771, 784); }
                  break;
               case 800:
                  if (curChar == 52)
                     { jjCheckNAdd(796); }
                  break;
               case 801:
                  if (curChar == 54)
                     { jjCheckNAdd(796); }
                  break;
               case 802:
                  if (curChar == 48)
                     { jjCheckNAddStates(925, 929); }
                  break;
               case 803:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(800, 801); }
                  break;
               case 804:
                  if (curChar == 48)
                     { jjCheckNAddStates(930, 932); }
                  break;
               case 805:
                  if (curChar == 48)
                     { jjCheckNAddStates(933, 936); }
                  break;
               case 807:
                  if (curChar == 53)
                     { jjCheckNAddStates(937, 940); }
                  break;
               case 808:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(770, 795); }
                  break;
               case 809:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 808;
                  break;
               case 810:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(770, 795); }
                  break;
               case 811:
                  if (curChar == 52)
                     { jjCheckNAdd(807); }
                  break;
               case 812:
                  if (curChar == 54)
                     { jjCheckNAdd(807); }
                  break;
               case 813:
                  if (curChar == 48)
                     { jjCheckNAddStates(941, 945); }
                  break;
               case 814:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(811, 812); }
                  break;
               case 815:
                  if (curChar == 48)
                     { jjCheckNAddStates(946, 948); }
                  break;
               case 816:
                  if (curChar == 48)
                     { jjCheckNAddStates(949, 952); }
                  break;
               case 821:
                  if (curChar == 45)
                     { jjAddStates(953, 954); }
                  break;
               case 827:
                  if (curChar != 53)
                     break;
                  if (kind > 75)
                     kind = 75;
                  { jjAddStates(955, 956); }
                  break;
               case 828:
                  if (curChar == 10 && kind > 75)
                     kind = 75;
                  break;
               case 829:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 828;
                  break;
               case 830:
                  if ((0x100003600L & l) != 0L && kind > 75)
                     kind = 75;
                  break;
               case 831:
                  if (curChar == 52)
                     { jjCheckNAdd(827); }
                  break;
               case 832:
                  if (curChar == 54)
                     { jjCheckNAdd(827); }
                  break;
               case 833:
                  if (curChar == 48)
                     { jjCheckNAddStates(957, 961); }
                  break;
               case 834:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(831, 832); }
                  break;
               case 835:
                  if (curChar == 48)
                     { jjCheckNAddStates(962, 964); }
                  break;
               case 836:
                  if (curChar == 48)
                     { jjCheckNAddStates(965, 968); }
                  break;
               case 838:
                  if (curChar == 51)
                     { jjCheckNAddStates(969, 972); }
                  break;
               case 839:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(825, 826); }
                  break;
               case 840:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 839;
                  break;
               case 841:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(825, 826); }
                  break;
               case 842:
                  if (curChar == 52)
                     { jjCheckNAdd(838); }
                  break;
               case 843:
                  if (curChar == 54)
                     { jjCheckNAdd(838); }
                  break;
               case 844:
                  if (curChar == 48)
                     { jjCheckNAddStates(973, 977); }
                  break;
               case 845:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(842, 843); }
                  break;
               case 846:
                  if (curChar == 48)
                     { jjCheckNAddStates(978, 980); }
                  break;
               case 847:
                  if (curChar == 48)
                     { jjCheckNAddStates(981, 984); }
                  break;
               case 849:
                  if (curChar == 49)
                     { jjCheckNAddStates(985, 988); }
                  break;
               case 850:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(824, 837); }
                  break;
               case 851:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 850;
                  break;
               case 852:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(824, 837); }
                  break;
               case 853:
                  if (curChar == 52)
                     { jjCheckNAdd(849); }
                  break;
               case 854:
                  if (curChar == 54)
                     { jjCheckNAdd(849); }
                  break;
               case 855:
                  if (curChar == 48)
                     { jjCheckNAddStates(989, 993); }
                  break;
               case 856:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(853, 854); }
                  break;
               case 857:
                  if (curChar == 48)
                     { jjCheckNAddStates(994, 996); }
                  break;
               case 858:
                  if (curChar == 48)
                     { jjCheckNAddStates(997, 1000); }
                  break;
               case 860:
                  if (curChar == 54)
                     { jjCheckNAddStates(1001, 1004); }
                  break;
               case 861:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(823, 848); }
                  break;
               case 862:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 861;
                  break;
               case 863:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(823, 848); }
                  break;
               case 864:
                  if (curChar == 52)
                     { jjCheckNAdd(860); }
                  break;
               case 865:
                  if (curChar == 54)
                     { jjCheckNAdd(860); }
                  break;
               case 866:
                  if (curChar == 48)
                     { jjCheckNAddStates(1005, 1009); }
                  break;
               case 867:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(864, 865); }
                  break;
               case 868:
                  if (curChar == 48)
                     { jjCheckNAddStates(1010, 1012); }
                  break;
               case 869:
                  if (curChar == 48)
                     { jjCheckNAddStates(1013, 1016); }
                  break;
               case 871:
                  if (curChar == 52)
                     { jjCheckNAddStates(1017, 1019); }
                  break;
               case 872:
                  if (curChar == 10)
                     { jjCheckNAdd(821); }
                  break;
               case 873:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 872;
                  break;
               case 874:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAdd(821); }
                  break;
               case 875:
                  if (curChar == 53)
                     { jjCheckNAdd(871); }
                  break;
               case 876:
                  if (curChar == 55)
                     { jjCheckNAdd(871); }
                  break;
               case 877:
                  if (curChar == 48)
                     { jjCheckNAddStates(1020, 1024); }
                  break;
               case 878:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(875, 876); }
                  break;
               case 879:
                  if (curChar == 48)
                     { jjCheckNAddStates(1025, 1027); }
                  break;
               case 880:
                  if (curChar == 48)
                     { jjCheckNAddStates(1028, 1031); }
                  break;
               case 883:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(820, 870); }
                  break;
               case 884:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 883;
                  break;
               case 885:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(820, 870); }
                  break;
               case 886:
                  if (curChar == 52)
                     { jjCheckNAdd(882); }
                  break;
               case 887:
                  if (curChar == 54)
                     { jjCheckNAdd(882); }
                  break;
               case 888:
                  if (curChar == 48)
                     { jjCheckNAddStates(1032, 1036); }
                  break;
               case 889:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(886, 887); }
                  break;
               case 890:
                  if (curChar == 48)
                     { jjCheckNAddStates(1037, 1039); }
                  break;
               case 891:
                  if (curChar == 48)
                     { jjCheckNAddStates(1040, 1043); }
                  break;
               case 893:
                  if (curChar == 49)
                     { jjCheckNAddStates(1044, 1047); }
                  break;
               case 894:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(819, 881); }
                  break;
               case 895:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 894;
                  break;
               case 896:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(819, 881); }
                  break;
               case 897:
                  if (curChar == 53)
                     { jjCheckNAdd(893); }
                  break;
               case 898:
                  if (curChar == 55)
                     { jjCheckNAdd(893); }
                  break;
               case 899:
                  if (curChar == 48)
                     { jjCheckNAddStates(1048, 1052); }
                  break;
               case 900:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(897, 898); }
                  break;
               case 901:
                  if (curChar == 48)
                     { jjCheckNAddStates(1053, 1055); }
                  break;
               case 902:
                  if (curChar == 48)
                     { jjCheckNAddStates(1056, 1059); }
                  break;
               case 904:
                  if (curChar == 54)
                     { jjCheckNAddStates(1060, 1063); }
                  break;
               case 905:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(818, 892); }
                  break;
               case 906:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 905;
                  break;
               case 907:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(818, 892); }
                  break;
               case 908:
                  if (curChar == 52)
                     { jjCheckNAdd(904); }
                  break;
               case 909:
                  if (curChar == 54)
                     { jjCheckNAdd(904); }
                  break;
               case 910:
                  if (curChar == 48)
                     { jjCheckNAddStates(1064, 1068); }
                  break;
               case 911:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(908, 909); }
                  break;
               case 912:
                  if (curChar == 48)
                     { jjCheckNAddStates(1069, 1071); }
                  break;
               case 913:
                  if (curChar == 48)
                     { jjCheckNAddStates(1072, 1075); }
                  break;
               case 922:
                  if (curChar != 52)
                     break;
                  if (kind > 76)
                     kind = 76;
                  { jjAddStates(1076, 1077); }
                  break;
               case 923:
                  if (curChar == 10 && kind > 76)
                     kind = 76;
                  break;
               case 924:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 923;
                  break;
               case 925:
                  if ((0x100003600L & l) != 0L && kind > 76)
                     kind = 76;
                  break;
               case 926:
                  if (curChar == 53)
                     { jjCheckNAdd(922); }
                  break;
               case 927:
                  if (curChar == 55)
                     { jjCheckNAdd(922); }
                  break;
               case 928:
                  if (curChar == 48)
                     { jjCheckNAddStates(1078, 1082); }
                  break;
               case 929:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(926, 927); }
                  break;
               case 930:
                  if (curChar == 48)
                     { jjCheckNAddStates(1083, 1085); }
                  break;
               case 931:
                  if (curChar == 48)
                     { jjCheckNAddStates(1086, 1089); }
                  break;
               case 933:
                  if (curChar == 53)
                     { jjCheckNAddStates(1090, 1093); }
                  break;
               case 934:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(920, 921); }
                  break;
               case 935:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 934;
                  break;
               case 936:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(920, 921); }
                  break;
               case 937:
                  if (curChar == 52)
                     { jjCheckNAdd(933); }
                  break;
               case 938:
                  if (curChar == 54)
                     { jjCheckNAdd(933); }
                  break;
               case 939:
                  if (curChar == 48)
                     { jjCheckNAddStates(1094, 1098); }
                  break;
               case 940:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(937, 938); }
                  break;
               case 941:
                  if (curChar == 48)
                     { jjCheckNAddStates(1099, 1101); }
                  break;
               case 942:
                  if (curChar == 48)
                     { jjCheckNAddStates(1102, 1105); }
                  break;
               case 944:
                  if (curChar == 51)
                     { jjCheckNAddStates(1106, 1109); }
                  break;
               case 945:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(919, 932); }
                  break;
               case 946:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 945;
                  break;
               case 947:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(919, 932); }
                  break;
               case 948:
                  if (curChar == 53)
                     { jjCheckNAdd(944); }
                  break;
               case 949:
                  if (curChar == 55)
                     { jjCheckNAdd(944); }
                  break;
               case 950:
                  if (curChar == 48)
                     { jjCheckNAddStates(1110, 1114); }
                  break;
               case 951:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(948, 949); }
                  break;
               case 952:
                  if (curChar == 48)
                     { jjCheckNAddStates(1115, 1117); }
                  break;
               case 953:
                  if (curChar == 48)
                     { jjCheckNAddStates(1118, 1121); }
                  break;
               case 955:
                  if (curChar == 50)
                     { jjCheckNAddStates(1122, 1125); }
                  break;
               case 956:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(918, 943); }
                  break;
               case 957:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 956;
                  break;
               case 958:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(918, 943); }
                  break;
               case 959:
                  if (curChar == 53)
                     { jjCheckNAdd(955); }
                  break;
               case 960:
                  if (curChar == 55)
                     { jjCheckNAdd(955); }
                  break;
               case 961:
                  if (curChar == 48)
                     { jjCheckNAddStates(1126, 1130); }
                  break;
               case 962:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(959, 960); }
                  break;
               case 963:
                  if (curChar == 48)
                     { jjCheckNAddStates(1131, 1133); }
                  break;
               case 964:
                  if (curChar == 48)
                     { jjCheckNAddStates(1134, 1137); }
                  break;
               case 966:
                  if (curChar == 49)
                     { jjCheckNAddStates(1138, 1141); }
                  break;
               case 967:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(917, 954); }
                  break;
               case 968:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 967;
                  break;
               case 969:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(917, 954); }
                  break;
               case 970:
                  if (curChar == 52)
                     { jjCheckNAdd(966); }
                  break;
               case 971:
                  if (curChar == 54)
                     { jjCheckNAdd(966); }
                  break;
               case 972:
                  if (curChar == 48)
                     { jjCheckNAddStates(1142, 1146); }
                  break;
               case 973:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(970, 971); }
                  break;
               case 974:
                  if (curChar == 48)
                     { jjCheckNAddStates(1147, 1149); }
                  break;
               case 975:
                  if (curChar == 48)
                     { jjCheckNAddStates(1150, 1153); }
                  break;
               case 977:
                  if (curChar == 56)
                     { jjCheckNAddStates(1154, 1157); }
                  break;
               case 978:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(916, 965); }
                  break;
               case 979:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 978;
                  break;
               case 980:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(916, 965); }
                  break;
               case 981:
                  if (curChar == 52)
                     { jjCheckNAdd(977); }
                  break;
               case 982:
                  if (curChar == 54)
                     { jjCheckNAdd(977); }
                  break;
               case 983:
                  if (curChar == 48)
                     { jjCheckNAddStates(1158, 1162); }
                  break;
               case 984:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(981, 982); }
                  break;
               case 985:
                  if (curChar == 48)
                     { jjCheckNAddStates(1163, 1165); }
                  break;
               case 986:
                  if (curChar == 48)
                     { jjCheckNAddStates(1166, 1169); }
                  break;
               case 988:
                  if (curChar == 51)
                     { jjCheckNAddStates(1170, 1173); }
                  break;
               case 989:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(915, 976); }
                  break;
               case 990:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 989;
                  break;
               case 991:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(915, 976); }
                  break;
               case 992:
                  if (curChar == 52)
                     { jjCheckNAdd(988); }
                  break;
               case 993:
                  if (curChar == 54)
                     { jjCheckNAdd(988); }
                  break;
               case 994:
                  if (curChar == 48)
                     { jjCheckNAddStates(1174, 1178); }
                  break;
               case 995:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(992, 993); }
                  break;
               case 996:
                  if (curChar == 48)
                     { jjCheckNAddStates(1179, 1181); }
                  break;
               case 997:
                  if (curChar == 48)
                     { jjCheckNAddStates(1182, 1185); }
                  break;
               case 998:
                  if (curChar == 45)
                     { jjAddStates(1186, 1187); }
                  break;
               case 1000:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 116)
                     kind = 116;
                  { jjCheckNAddTwoStates(1000, 1001); }
                  break;
               case 1002:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 116)
                     kind = 116;
                  { jjCheckNAddTwoStates(1000, 1001); }
                  break;
               case 1003:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 116)
                     kind = 116;
                  { jjCheckNAddStates(1188, 1196); }
                  break;
               case 1004:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 116)
                     kind = 116;
                  { jjCheckNAddStates(1197, 1200); }
                  break;
               case 1005:
                  if (curChar != 10)
                     break;
                  if (kind > 116)
                     kind = 116;
                  { jjCheckNAddTwoStates(1000, 1001); }
                  break;
               case 1006:
               case 1021:
                  if (curChar == 13)
                     { jjCheckNAdd(1005); }
                  break;
               case 1007:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 116)
                     kind = 116;
                  { jjCheckNAddTwoStates(1000, 1001); }
                  break;
               case 1008:
               case 1010:
               case 1013:
               case 1017:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(1004); }
                  break;
               case 1009:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1010;
                  break;
               case 1011:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1012;
                  break;
               case 1012:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1013;
                  break;
               case 1014:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1015;
                  break;
               case 1015:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1016;
                  break;
               case 1016:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1017;
                  break;
               case 1019:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 116)
                     kind = 116;
                  { jjCheckNAddStates(1201, 1209); }
                  break;
               case 1020:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 116)
                     kind = 116;
                  { jjCheckNAddStates(1210, 1213); }
                  break;
               case 1022:
               case 1024:
               case 1027:
               case 1031:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(1020); }
                  break;
               case 1023:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1024;
                  break;
               case 1025:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1026;
                  break;
               case 1026:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1027;
                  break;
               case 1028:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1029;
                  break;
               case 1029:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1030;
                  break;
               case 1030:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1031;
                  break;
               case 1034:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(769, 806); }
                  break;
               case 1035:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 1034;
                  break;
               case 1036:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(769, 806); }
                  break;
               case 1037:
                  if (curChar == 52)
                     { jjCheckNAdd(1033); }
                  break;
               case 1038:
                  if (curChar == 54)
                     { jjCheckNAdd(1033); }
                  break;
               case 1039:
                  if (curChar == 48)
                     { jjCheckNAddStates(1214, 1218); }
                  break;
               case 1040:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(1037, 1038); }
                  break;
               case 1041:
                  if (curChar == 48)
                     { jjCheckNAddStates(1219, 1221); }
                  break;
               case 1042:
                  if (curChar == 48)
                     { jjCheckNAddStates(1222, 1225); }
                  break;
               case 1044:
                  if (curChar == 48)
                     { jjCheckNAddStates(1226, 1229); }
                  break;
               case 1045:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(732, 757); }
                  break;
               case 1046:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 1045;
                  break;
               case 1047:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(732, 757); }
                  break;
               case 1048:
                  if (curChar == 53)
                     { jjCheckNAdd(1044); }
                  break;
               case 1049:
                  if (curChar == 55)
                     { jjCheckNAdd(1044); }
                  break;
               case 1050:
                  if (curChar == 48)
                     { jjCheckNAddStates(1230, 1234); }
                  break;
               case 1051:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(1048, 1049); }
                  break;
               case 1052:
                  if (curChar == 48)
                     { jjCheckNAddStates(1235, 1237); }
                  break;
               case 1053:
                  if (curChar == 48)
                     { jjCheckNAddStates(1238, 1241); }
                  break;
               case 1055:
                  if (curChar == 57)
                     { jjCheckNAddStates(1242, 1245); }
                  break;
               case 1056:
                  if (curChar == 10)
                     { jjCheckNAddTwoStates(671, 720); }
                  break;
               case 1057:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 1056;
                  break;
               case 1058:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(671, 720); }
                  break;
               case 1059:
                  if (curChar == 52)
                     { jjCheckNAdd(1055); }
                  break;
               case 1060:
                  if (curChar == 54)
                     { jjCheckNAdd(1055); }
                  break;
               case 1061:
                  if (curChar == 48)
                     { jjCheckNAddStates(1246, 1250); }
                  break;
               case 1062:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(1059, 1060); }
                  break;
               case 1063:
                  if (curChar == 48)
                     { jjCheckNAddStates(1251, 1253); }
                  break;
               case 1064:
                  if (curChar == 48)
                     { jjCheckNAddStates(1254, 1257); }
                  break;
               case 1066:
                  if (curChar == 43)
                     jjstateSet[jjnewStateCnt++] = 1067;
                  break;
               case 1067:
                  if ((0x83ff000000000000L & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddTwoStates(1068, 1075); }
                  break;
               case 1068:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 1069;
                  break;
               case 1069:
                  if ((0x83ff000000000000L & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  jjstateSet[jjnewStateCnt++] = 1070;
                  break;
               case 1070:
                  if ((0x83ff000000000000L & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddStates(1258, 1261); }
                  break;
               case 1071:
                  if ((0x83ff000000000000L & l) != 0L && kind > 106)
                     kind = 106;
                  break;
               case 1072:
                  if ((0x83ff000000000000L & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAdd(1071); }
                  break;
               case 1073:
                  if ((0x83ff000000000000L & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddTwoStates(1071, 1072); }
                  break;
               case 1074:
                  if ((0x83ff000000000000L & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddStates(1262, 1264); }
                  break;
               case 1075:
                  if ((0x83ff000000000000L & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddStates(1265, 1269); }
                  break;
               case 1076:
                  if ((0x83ff000000000000L & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAdd(1068); }
                  break;
               case 1077:
                  if ((0x83ff000000000000L & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddTwoStates(1076, 1068); }
                  break;
               case 1078:
                  if ((0x83ff000000000000L & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddStates(1270, 1272); }
                  break;
               case 1079:
                  if ((0x83ff000000000000L & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddStates(1273, 1276); }
                  break;
               case 1081:
                  if (curChar == 40)
                     { jjCheckNAddStates(1277, 1282); }
                  break;
               case 1082:
                  if ((0xfffffc7a00000000L & l) != 0L)
                     { jjCheckNAddStates(1283, 1286); }
                  break;
               case 1083:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(1083, 1084); }
                  break;
               case 1084:
                  if (curChar == 41 && kind > 107)
                     kind = 107;
                  break;
               case 1086:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1283, 1286); }
                  break;
               case 1087:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1287, 1296); }
                  break;
               case 1088:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1297, 1301); }
                  break;
               case 1089:
                  if (curChar == 10)
                     { jjCheckNAddStates(1283, 1286); }
                  break;
               case 1090:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 1089;
                  break;
               case 1091:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1283, 1286); }
                  break;
               case 1092:
               case 1094:
               case 1097:
               case 1101:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(1088); }
                  break;
               case 1093:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1094;
                  break;
               case 1095:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1096;
                  break;
               case 1096:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1097;
                  break;
               case 1098:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1099;
                  break;
               case 1099:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1100;
                  break;
               case 1100:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1101;
                  break;
               case 1102:
                  if (curChar == 39)
                     { jjCheckNAddStates(1302, 1304); }
                  break;
               case 1103:
                  if ((0xffffff7fffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1302, 1304); }
                  break;
               case 1104:
                  if (curChar == 39)
                     { jjCheckNAddTwoStates(1083, 1084); }
                  break;
               case 1106:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(1302, 1304); }
                  break;
               case 1107:
                  if (curChar == 10)
                     { jjCheckNAddStates(1302, 1304); }
                  break;
               case 1108:
               case 1112:
                  if (curChar == 13)
                     { jjCheckNAdd(1107); }
                  break;
               case 1109:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1302, 1304); }
                  break;
               case 1110:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1305, 1314); }
                  break;
               case 1111:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1315, 1319); }
                  break;
               case 1113:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1302, 1304); }
                  break;
               case 1114:
               case 1116:
               case 1119:
               case 1123:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(1111); }
                  break;
               case 1115:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1116;
                  break;
               case 1117:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1118;
                  break;
               case 1118:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1119;
                  break;
               case 1120:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1121;
                  break;
               case 1121:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1122;
                  break;
               case 1122:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1123;
                  break;
               case 1124:
                  if (curChar == 34)
                     { jjCheckNAddStates(1320, 1322); }
                  break;
               case 1125:
                  if ((0xfffffffbffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1320, 1322); }
                  break;
               case 1126:
                  if (curChar == 34)
                     { jjCheckNAddTwoStates(1083, 1084); }
                  break;
               case 1128:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(1320, 1322); }
                  break;
               case 1129:
                  if (curChar == 10)
                     { jjCheckNAddStates(1320, 1322); }
                  break;
               case 1130:
               case 1134:
                  if (curChar == 13)
                     { jjCheckNAdd(1129); }
                  break;
               case 1131:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1320, 1322); }
                  break;
               case 1132:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1323, 1332); }
                  break;
               case 1133:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1333, 1337); }
                  break;
               case 1135:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1320, 1322); }
                  break;
               case 1136:
               case 1138:
               case 1141:
               case 1145:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(1133); }
                  break;
               case 1137:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1138;
                  break;
               case 1139:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1140;
                  break;
               case 1140:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1141;
                  break;
               case 1142:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1143;
                  break;
               case 1143:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1144;
                  break;
               case 1144:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1145;
                  break;
               case 1146:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1338, 1344); }
                  break;
               case 1149:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 20)
                     kind = 20;
                  { jjCheckNAddStates(89, 236); }
                  break;
               case 1150:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 20)
                     kind = 20;
                  { jjCheckNAddTwoStates(1150, 222); }
                  break;
               case 1151:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1151, 1152); }
                  break;
               case 1152:
                  if (curChar == 46)
                     { jjCheckNAdd(221); }
                  break;
               case 1153:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 24)
                     kind = 24;
                  { jjCheckNAddTwoStates(1153, 226); }
                  break;
               case 1154:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1154, 1155); }
                  break;
               case 1155:
                  if (curChar == 46)
                     { jjCheckNAdd(225); }
                  break;
               case 1156:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1345, 1347); }
                  break;
               case 1157:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1157, 1158); }
                  break;
               case 1158:
                  if (curChar == 46)
                     { jjCheckNAdd(229); }
                  break;
               case 1159:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1348, 1350); }
                  break;
               case 1160:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1160, 1161); }
                  break;
               case 1161:
                  if (curChar == 46)
                     { jjCheckNAdd(257); }
                  break;
               case 1162:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1351, 1353); }
                  break;
               case 1163:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1163, 1164); }
                  break;
               case 1164:
                  if (curChar == 46)
                     { jjCheckNAdd(264); }
                  break;
               case 1165:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1354, 1356); }
                  break;
               case 1166:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1166, 1167); }
                  break;
               case 1167:
                  if (curChar == 46)
                     { jjCheckNAdd(292); }
                  break;
               case 1168:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1357, 1359); }
                  break;
               case 1169:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1169, 1170); }
                  break;
               case 1170:
                  if (curChar == 46)
                     { jjCheckNAdd(298); }
                  break;
               case 1171:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1360, 1362); }
                  break;
               case 1172:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1172, 1173); }
                  break;
               case 1173:
                  if (curChar == 46)
                     { jjCheckNAdd(304); }
                  break;
               case 1174:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1363, 1365); }
                  break;
               case 1175:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1175, 1176); }
                  break;
               case 1176:
                  if (curChar == 46)
                     { jjCheckNAdd(310); }
                  break;
               case 1177:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1366, 1368); }
                  break;
               case 1178:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1178, 1179); }
                  break;
               case 1179:
                  if (curChar == 46)
                     { jjCheckNAdd(318); }
                  break;
               case 1180:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1369, 1371); }
                  break;
               case 1181:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1181, 1182); }
                  break;
               case 1182:
                  if (curChar == 46)
                     { jjCheckNAdd(326); }
                  break;
               case 1183:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1372, 1374); }
                  break;
               case 1184:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1184, 1185); }
                  break;
               case 1185:
                  if (curChar == 46)
                     { jjCheckNAdd(332); }
                  break;
               case 1186:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1375, 1377); }
                  break;
               case 1187:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1187, 1188); }
                  break;
               case 1188:
                  if (curChar == 46)
                     { jjCheckNAdd(338); }
                  break;
               case 1189:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1378, 1380); }
                  break;
               case 1190:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1190, 1191); }
                  break;
               case 1191:
                  if (curChar == 46)
                     { jjCheckNAdd(344); }
                  break;
               case 1192:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1381, 1383); }
                  break;
               case 1193:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1193, 1194); }
                  break;
               case 1194:
                  if (curChar == 46)
                     { jjCheckNAdd(350); }
                  break;
               case 1195:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1384, 1386); }
                  break;
               case 1196:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1196, 1197); }
                  break;
               case 1197:
                  if (curChar == 46)
                     { jjCheckNAdd(356); }
                  break;
               case 1198:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1387, 1389); }
                  break;
               case 1199:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1199, 1200); }
                  break;
               case 1200:
                  if (curChar == 46)
                     { jjCheckNAdd(362); }
                  break;
               case 1201:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1390, 1392); }
                  break;
               case 1202:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1202, 1203); }
                  break;
               case 1203:
                  if (curChar == 46)
                     { jjCheckNAdd(367); }
                  break;
               case 1204:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1393, 1395); }
                  break;
               case 1205:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1205, 1206); }
                  break;
               case 1206:
                  if (curChar == 46)
                     { jjCheckNAdd(374); }
                  break;
               case 1207:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1396, 1398); }
                  break;
               case 1208:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1208, 1209); }
                  break;
               case 1209:
                  if (curChar == 46)
                     { jjCheckNAdd(381); }
                  break;
               case 1210:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1399, 1401); }
                  break;
               case 1211:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1211, 1212); }
                  break;
               case 1212:
                  if (curChar == 46)
                     { jjCheckNAdd(389); }
                  break;
               case 1213:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1402, 1405); }
                  break;
               case 1214:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1214, 1215); }
                  break;
               case 1215:
                  if (curChar == 46)
                     { jjCheckNAdd(397); }
                  break;
               case 1216:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1406, 1409); }
                  break;
               case 1217:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1217, 1218); }
                  break;
               case 1218:
                  if (curChar == 46)
                     { jjCheckNAdd(425); }
                  break;
               case 1219:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1410, 1413); }
                  break;
               case 1220:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1220, 1221); }
                  break;
               case 1221:
                  if (curChar == 46)
                     { jjCheckNAdd(441); }
                  break;
               case 1222:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1414, 1417); }
                  break;
               case 1223:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1223, 1224); }
                  break;
               case 1224:
                  if (curChar == 46)
                     { jjCheckNAdd(469); }
                  break;
               case 1225:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1418, 1420); }
                  break;
               case 1226:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1226, 1227); }
                  break;
               case 1227:
                  if (curChar == 46)
                     { jjCheckNAdd(509); }
                  break;
               case 1228:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1421, 1423); }
                  break;
               case 1229:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1229, 1230); }
                  break;
               case 1230:
                  if (curChar == 46)
                     { jjCheckNAdd(516); }
                  break;
               case 1231:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1424, 1426); }
                  break;
               case 1232:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1232, 1233); }
                  break;
               case 1233:
                  if (curChar == 46)
                     { jjCheckNAdd(524); }
                  break;
               case 1234:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1427, 1430); }
                  break;
               case 1235:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1235, 1236); }
                  break;
               case 1236:
                  if (curChar == 46)
                     { jjCheckNAdd(529); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 185:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(0, 2); }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(570, 571); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 22)
                        kind = 22;
                     { jjCheckNAddTwoStates(568, 569); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(624, 625); }
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 186;
                  break;
               case 0:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 22)
                        kind = 22;
                     { jjCheckNAddStates(1431, 1435); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddStates(1436, 1439); }
                  else if (curChar == 64)
                     { jjCheckNAddStates(1440, 1452); }
                  else if (curChar == 123)
                  {
                     if (kind > 54)
                        kind = 54;
                  }
                  if ((0x20000000200000L & l) != 0L)
                     { jjAddStates(1453, 1454); }
                  else if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 211;
                  else if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 206;
                  else if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 201;
                  else if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 197;
                  else if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 192;
                  else if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 187;
                  break;
               case 1238:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(0, 2); }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(570, 571); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 22)
                        kind = 22;
                     { jjCheckNAddTwoStates(568, 569); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(624, 625); }
                  break;
               case 187:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(0, 2); }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(570, 571); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 22)
                        kind = 22;
                     { jjCheckNAddTwoStates(568, 569); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(624, 625); }
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 185;
                  break;
               case 186:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(0, 2); }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(570, 571); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 22)
                        kind = 22;
                     { jjCheckNAddTwoStates(568, 569); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(624, 625); }
                  break;
               case 587:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(588, 589); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(590, 607); }
                  break;
               case 567:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(0, 2); }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(570, 655); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 22)
                        kind = 22;
                     { jjCheckNAddTwoStates(568, 569); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(624, 641); }
                  break;
               case 1:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(288, 290); }
                  break;
               case 3:
                  if (curChar == 92)
                     { jjAddStates(1455, 1458); }
                  break;
               case 7:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(288, 290); }
                  break;
               case 8:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(293, 302); }
                  break;
               case 9:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(303, 307); }
                  break;
               case 12:
               case 14:
               case 17:
               case 21:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(9); }
                  break;
               case 13:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 15:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 16:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 18:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 19:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 20:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 23:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(285, 287); }
                  break;
               case 25:
                  if (curChar == 92)
                     { jjAddStates(1459, 1462); }
                  break;
               case 29:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(285, 287); }
                  break;
               case 30:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(308, 317); }
                  break;
               case 31:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(318, 322); }
                  break;
               case 34:
               case 36:
               case 39:
               case 43:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(31); }
                  break;
               case 35:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 36;
                  break;
               case 37:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 38;
                  break;
               case 38:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 39;
                  break;
               case 40:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 41:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 42;
                  break;
               case 42:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 43;
                  break;
               case 44:
                  if (curChar == 123 && kind > 54)
                     kind = 54;
                  break;
               case 49:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  { jjCheckNAddTwoStates(49, 50); }
                  break;
               case 50:
                  if (curChar == 92)
                     { jjAddStates(1463, 1464); }
                  break;
               case 51:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  { jjCheckNAddTwoStates(49, 50); }
                  break;
               case 52:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  { jjCheckNAddStates(323, 331); }
                  break;
               case 53:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  { jjCheckNAddStates(332, 335); }
                  break;
               case 57:
               case 59:
               case 62:
               case 66:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(53); }
                  break;
               case 58:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 59;
                  break;
               case 60:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 61;
                  break;
               case 61:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 62;
                  break;
               case 63:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 64;
                  break;
               case 64:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 65;
                  break;
               case 65:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 66;
                  break;
               case 71:
                  { jjAddStates(1465, 1466); }
                  break;
               case 73:
               case 74:
                  { jjCheckNAddTwoStates(74, 75); }
                  break;
               case 77:
                  if ((0x20000000200L & l) != 0L)
                     { jjCheckNAddTwoStates(78, 163); }
                  break;
               case 78:
                  if ((0x200000002000L & l) != 0L)
                     { jjCheckNAddTwoStates(79, 152); }
                  break;
               case 79:
                  if ((0x1000000010000L & l) != 0L)
                     { jjCheckNAddTwoStates(80, 141); }
                  break;
               case 80:
                  if ((0x800000008000L & l) != 0L)
                     { jjCheckNAddTwoStates(81, 130); }
                  break;
               case 81:
                  if ((0x4000000040000L & l) != 0L)
                     { jjCheckNAddTwoStates(82, 119); }
                  break;
               case 82:
                  if ((0x10000000100000L & l) != 0L)
                     { jjAddStates(1467, 1468); }
                  break;
               case 83:
                  if ((0x200000002L & l) != 0L)
                     { jjCheckNAddTwoStates(84, 97); }
                  break;
               case 84:
                  if ((0x400000004000L & l) != 0L)
                     { jjCheckNAddTwoStates(85, 86); }
                  break;
               case 85:
                  if ((0x10000000100000L & l) != 0L && kind > 77)
                     kind = 77;
                  break;
               case 86:
                  if (curChar == 92)
                     { jjCheckNAddStates(1469, 1472); }
                  break;
               case 97:
                  if (curChar == 92)
                     { jjCheckNAddStates(1473, 1476); }
                  break;
               case 98:
                  if ((0x2000000020L & l) != 0L)
                     { jjCheckNAddStates(1477, 1480); }
                  break;
               case 108:
                  if (curChar == 92)
                     { jjAddStates(1481, 1483); }
                  break;
               case 119:
                  if (curChar == 92)
                     { jjCheckNAddStates(1484, 1487); }
                  break;
               case 130:
                  if (curChar == 92)
                     { jjCheckNAddStates(1488, 1491); }
                  break;
               case 141:
                  if (curChar == 92)
                     { jjCheckNAddStates(1492, 1495); }
                  break;
               case 152:
                  if (curChar == 92)
                     { jjCheckNAddStates(1496, 1499); }
                  break;
               case 163:
                  if (curChar == 92)
                     { jjCheckNAddStates(1500, 1503); }
                  break;
               case 164:
                  if ((0x1000000010L & l) != 0L)
                     { jjCheckNAddStates(1504, 1507); }
                  break;
               case 174:
                  if (curChar == 92)
                     { jjAddStates(1508, 1511); }
                  break;
               case 188:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 187;
                  break;
               case 189:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 190;
                  break;
               case 191:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 189;
                  break;
               case 192:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 191;
                  break;
               case 193:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 192;
                  break;
               case 194:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 195;
                  break;
               case 196:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 194;
                  break;
               case 197:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 196;
                  break;
               case 198:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 197;
                  break;
               case 199:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 200;
                  break;
               case 201:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 199;
                  break;
               case 202:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 201;
                  break;
               case 203:
                  if ((0x400000004L & l) != 0L)
                     { jjCheckNAddTwoStates(204, 205); }
                  break;
               case 204:
                  if ((0x200000002L & l) != 0L)
                     { jjCheckNAdd(205); }
                  break;
               case 206:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 203;
                  break;
               case 207:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 206;
                  break;
               case 208:
                  if ((0x100000001000L & l) != 0L)
                     { jjCheckNAddTwoStates(209, 210); }
                  break;
               case 209:
                  if ((0x200000002L & l) != 0L)
                     { jjCheckNAdd(210); }
                  break;
               case 211:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 208;
                  break;
               case 212:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 211;
                  break;
               case 222:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1512, 1513); }
                  break;
               case 226:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1514, 1515); }
                  break;
               case 230:
                  if (curChar == 92)
                     { jjAddStates(1516, 1518); }
                  break;
               case 233:
                  if ((0x200000002000L & l) != 0L && kind > 78)
                     kind = 78;
                  break;
               case 234:
                  if (curChar == 92)
                     { jjCheckNAddStates(1519, 1522); }
                  break;
               case 235:
                  if ((0x1000000010L & l) == 0L)
                     break;
                  if (kind > 78)
                     kind = 78;
                  { jjAddStates(1523, 1524); }
                  break;
               case 253:
                  if ((0x2000000020L & l) != 0L)
                     { jjCheckNAddStates(1525, 1528); }
                  break;
               case 256:
                  if ((0x2000000020L & l) != 0L)
                     { jjCheckNAddTwoStates(233, 234); }
                  break;
               case 258:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1529, 1530); }
                  break;
               case 261:
                  if ((0x200000002000L & l) != 0L && kind > 79)
                     kind = 79;
                  break;
               case 262:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 261;
                  break;
               case 263:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 262;
                  break;
               case 265:
                  if (curChar == 92)
                     { jjAddStates(1531, 1533); }
                  break;
               case 268:
                  if ((0x100000001000000L & l) != 0L && kind > 80)
                     kind = 80;
                  break;
               case 269:
                  if (curChar == 92)
                     { jjCheckNAddStates(1534, 1537); }
                  break;
               case 288:
                  if ((0x2000000020L & l) != 0L)
                     { jjCheckNAddStates(1538, 1541); }
                  break;
               case 291:
                  if ((0x2000000020L & l) != 0L)
                     { jjCheckNAddTwoStates(268, 269); }
                  break;
               case 293:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1542, 1543); }
                  break;
               case 296:
                  if ((0x10000000100L & l) != 0L && kind > 81)
                     kind = 81;
                  break;
               case 297:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 296;
                  break;
               case 299:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1544, 1545); }
                  break;
               case 302:
                  if ((0x80000000800000L & l) != 0L && kind > 82)
                     kind = 82;
                  break;
               case 303:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 302;
                  break;
               case 305:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1546, 1547); }
                  break;
               case 308:
                  if ((0x10000000100L & l) != 0L && kind > 83)
                     kind = 83;
                  break;
               case 309:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 308;
                  break;
               case 311:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1548, 1549); }
                  break;
               case 314:
                  if ((0x400000004000L & l) != 0L && kind > 84)
                     kind = 84;
                  break;
               case 315:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 314;
                  break;
               case 316:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 315;
                  break;
               case 317:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 316;
                  break;
               case 319:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1550, 1551); }
                  break;
               case 322:
                  if ((0x100000001000000L & l) != 0L && kind > 85)
                     kind = 85;
                  break;
               case 323:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 322;
                  break;
               case 324:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 323;
                  break;
               case 325:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 324;
                  break;
               case 327:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1552, 1553); }
                  break;
               case 330:
                  if ((0x100000001000000L & l) != 0L && kind > 86)
                     kind = 86;
                  break;
               case 331:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 330;
                  break;
               case 333:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1554, 1555); }
                  break;
               case 336:
                  if ((0x200000002000L & l) != 0L && kind > 87)
                     kind = 87;
                  break;
               case 337:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 336;
                  break;
               case 339:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1556, 1557); }
                  break;
               case 342:
                  if ((0x200000002000L & l) != 0L && kind > 88)
                     kind = 88;
                  break;
               case 343:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 342;
                  break;
               case 345:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1558, 1559); }
                  break;
               case 348:
                  if ((0x400000004000L & l) != 0L && kind > 89)
                     kind = 89;
                  break;
               case 349:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 348;
                  break;
               case 351:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1560, 1561); }
                  break;
               case 354:
                  if ((0x10000000100000L & l) != 0L && kind > 90)
                     kind = 90;
                  break;
               case 355:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 354;
                  break;
               case 357:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1562, 1563); }
                  break;
               case 360:
                  if ((0x800000008L & l) != 0L && kind > 91)
                     kind = 91;
                  break;
               case 361:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 360;
                  break;
               case 363:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1564, 1565); }
                  break;
               case 366:
                  if ((0x2000000020000L & l) != 0L && kind > 92)
                     kind = 92;
                  break;
               case 368:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1566, 1567); }
                  break;
               case 371:
                  if ((0x8000000080L & l) != 0L && kind > 93)
                     kind = 93;
                  break;
               case 372:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 371;
                  break;
               case 373:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 372;
                  break;
               case 375:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1568, 1569); }
                  break;
               case 378:
                  if ((0x1000000010L & l) != 0L && kind > 94)
                     kind = 94;
                  break;
               case 379:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 378;
                  break;
               case 380:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 379;
                  break;
               case 382:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1570, 1571); }
                  break;
               case 385:
                  if ((0x1000000010L & l) != 0L && kind > 95)
                     kind = 95;
                  break;
               case 386:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 385;
                  break;
               case 387:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 386;
                  break;
               case 388:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 387;
                  break;
               case 390:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1572, 1573); }
                  break;
               case 393:
                  if ((0x400000004000L & l) != 0L && kind > 96)
                     kind = 96;
                  break;
               case 394:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 393;
                  break;
               case 395:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 394;
                  break;
               case 396:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 395;
                  break;
               case 398:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1574, 1575); }
                  break;
               case 401:
                  if ((0x200000002000L & l) != 0L)
                     { jjCheckNAddTwoStates(402, 403); }
                  break;
               case 402:
                  if ((0x8000000080000L & l) != 0L && kind > 97)
                     kind = 97;
                  break;
               case 403:
                  if (curChar == 92)
                     { jjCheckNAddStates(1576, 1579); }
                  break;
               case 414:
                  if (curChar == 92)
                     { jjAddStates(1580, 1583); }
                  break;
               case 415:
                  if ((0x1000000010L & l) != 0L)
                     { jjCheckNAddStates(1584, 1587); }
                  break;
               case 426:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1588, 1589); }
                  break;
               case 429:
                  if ((0x8000000080000L & l) != 0L && kind > 98)
                     kind = 98;
                  break;
               case 430:
                  if (curChar == 92)
                     { jjAddStates(1590, 1593); }
                  break;
               case 442:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1594, 1595); }
                  break;
               case 445:
                  if ((0x10000000100L & l) != 0L)
                     { jjCheckNAddTwoStates(446, 447); }
                  break;
               case 446:
                  if ((0x400000004000000L & l) != 0L && kind > 99)
                     kind = 99;
                  break;
               case 447:
                  if (curChar == 92)
                     { jjCheckNAddStates(1596, 1599); }
                  break;
               case 448:
                  if ((0x200000002L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  { jjAddStates(1600, 1601); }
                  break;
               case 458:
                  if (curChar == 92)
                     { jjAddStates(1602, 1605); }
                  break;
               case 470:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1606, 1607); }
                  break;
               case 473:
                  if ((0x80000000800L & l) != 0L)
                     { jjCheckNAddTwoStates(474, 487); }
                  break;
               case 474:
                  if ((0x10000000100L & l) != 0L)
                     { jjCheckNAddTwoStates(475, 476); }
                  break;
               case 475:
                  if ((0x400000004000000L & l) != 0L && kind > 100)
                     kind = 100;
                  break;
               case 476:
                  if (curChar == 92)
                     { jjCheckNAddStates(1608, 1611); }
                  break;
               case 477:
                  if ((0x200000002L & l) == 0L)
                     break;
                  if (kind > 100)
                     kind = 100;
                  { jjAddStates(1612, 1613); }
                  break;
               case 487:
                  if (curChar == 92)
                     { jjCheckNAddStates(1614, 1617); }
                  break;
               case 498:
                  if (curChar == 92)
                     { jjAddStates(1618, 1621); }
                  break;
               case 499:
                  if ((0x400000004L & l) != 0L)
                     { jjCheckNAddStates(1622, 1625); }
                  break;
               case 510:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1626, 1627); }
                  break;
               case 513:
                  if ((0x20000000200L & l) != 0L && kind > 101)
                     kind = 101;
                  break;
               case 514:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 513;
                  break;
               case 515:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 514;
                  break;
               case 517:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1628, 1629); }
                  break;
               case 520:
                  if ((0x200000002000L & l) != 0L && kind > 102)
                     kind = 102;
                  break;
               case 521:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 520;
                  break;
               case 522:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 521;
                  break;
               case 523:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 522;
                  break;
               case 525:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1630, 1631); }
                  break;
               case 530:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1632, 1633); }
                  break;
               case 533:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddTwoStates(534, 535); }
                  break;
               case 534:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddTwoStates(534, 535); }
                  break;
               case 535:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(536, 537); }
                  break;
               case 536:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddTwoStates(534, 535); }
                  break;
               case 537:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddStates(663, 671); }
                  break;
               case 538:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddStates(672, 675); }
                  break;
               case 542:
               case 544:
               case 547:
               case 551:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(538); }
                  break;
               case 543:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 544;
                  break;
               case 545:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 546;
                  break;
               case 546:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 547;
                  break;
               case 548:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 549;
                  break;
               case 549:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 550;
                  break;
               case 550:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 551;
                  break;
               case 552:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(536, 553); }
                  break;
               case 553:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddStates(676, 684); }
                  break;
               case 554:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddStates(685, 688); }
                  break;
               case 556:
               case 558:
               case 561:
               case 565:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(554); }
                  break;
               case 557:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 558;
                  break;
               case 559:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 560;
                  break;
               case 560:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 561;
                  break;
               case 562:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 563;
                  break;
               case 563:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 564;
                  break;
               case 564:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 565;
                  break;
               case 568:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 22)
                     kind = 22;
                  { jjCheckNAddTwoStates(568, 569); }
                  break;
               case 569:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(570, 571); }
                  break;
               case 570:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 22)
                     kind = 22;
                  { jjCheckNAddTwoStates(568, 569); }
                  break;
               case 571:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 22)
                     kind = 22;
                  { jjCheckNAddStates(689, 697); }
                  break;
               case 572:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 22)
                     kind = 22;
                  { jjCheckNAddStates(698, 701); }
                  break;
               case 576:
               case 578:
               case 581:
               case 585:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(572); }
                  break;
               case 577:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 578;
                  break;
               case 579:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 580;
                  break;
               case 580:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 581;
                  break;
               case 582:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 583;
                  break;
               case 583:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 584;
                  break;
               case 584:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 585;
                  break;
               case 588:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 114)
                     kind = 114;
                  { jjCheckNAddTwoStates(588, 589); }
                  break;
               case 589:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(590, 591); }
                  break;
               case 590:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 114)
                     kind = 114;
                  { jjCheckNAddTwoStates(588, 589); }
                  break;
               case 591:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 114)
                     kind = 114;
                  { jjCheckNAddStates(702, 710); }
                  break;
               case 592:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 114)
                     kind = 114;
                  { jjCheckNAddStates(711, 714); }
                  break;
               case 596:
               case 598:
               case 601:
               case 605:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(592); }
                  break;
               case 597:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 598;
                  break;
               case 599:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 600;
                  break;
               case 600:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 601;
                  break;
               case 602:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 603;
                  break;
               case 603:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 604;
                  break;
               case 604:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 605;
                  break;
               case 606:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(590, 607); }
                  break;
               case 607:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 114)
                     kind = 114;
                  { jjCheckNAddStates(715, 723); }
                  break;
               case 608:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 114)
                     kind = 114;
                  { jjCheckNAddStates(724, 727); }
                  break;
               case 610:
               case 612:
               case 615:
               case 619:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(608); }
                  break;
               case 611:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 612;
                  break;
               case 613:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 614;
                  break;
               case 614:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 615;
                  break;
               case 616:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 617;
                  break;
               case 617:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 618;
                  break;
               case 618:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 619;
                  break;
               case 620:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(0, 2); }
                  break;
               case 621:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(0, 2); }
                  break;
               case 623:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(624, 625); }
                  break;
               case 624:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(0, 2); }
                  break;
               case 625:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(728, 737); }
                  break;
               case 626:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(738, 742); }
                  break;
               case 630:
               case 632:
               case 635:
               case 639:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(626); }
                  break;
               case 631:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 632;
                  break;
               case 633:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 634;
                  break;
               case 634:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 635;
                  break;
               case 636:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 637;
                  break;
               case 637:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 638;
                  break;
               case 638:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 639;
                  break;
               case 640:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(624, 641); }
                  break;
               case 641:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(743, 752); }
                  break;
               case 642:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(753, 757); }
                  break;
               case 644:
               case 646:
               case 649:
               case 653:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(642); }
                  break;
               case 645:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 646;
                  break;
               case 647:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 648;
                  break;
               case 648:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 649;
                  break;
               case 650:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 651;
                  break;
               case 651:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 652;
                  break;
               case 652:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 653;
                  break;
               case 654:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(570, 655); }
                  break;
               case 655:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 22)
                     kind = 22;
                  { jjCheckNAddStates(758, 766); }
                  break;
               case 656:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 22)
                     kind = 22;
                  { jjCheckNAddStates(767, 770); }
                  break;
               case 658:
               case 660:
               case 663:
               case 667:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(656); }
                  break;
               case 659:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 660;
                  break;
               case 661:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 662;
                  break;
               case 662:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 663;
                  break;
               case 664:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 665;
                  break;
               case 665:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 666;
                  break;
               case 666:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 667;
                  break;
               case 668:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 22)
                     kind = 22;
                  { jjCheckNAddStates(1431, 1435); }
                  break;
               case 669:
                  if (curChar == 64)
                     { jjCheckNAddStates(1440, 1452); }
                  break;
               case 670:
                  if ((0x20000000200L & l) != 0L)
                     { jjCheckNAddTwoStates(671, 720); }
                  break;
               case 671:
                  if ((0x200000002000L & l) != 0L)
                     { jjCheckNAddTwoStates(672, 709); }
                  break;
               case 672:
                  if ((0x1000000010000L & l) != 0L)
                     { jjCheckNAddTwoStates(673, 698); }
                  break;
               case 673:
                  if ((0x800000008000L & l) != 0L)
                     { jjCheckNAddTwoStates(674, 687); }
                  break;
               case 674:
                  if ((0x4000000040000L & l) != 0L)
                     { jjCheckNAddTwoStates(675, 676); }
                  break;
               case 675:
                  if ((0x10000000100000L & l) != 0L && kind > 72)
                     kind = 72;
                  break;
               case 676:
                  if (curChar == 92)
                     { jjCheckNAddStates(1634, 1637); }
                  break;
               case 687:
                  if (curChar == 92)
                     { jjCheckNAddStates(1638, 1641); }
                  break;
               case 698:
                  if (curChar == 92)
                     { jjCheckNAddStates(1642, 1645); }
                  break;
               case 709:
                  if (curChar == 92)
                     { jjCheckNAddStates(1646, 1649); }
                  break;
               case 720:
                  if (curChar == 92)
                     { jjCheckNAddStates(1650, 1653); }
                  break;
               case 721:
                  if ((0x1000000010L & l) != 0L)
                     { jjCheckNAddStates(1654, 1657); }
                  break;
               case 731:
                  if ((0x1000000010000L & l) != 0L)
                     { jjAddStates(1658, 1659); }
                  break;
               case 732:
                  if ((0x200000002L & l) != 0L)
                     { jjCheckNAddTwoStates(733, 746); }
                  break;
               case 733:
                  if ((0x8000000080L & l) != 0L)
                     { jjAddStates(1660, 1661); }
                  break;
               case 734:
                  if ((0x2000000020L & l) != 0L && kind > 73)
                     kind = 73;
                  break;
               case 735:
                  if (curChar == 92)
                     { jjAddStates(1662, 1664); }
                  break;
               case 746:
                  if (curChar == 92)
                     { jjCheckNAddStates(1665, 1668); }
                  break;
               case 757:
                  if (curChar == 92)
                     { jjAddStates(1669, 1671); }
                  break;
               case 768:
                  if ((0x200000002000L & l) != 0L)
                     { jjCheckNAddTwoStates(769, 806); }
                  break;
               case 769:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1672, 1673); }
                  break;
               case 770:
                  if ((0x1000000010L & l) != 0L)
                     { jjCheckNAddTwoStates(771, 784); }
                  break;
               case 771:
                  if ((0x20000000200L & l) != 0L)
                     { jjAddStates(1674, 1675); }
                  break;
               case 772:
                  if ((0x200000002L & l) != 0L && kind > 74)
                     kind = 74;
                  break;
               case 773:
                  if (curChar == 92)
                     { jjAddStates(1676, 1678); }
                  break;
               case 784:
                  if (curChar == 92)
                     { jjCheckNAddStates(1679, 1682); }
                  break;
               case 795:
                  if (curChar == 92)
                     { jjAddStates(1683, 1685); }
                  break;
               case 806:
                  if (curChar == 92)
                     { jjAddStates(1686, 1688); }
                  break;
               case 817:
                  if ((0x4000000040L & l) != 0L)
                     { jjCheckNAddTwoStates(818, 892); }
                  break;
               case 818:
                  if ((0x800000008000L & l) != 0L)
                     { jjCheckNAddTwoStates(819, 881); }
                  break;
               case 819:
                  if ((0x400000004000L & l) != 0L)
                     { jjCheckNAddTwoStates(820, 870); }
                  break;
               case 820:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 821;
                  break;
               case 822:
                  if ((0x4000000040L & l) != 0L)
                     { jjAddStates(1689, 1690); }
                  break;
               case 823:
                  if ((0x200000002L & l) != 0L)
                     { jjAddStates(1691, 1692); }
                  break;
               case 824:
                  if ((0x800000008L & l) != 0L)
                     { jjAddStates(1693, 1694); }
                  break;
               case 825:
                  if ((0x2000000020L & l) != 0L && kind > 75)
                     kind = 75;
                  break;
               case 826:
                  if (curChar == 92)
                     { jjAddStates(1695, 1697); }
                  break;
               case 837:
                  if (curChar == 92)
                     { jjAddStates(1698, 1700); }
                  break;
               case 848:
                  if (curChar == 92)
                     { jjAddStates(1701, 1703); }
                  break;
               case 859:
                  if (curChar == 92)
                     { jjAddStates(1704, 1706); }
                  break;
               case 870:
                  if (curChar == 92)
                     { jjCheckNAddStates(1707, 1710); }
                  break;
               case 881:
                  if (curChar == 92)
                     { jjCheckNAddStates(1711, 1714); }
                  break;
               case 882:
                  if ((0x2000000020L & l) != 0L)
                     { jjCheckNAddStates(1715, 1718); }
                  break;
               case 892:
                  if (curChar == 92)
                     { jjCheckNAddStates(1719, 1722); }
                  break;
               case 903:
                  if (curChar == 92)
                     { jjAddStates(1723, 1725); }
                  break;
               case 914:
                  if ((0x800000008L & l) != 0L)
                     { jjCheckNAddTwoStates(915, 976); }
                  break;
               case 915:
                  if ((0x10000000100L & l) != 0L)
                     { jjAddStates(1726, 1727); }
                  break;
               case 916:
                  if ((0x200000002L & l) != 0L)
                     { jjCheckNAddTwoStates(917, 954); }
                  break;
               case 917:
                  if ((0x4000000040000L & l) != 0L)
                     { jjCheckNAddTwoStates(918, 943); }
                  break;
               case 918:
                  if ((0x8000000080000L & l) != 0L)
                     { jjAddStates(1728, 1729); }
                  break;
               case 919:
                  if ((0x2000000020L & l) != 0L)
                     { jjCheckNAddTwoStates(920, 921); }
                  break;
               case 920:
                  if ((0x10000000100000L & l) != 0L && kind > 76)
                     kind = 76;
                  break;
               case 921:
                  if (curChar == 92)
                     { jjCheckNAddStates(1730, 1733); }
                  break;
               case 932:
                  if (curChar == 92)
                     { jjAddStates(1734, 1736); }
                  break;
               case 943:
                  if (curChar == 92)
                     { jjCheckNAddStates(1737, 1740); }
                  break;
               case 954:
                  if (curChar == 92)
                     { jjCheckNAddStates(1741, 1744); }
                  break;
               case 965:
                  if (curChar == 92)
                     { jjAddStates(1745, 1747); }
                  break;
               case 976:
                  if (curChar == 92)
                     { jjCheckNAddStates(1748, 1751); }
                  break;
               case 987:
                  if (curChar == 92)
                     { jjAddStates(1752, 1754); }
                  break;
               case 999:
               case 1000:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 116)
                     kind = 116;
                  { jjCheckNAddTwoStates(1000, 1001); }
                  break;
               case 1001:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(1002, 1003); }
                  break;
               case 1002:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 116)
                     kind = 116;
                  { jjCheckNAddTwoStates(1000, 1001); }
                  break;
               case 1003:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 116)
                     kind = 116;
                  { jjCheckNAddStates(1188, 1196); }
                  break;
               case 1004:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 116)
                     kind = 116;
                  { jjCheckNAddStates(1197, 1200); }
                  break;
               case 1008:
               case 1010:
               case 1013:
               case 1017:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(1004); }
                  break;
               case 1009:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1010;
                  break;
               case 1011:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1012;
                  break;
               case 1012:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1013;
                  break;
               case 1014:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1015;
                  break;
               case 1015:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1016;
                  break;
               case 1016:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1017;
                  break;
               case 1018:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(1002, 1019); }
                  break;
               case 1019:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 116)
                     kind = 116;
                  { jjCheckNAddStates(1201, 1209); }
                  break;
               case 1020:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 116)
                     kind = 116;
                  { jjCheckNAddStates(1210, 1213); }
                  break;
               case 1022:
               case 1024:
               case 1027:
               case 1031:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(1020); }
                  break;
               case 1023:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1024;
                  break;
               case 1025:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1026;
                  break;
               case 1026:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1027;
                  break;
               case 1028:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1029;
                  break;
               case 1029:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1030;
                  break;
               case 1030:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1031;
                  break;
               case 1032:
                  if (curChar == 92)
                     { jjCheckNAddStates(1755, 1758); }
                  break;
               case 1033:
                  if ((0x1000000010L & l) != 0L)
                     { jjCheckNAddStates(1759, 1762); }
                  break;
               case 1043:
                  if (curChar == 92)
                     { jjCheckNAddStates(1763, 1766); }
                  break;
               case 1054:
                  if (curChar == 92)
                     { jjCheckNAddStates(1767, 1770); }
                  break;
               case 1065:
                  if ((0x20000000200000L & l) != 0L)
                     { jjAddStates(1453, 1454); }
                  break;
               case 1067:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddTwoStates(1068, 1075); }
                  break;
               case 1069:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  jjstateSet[jjnewStateCnt++] = 1070;
                  break;
               case 1070:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddStates(1258, 1261); }
                  break;
               case 1071:
                  if ((0x7e0000007eL & l) != 0L && kind > 106)
                     kind = 106;
                  break;
               case 1072:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAdd(1071); }
                  break;
               case 1073:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddTwoStates(1071, 1072); }
                  break;
               case 1074:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddStates(1262, 1264); }
                  break;
               case 1075:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddStates(1265, 1269); }
                  break;
               case 1076:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAdd(1068); }
                  break;
               case 1077:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddTwoStates(1076, 1068); }
                  break;
               case 1078:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddStates(1270, 1272); }
                  break;
               case 1079:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddStates(1273, 1276); }
                  break;
               case 1080:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1081;
                  break;
               case 1082:
                  if ((0x7fffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(1283, 1286); }
                  break;
               case 1085:
                  if (curChar == 92)
                     { jjAddStates(1771, 1772); }
                  break;
               case 1086:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(1283, 1286); }
                  break;
               case 1087:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1287, 1296); }
                  break;
               case 1088:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1297, 1301); }
                  break;
               case 1092:
               case 1094:
               case 1097:
               case 1101:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(1088); }
                  break;
               case 1093:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1094;
                  break;
               case 1095:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1096;
                  break;
               case 1096:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1097;
                  break;
               case 1098:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1099;
                  break;
               case 1099:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1100;
                  break;
               case 1100:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1101;
                  break;
               case 1103:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(1302, 1304); }
                  break;
               case 1105:
                  if (curChar == 92)
                     { jjAddStates(1773, 1776); }
                  break;
               case 1109:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(1302, 1304); }
                  break;
               case 1110:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1305, 1314); }
                  break;
               case 1111:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1315, 1319); }
                  break;
               case 1114:
               case 1116:
               case 1119:
               case 1123:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(1111); }
                  break;
               case 1115:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1116;
                  break;
               case 1117:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1118;
                  break;
               case 1118:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1119;
                  break;
               case 1120:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1121;
                  break;
               case 1121:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1122;
                  break;
               case 1122:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1123;
                  break;
               case 1125:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(1320, 1322); }
                  break;
               case 1127:
                  if (curChar == 92)
                     { jjAddStates(1777, 1780); }
                  break;
               case 1131:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(1320, 1322); }
                  break;
               case 1132:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1323, 1332); }
                  break;
               case 1133:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1333, 1337); }
                  break;
               case 1136:
               case 1138:
               case 1141:
               case 1145:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(1133); }
                  break;
               case 1137:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1138;
                  break;
               case 1139:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1140;
                  break;
               case 1140:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1141;
                  break;
               case 1142:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1143;
                  break;
               case 1143:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1144;
                  break;
               case 1144:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1145;
                  break;
               case 1147:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1080;
                  break;
               case 1148:
                  if (curChar == 92)
                     { jjCheckNAddStates(1436, 1439); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 185:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 22)
                        kind = 22;
                     { jjCheckNAddTwoStates(568, 569); }
                  }
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(0, 2); }
                  break;
               case 0:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 22)
                     kind = 22;
                  { jjCheckNAddStates(1431, 1435); }
                  break;
               case 1238:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 22)
                        kind = 22;
                     { jjCheckNAddTwoStates(568, 569); }
                  }
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(0, 2); }
                  break;
               case 187:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 22)
                        kind = 22;
                     { jjCheckNAddTwoStates(568, 569); }
                  }
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(0, 2); }
                  break;
               case 186:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 22)
                        kind = 22;
                     { jjCheckNAddTwoStates(568, 569); }
                  }
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(0, 2); }
                  break;
               case 587:
               case 588:
               case 590:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 114)
                     kind = 114;
                  { jjCheckNAddTwoStates(588, 589); }
                  break;
               case 567:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 22)
                        kind = 22;
                     { jjCheckNAddTwoStates(568, 569); }
                  }
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(0, 2); }
                  break;
               case 1:
               case 7:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(288, 290); }
                  break;
               case 23:
               case 29:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(285, 287); }
                  break;
               case 49:
               case 51:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 71)
                     kind = 71;
                  { jjCheckNAddTwoStates(49, 50); }
                  break;
               case 71:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1465, 1466); }
                  break;
               case 73:
               case 74:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(74, 75); }
                  break;
               case 533:
               case 534:
               case 536:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddTwoStates(534, 535); }
                  break;
               case 568:
               case 570:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 22)
                     kind = 22;
                  { jjCheckNAddTwoStates(568, 569); }
                  break;
               case 620:
               case 624:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(0, 2); }
                  break;
               case 621:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(0, 2); }
                  break;
               case 999:
               case 1000:
               case 1002:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 116)
                     kind = 116;
                  { jjCheckNAddTwoStates(1000, 1001); }
                  break;
               case 1082:
               case 1086:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1283, 1286); }
                  break;
               case 1103:
               case 1109:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1302, 1304); }
                  break;
               case 1125:
               case 1131:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1320, 1322); }
                  break;
               default : if (i1 == 0 || l1 == 0 || i2 == 0 ||  l2 == 0) break; else break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 1237 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_1(){
   switch(curChar)
   {
      case 42:
         return jjMoveStringLiteralDfa1_1(0x10L);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa1_1(long active0){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 1;
   }
   switch(curChar)
   {
      case 47:
         if ((active0 & 0x10L) != 0L)
            return jjStopAtPos(1, 4);
         break;
      default :
         return 2;
   }
   return 2;
}

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, "\74\41\55\55", "\55\55\76", "\176\75", 
"\174\75", "\136\75", "\44\75", "\52\75", null, "\175", "\50", "\51", "\56", "\73", 
"\72", "\52", "\57", "\55", "\75", "\133", "\135", null, null, "\176", null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, };
protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   if (jjmatchedPos < 0)
   {
      if (image == null)
         curTokenImage = "";
      else
         curTokenImage = image.toString();
      beginLine = endLine = input_stream.getEndLine();
      beginColumn = endColumn = input_stream.getEndColumn();
   }
   else
   {
      String im = jjstrLiteralImages[jjmatchedKind];
      curTokenImage = (im == null) ? input_stream.GetImage() : im;
      beginLine = input_stream.getBeginLine();
      beginColumn = input_stream.getBeginColumn();
      endLine = input_stream.getEndLine();
      endColumn = input_stream.getEndColumn();
   }
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}
static final int[] jjnextStates = {
   621, 622, 623, 529, 530, 533, 552, 524, 525, 528, 516, 517, 523, 509, 510, 515, 
   469, 470, 473, 498, 441, 442, 445, 458, 425, 426, 429, 430, 397, 398, 401, 414, 
   389, 390, 396, 381, 382, 388, 374, 375, 380, 367, 368, 373, 362, 363, 366, 356, 
   357, 361, 350, 351, 355, 344, 345, 349, 338, 339, 343, 332, 333, 337, 326, 327, 
   331, 318, 319, 325, 310, 311, 317, 304, 305, 309, 298, 299, 303, 292, 293, 297, 
   264, 265, 288, 257, 258, 263, 229, 230, 253, 1150, 1151, 1152, 222, 1153, 1154, 1155, 
   226, 1156, 1157, 1158, 230, 1159, 1160, 1161, 258, 263, 1162, 1163, 1164, 265, 1165, 1166, 
   1167, 293, 297, 1168, 1169, 1170, 299, 303, 1171, 1172, 1173, 305, 309, 1174, 1175, 1176, 
   311, 317, 1177, 1178, 1179, 319, 325, 1180, 1181, 1182, 327, 331, 1183, 1184, 1185, 333, 
   337, 1186, 1187, 1188, 339, 343, 1189, 1190, 1191, 345, 349, 1192, 1193, 1194, 351, 355, 
   1195, 1196, 1197, 357, 361, 1198, 1199, 1200, 363, 366, 1201, 1202, 1203, 368, 373, 1204, 
   1205, 1206, 375, 380, 1207, 1208, 1209, 382, 388, 1210, 1211, 1212, 390, 396, 1213, 1214, 
   1215, 398, 401, 1216, 1217, 1218, 426, 429, 1219, 1220, 1221, 442, 445, 1222, 1223, 1224, 
   470, 473, 1225, 1226, 1227, 510, 515, 1228, 1229, 1230, 517, 523, 1231, 1232, 1233, 525, 
   528, 1234, 1235, 1236, 530, 533, 552, 498, 458, 430, 414, 288, 253, 214, 215, 216, 
   44, 217, 45, 218, 46, 219, 47, 567, 586, 620, 640, 654, 221, 225, 229, 257, 
   264, 292, 298, 304, 310, 318, 326, 332, 338, 344, 350, 356, 362, 367, 374, 381, 
   389, 397, 425, 441, 469, 509, 516, 524, 529, 68, 69, 77, 174, 23, 24, 25, 
   1, 2, 3, 587, 606, 1, 9, 12, 13, 15, 18, 10, 11, 2, 3, 1, 
   10, 11, 2, 3, 23, 31, 34, 35, 37, 40, 32, 33, 24, 25, 23, 32, 
   33, 24, 25, 49, 53, 57, 58, 60, 63, 55, 56, 50, 49, 55, 56, 50, 
   72, 73, 76, 73, 75, 76, 89, 90, 94, 91, 92, 95, 96, 94, 91, 92, 
   94, 91, 92, 95, 105, 102, 103, 106, 107, 105, 102, 103, 105, 102, 103, 106, 
   111, 112, 84, 97, 116, 113, 114, 117, 118, 116, 113, 114, 116, 113, 114, 117, 
   122, 123, 83, 108, 127, 124, 125, 128, 129, 127, 124, 125, 127, 124, 125, 128, 
   133, 134, 82, 119, 138, 135, 136, 139, 140, 138, 135, 136, 138, 135, 136, 139, 
   144, 145, 81, 130, 149, 146, 147, 150, 151, 149, 146, 147, 149, 146, 147, 150, 
   155, 156, 80, 141, 160, 157, 158, 161, 162, 160, 157, 158, 160, 157, 158, 161, 
   171, 168, 169, 172, 173, 171, 168, 169, 171, 168, 169, 172, 177, 178, 78, 163, 
   182, 179, 180, 183, 184, 182, 179, 180, 182, 179, 180, 183, 245, 246, 233, 234, 
   242, 239, 240, 243, 244, 242, 239, 240, 242, 239, 240, 243, 250, 247, 248, 251, 
   252, 250, 247, 248, 250, 247, 248, 251, 255, 256, 230, 280, 281, 268, 269, 272, 
   273, 277, 274, 275, 278, 279, 277, 274, 275, 277, 274, 275, 278, 285, 282, 283, 
   286, 287, 285, 282, 283, 285, 282, 283, 286, 290, 291, 265, 400, 401, 414, 406, 
   407, 411, 408, 409, 412, 413, 411, 408, 409, 411, 408, 409, 412, 422, 419, 420, 
   423, 424, 422, 419, 420, 422, 419, 420, 423, 428, 429, 430, 433, 434, 438, 435, 
   436, 439, 440, 438, 435, 436, 438, 435, 436, 439, 444, 445, 458, 455, 452, 453, 
   456, 457, 455, 452, 453, 455, 452, 453, 456, 461, 462, 446, 447, 466, 463, 464, 
   467, 468, 466, 463, 464, 466, 463, 464, 467, 472, 473, 498, 484, 481, 482, 485, 
   486, 484, 481, 482, 484, 481, 482, 485, 490, 491, 475, 476, 495, 492, 493, 496, 
   497, 495, 492, 493, 495, 492, 493, 496, 506, 503, 504, 507, 508, 506, 503, 504, 
   506, 503, 504, 507, 532, 533, 552, 534, 538, 542, 543, 545, 548, 540, 541, 535, 
   534, 540, 541, 535, 554, 556, 557, 559, 562, 555, 541, 534, 535, 555, 541, 534, 
   535, 568, 572, 576, 577, 579, 582, 574, 575, 569, 568, 574, 575, 569, 588, 592, 
   596, 597, 599, 602, 594, 595, 589, 588, 594, 595, 589, 608, 610, 611, 613, 616, 
   609, 595, 588, 589, 609, 595, 588, 589, 621, 626, 630, 631, 633, 636, 628, 629, 
   622, 623, 621, 628, 629, 622, 623, 642, 644, 645, 647, 650, 643, 629, 621, 622, 
   623, 643, 629, 621, 622, 623, 656, 658, 659, 661, 664, 657, 575, 568, 569, 657, 
   575, 568, 569, 679, 680, 684, 681, 682, 685, 686, 684, 681, 682, 684, 681, 682, 
   685, 690, 691, 675, 676, 695, 692, 693, 696, 697, 695, 692, 693, 695, 692, 693, 
   696, 701, 702, 674, 687, 706, 703, 704, 707, 708, 706, 703, 704, 706, 703, 704, 
   707, 712, 713, 673, 698, 717, 714, 715, 718, 719, 717, 714, 715, 717, 714, 715, 
   718, 728, 725, 726, 729, 730, 728, 725, 726, 728, 725, 726, 729, 738, 739, 743, 
   740, 741, 744, 745, 743, 740, 741, 743, 740, 741, 744, 749, 750, 734, 735, 754, 
   751, 752, 755, 756, 754, 751, 752, 754, 751, 752, 755, 760, 761, 733, 746, 765, 
   762, 763, 766, 767, 765, 762, 763, 765, 762, 763, 766, 776, 777, 781, 778, 779, 
   782, 783, 781, 778, 779, 781, 778, 779, 782, 787, 788, 772, 773, 792, 789, 790, 
   793, 794, 792, 789, 790, 792, 789, 790, 793, 798, 799, 771, 784, 803, 800, 801, 
   804, 805, 803, 800, 801, 803, 800, 801, 804, 809, 810, 770, 795, 814, 811, 812, 
   815, 816, 814, 811, 812, 814, 811, 812, 815, 822, 859, 829, 830, 834, 831, 832, 
   835, 836, 834, 831, 832, 834, 831, 832, 835, 840, 841, 825, 826, 845, 842, 843, 
   846, 847, 845, 842, 843, 845, 842, 843, 846, 851, 852, 824, 837, 856, 853, 854, 
   857, 858, 856, 853, 854, 856, 853, 854, 857, 862, 863, 823, 848, 867, 864, 865, 
   868, 869, 867, 864, 865, 867, 864, 865, 868, 873, 874, 821, 878, 875, 876, 879, 
   880, 878, 875, 876, 878, 875, 876, 879, 889, 886, 887, 890, 891, 889, 886, 887, 
   889, 886, 887, 890, 895, 896, 819, 881, 900, 897, 898, 901, 902, 900, 897, 898, 
   900, 897, 898, 901, 906, 907, 818, 892, 911, 908, 909, 912, 913, 911, 908, 909, 
   911, 908, 909, 912, 924, 925, 929, 926, 927, 930, 931, 929, 926, 927, 929, 926, 
   927, 930, 935, 936, 920, 921, 940, 937, 938, 941, 942, 940, 937, 938, 940, 937, 
   938, 941, 946, 947, 919, 932, 951, 948, 949, 952, 953, 951, 948, 949, 951, 948, 
   949, 952, 957, 958, 918, 943, 962, 959, 960, 963, 964, 962, 959, 960, 962, 959, 
   960, 963, 968, 969, 917, 954, 973, 970, 971, 974, 975, 973, 970, 971, 973, 970, 
   971, 974, 979, 980, 916, 965, 984, 981, 982, 985, 986, 984, 981, 982, 984, 981, 
   982, 985, 990, 991, 915, 976, 995, 992, 993, 996, 997, 995, 992, 993, 995, 992, 
   993, 996, 999, 1018, 1000, 1004, 1008, 1009, 1011, 1014, 1006, 1007, 1001, 1000, 1006, 1007, 
   1001, 1020, 1022, 1023, 1025, 1028, 1021, 1007, 1000, 1001, 1021, 1007, 1000, 1001, 1040, 1037, 
   1038, 1041, 1042, 1040, 1037, 1038, 1040, 1037, 1038, 1041, 1046, 1047, 732, 757, 1051, 1048, 
   1049, 1052, 1053, 1051, 1048, 1049, 1051, 1048, 1049, 1052, 1057, 1058, 671, 720, 1062, 1059, 
   1060, 1063, 1064, 1062, 1059, 1060, 1062, 1059, 1060, 1063, 1071, 1072, 1073, 1074, 1071, 1072, 
   1073, 1076, 1068, 1077, 1078, 1079, 1076, 1068, 1077, 1076, 1068, 1077, 1078, 1082, 1102, 1124, 
   1084, 1085, 1146, 1082, 1083, 1084, 1085, 1082, 1088, 1092, 1093, 1095, 1098, 1090, 1084, 1085, 
   1091, 1082, 1090, 1084, 1085, 1091, 1103, 1104, 1105, 1103, 1111, 1114, 1115, 1117, 1120, 1112, 
   1113, 1104, 1105, 1103, 1112, 1113, 1104, 1105, 1125, 1126, 1127, 1125, 1133, 1136, 1137, 1139, 
   1142, 1134, 1135, 1126, 1127, 1125, 1134, 1135, 1126, 1127, 1082, 1102, 1124, 1083, 1084, 1085, 
   1146, 1156, 230, 253, 1159, 258, 263, 1162, 265, 288, 1165, 293, 297, 1168, 299, 303, 
   1171, 305, 309, 1174, 311, 317, 1177, 319, 325, 1180, 327, 331, 1183, 333, 337, 1186, 
   339, 343, 1189, 345, 349, 1192, 351, 355, 1195, 357, 361, 1198, 363, 366, 1201, 368, 
   373, 1204, 375, 380, 1207, 382, 388, 1210, 390, 396, 1213, 398, 401, 414, 1216, 426, 
   429, 430, 1219, 442, 445, 458, 1222, 470, 473, 498, 1225, 510, 515, 1228, 517, 523, 
   1231, 525, 528, 1234, 530, 533, 552, 568, 621, 622, 623, 569, 570, 624, 641, 655, 
   670, 731, 768, 817, 903, 914, 987, 998, 999, 1018, 1032, 1043, 1054, 1066, 1147, 4, 
   6, 7, 8, 26, 28, 29, 30, 51, 52, 71, 72, 83, 108, 91, 92, 85, 
   93, 102, 103, 84, 104, 100, 101, 85, 86, 113, 114, 115, 124, 125, 82, 126, 
   135, 136, 81, 137, 146, 147, 80, 148, 157, 158, 79, 159, 168, 169, 78, 170, 
   166, 167, 79, 152, 179, 180, 77, 181, 223, 224, 227, 228, 247, 248, 249, 239, 
   240, 233, 241, 237, 238, 254, 255, 233, 234, 259, 260, 282, 283, 284, 274, 275, 
   268, 276, 289, 290, 268, 269, 294, 295, 300, 301, 306, 307, 312, 313, 320, 321, 
   328, 329, 334, 335, 340, 341, 346, 347, 352, 353, 358, 359, 364, 365, 369, 370, 
   376, 377, 383, 384, 391, 392, 399, 400, 408, 409, 402, 410, 419, 420, 401, 421, 
   417, 418, 402, 403, 427, 428, 435, 436, 429, 437, 443, 444, 452, 453, 446, 454, 
   450, 451, 463, 464, 445, 465, 471, 472, 481, 482, 475, 483, 479, 480, 492, 493, 
   474, 494, 503, 504, 473, 505, 501, 502, 474, 487, 511, 512, 518, 519, 526, 527, 
   531, 532, 681, 682, 675, 683, 692, 693, 674, 694, 703, 704, 673, 705, 714, 715, 
   672, 716, 725, 726, 671, 727, 723, 724, 672, 709, 732, 757, 734, 735, 740, 741, 
   742, 751, 752, 733, 753, 762, 763, 764, 770, 795, 772, 773, 778, 779, 780, 789, 
   790, 771, 791, 800, 801, 802, 811, 812, 813, 823, 848, 824, 837, 825, 826, 831, 
   832, 833, 842, 843, 844, 853, 854, 855, 864, 865, 866, 875, 876, 820, 877, 886, 
   887, 819, 888, 884, 885, 820, 870, 897, 898, 818, 899, 908, 909, 910, 916, 965, 
   919, 932, 926, 927, 920, 928, 937, 938, 939, 948, 949, 918, 950, 959, 960, 917, 
   961, 970, 971, 972, 981, 982, 915, 983, 992, 993, 994, 1037, 1038, 768, 1039, 1035, 
   1036, 769, 806, 1048, 1049, 731, 1050, 1059, 1060, 670, 1061, 1086, 1087, 1106, 1108, 1109, 
   1110, 1128, 1130, 1131, 1132, 
};
private static final boolean jjCanMove_0(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec2[i2] & l2) != 0L);
      default :
         if ((jjbitVec0[i1] & l1) != 0L)
            return true;
         return false;
   }
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(Exception e)
   {
      jjmatchedKind = 0;
      jjmatchedPos = -1;
      matchedToken = jjFillToken();
      return matchedToken;
   }
   image = jjimage;
   image.setLength(0);
   jjimageLen = 0;

   for (;;)
   {
     switch(curLexState)
     {
       case 0:
         jjmatchedKind = 2;
         jjmatchedPos = -1;
         curPos = 0;
         curPos = jjMoveStringLiteralDfa0_0();
         if (jjmatchedPos < 0 || (jjmatchedPos == 0 && jjmatchedKind > 117))
         {
            jjmatchedKind = 117;
            jjmatchedPos = 0;
         }
         break;
       case 1:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_1();
         if (jjmatchedPos == 0 && jjmatchedKind > 5)
         {
            jjmatchedKind = 5;
         }
         break;
     }
     if (jjmatchedKind != 0x7fffffff)
     {
        if (jjmatchedPos + 1 < curPos)
           input_stream.backup(curPos - jjmatchedPos - 1);
        if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           matchedToken = jjFillToken();
           TokenLexicalActions(matchedToken);
       if (jjnewLexState[jjmatchedKind] != -1)
         curLexState = jjnewLexState[jjmatchedKind];
           return matchedToken;
        }
        else if ((jjtoSkip[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
         if (jjnewLexState[jjmatchedKind] != -1)
           curLexState = jjnewLexState[jjmatchedKind];
           continue EOFLoop;
        }
        jjimageLen += jjmatchedPos + 1;
      if (jjnewLexState[jjmatchedKind] != -1)
        curLexState = jjnewLexState[jjmatchedKind];
        curPos = 0;
        jjmatchedKind = 0x7fffffff;
        try {
           curChar = input_stream.readChar();
           continue;
        }
        catch (java.io.IOException e1) { }
     }
     int error_line = input_stream.getEndLine();
     int error_column = input_stream.getEndColumn();
     String error_after = null;
     boolean EOFSeen = false;
     try { input_stream.readChar(); input_stream.backup(1); }
     catch (java.io.IOException e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
        if (curChar == '\n' || curChar == '\r') {
           error_line++;
           error_column = 0;
        }
        else
           error_column++;
     }
     if (!EOFSeen) {
        input_stream.backup(1);
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
     }
     throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
   }
  }
}

void SkipLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      default :
         break;
   }
}
void MoreLexicalActions()
{
   jjimageLen += (lengthOfMatch = jjmatchedPos + 1);
   switch(jjmatchedKind)
   {
      default :
         break;
   }
}
void TokenLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      case 25 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                                  matchedToken.image = ParserUtils.trimBy(image, 1, 1);
         break;
      case 78 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                         matchedToken.image = ParserUtils.trimBy(image, 0, 2);
         break;
      case 79 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                         matchedToken.image = ParserUtils.trimBy(image, 0, 3);
         break;
      case 80 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                         matchedToken.image = ParserUtils.trimBy(image, 0, 2);
         break;
      case 81 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                       matchedToken.image = ParserUtils.trimBy(image, 0, 2);
         break;
      case 82 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                       matchedToken.image = ParserUtils.trimBy(image, 0, 2);
         break;
      case 83 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                       matchedToken.image = ParserUtils.trimBy(image, 0, 2);
         break;
      case 84 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                           matchedToken.image = ParserUtils.trimBy(image, 0, 4);
         break;
      case 85 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                           matchedToken.image = ParserUtils.trimBy(image, 0, 4);
         break;
      case 86 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                              matchedToken.image = ParserUtils.trimBy(image, 0, 2);
         break;
      case 87 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                              matchedToken.image = ParserUtils.trimBy(image, 0, 2);
         break;
      case 88 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                              matchedToken.image = ParserUtils.trimBy(image, 0, 2);
         break;
      case 89 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                              matchedToken.image = ParserUtils.trimBy(image, 0, 2);
         break;
      case 90 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                              matchedToken.image = ParserUtils.trimBy(image, 0, 2);
         break;
      case 91 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                              matchedToken.image = ParserUtils.trimBy(image, 0, 2);
         break;
      case 92 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                            matchedToken.image = ParserUtils.trimBy(image, 0, 1);
         break;
      case 93 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                               matchedToken.image = ParserUtils.trimBy(image, 0, 3);
         break;
      case 94 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                               matchedToken.image = ParserUtils.trimBy(image, 0, 3);
         break;
      case 95 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = ParserUtils.trimBy(image, 0, 4);
         break;
      case 96 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = ParserUtils.trimBy(image, 0, 4);
         break;
      case 97 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                             matchedToken.image = ParserUtils.trimBy(image, 0, 2);
         break;
      case 98 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = ParserUtils.trimBy(image, 0, 1);
         break;
      case 99 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                             matchedToken.image = ParserUtils.trimBy(image, 0, 2);
         break;
      case 100 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                         matchedToken.image = ParserUtils.trimBy(image, 0, 3);
         break;
      case 101 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                    matchedToken.image = ParserUtils.trimBy(image, 0, 3);
         break;
      case 102 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                      matchedToken.image = ParserUtils.trimBy(image, 0, 4);
         break;
      case 103 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                              matchedToken.image = ParserUtils.trimBy(image, 0, 1);
         break;
      case 107 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                                            matchedToken.image = ParserUtils.trimUrl(image);
         break;
      default :
         break;
   }
}
private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

    /** Constructor. */
    public CSS3ParserTokenManager(CharStream stream){


    input_stream = stream;
  }

  /** Constructor. */
  public CSS3ParserTokenManager (CharStream stream, int lexState){
    ReInit(stream);
    SwitchTo(lexState);
  }

  /** Reinitialise parser. */
  
  public void ReInit(CharStream stream)
  {


    jjmatchedPos =
    jjnewStateCnt =
    0;
    curLexState = defaultLexState;
    input_stream = stream;
    ReInitRounds();
  }

  private void ReInitRounds()
  {
    int i;
    jjround = 0x80000001;
    for (i = 1237; i-- > 0;)
      jjrounds[i] = 0x80000000;
  }

  /** Reinitialise parser. */
  public void ReInit(CharStream stream, int lexState)
  
  {
    ReInit(stream);
    SwitchTo(lexState);
  }

  /** Switch to specified lex state. */
  public void SwitchTo(int lexState)
  {
    if (lexState >= 2 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
    else
      curLexState = lexState;
  }


/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
   "COMMENT",
};

/** Lex State array. */
public static final int[] jjnewLexState = {
   -1, -1, -1, 1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
};
static final long[] jjtoToken = {
   0xffff8000037e0007L, 0x7ffdffffffffffL, 
};
static final long[] jjtoSkip = {
   0x10L, 0x0L, 
};
static final long[] jjtoSpecial = {
   0x0L, 0x0L, 
};
static final long[] jjtoMore = {
   0x28L, 0x0L, 
};
    protected CharStream  input_stream;

    private final int[] jjrounds = new int[1237];
    private final int[] jjstateSet = new int[2 * 1237];
    private final StringBuilder jjimage = new StringBuilder();
    private StringBuilder image = jjimage;
    private int jjimageLen;
    private int lengthOfMatch;
    protected int curChar;
}
